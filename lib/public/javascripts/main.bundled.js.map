{"version":3,"sources":["namespace.js","common.js","modelsAndCollections.js","templates.js","alert.js","article_detailed.js","article_summary.js","content_item_filters.js","event.js","generic.js","impact_tag.js","new_article.js","org.js","recipe.js","recipe_creator.js","setting.js","sous_chef.js","subject_tag.js","user_setting.js","active_alerts.js","article_comparisons.js","article_detailed_events.js","article_detailed_impact_tag_attributes.js","article_detailed_impact_tags.js","article_detailed_subject_tags.js","article_detailed_timeseries.js","article_summaries.js","articles_detailed.js","dimensions.js","impact_tag_attributes.js","impact_tags.js","loaded_alerts.js","po.js","recipes.js","rss_feeds.js","settings.js","sous_chefs.js","subject_tags.js","user_settings.js","ApprovalRiver.js","Articles.js","Settings.js","Submit.js","helpers.js","AA_Base.js","AA_BaseArticleViz.js","AA_BaseForm.js","AA_BaseRecipe.js","AA_BaseSetting.js","AA_BaseSettingListItemRecipe.js","AA_BaseTag.js","AddArticle.js","Alert.js","ArticleComparisonGrid.js","ArticleDetail.js","ArticleDetailAttributeTag.js","ArticleDetailEvent.js","ArticleDetailImpactTag.js","ArticleDetailSubjectTag.js","ArticleDetailSubjectTagEditor.js","ArticleDetailVizArticleReferrers.js","ArticleDetailVizDeviceFacet.js","ArticleDetailVizDomainFacets.js","ArticleDetailVizInternalExternal.js","ArticleDetailVizTweets.js","ArticleDrawerSorter.js","ArticleSearcher.js","ArticleSummaryDrawer.js","ArticleSummaryDrawerImpactTag.js","ArticleSummaryDrawerSubjectTag.js","ArticleSummaryRow.js","DateRangerSearcher.js","DivisionSwitcher.js","EventCreator.js","EventCreatorFromAlert.js","EventEditor.js","RecipeCreator.js","RecipeDrawer.js","RecipeDrawerStatic.js","RecipeEditor.js","SettingFacebookPage.js","SettingImpactTag.js","SettingPassword.js","SettingRssFeed.js","SettingSingle.js","SettingStaffTwitterList.js","SettingSubjectTag.js","SettingTwitterUser.js","ShowAllRecipes.js","SousChefDrawerItem.js","SousChefForm.js","Tag.js","TagEventFilter.js","TagSectionNav.js","routing.js","init.js"],"names":["helpers","templates","models","collections","app","views","routing","common","sortNumber","a","b","htmlDecode","input","e","document","createElement","innerHTML","childNodes","nodeValue","toUserTimezone","utcDatestamp","utc_moment","moment","user_timezone_moment","tz","pageData","timezone","conciseDate","user_timezone_string","format","addCommas","x","toString","replace","console","log","prettyDatestamp","toTitleCase","str","charAt","toUpperCase","slice","length","boolToStr","bool","response","modelsAndCollections","toggle","key","this","set","get","setBoolByIds","trueKey","idKey","ids","split","map","id","forEach","where_obj","where","addTagsFromId","objectList","item","subject_tags","$","extend","d","org","filter","f","events","ev","impact_tags","metadata","prop","value","metadataHash","undefined","autolink","text","Autolinker","link","toLowerCase","serviceFromSousChef","sousChef","methodFromSousChef","prettyName","alertSourceIdToSousChef","sourceId","alertSourceIdToService","sous_chef","getRecipeFromId","recipe_id","recipe_json","recipe","recipes","instance","findWhere","toJSON","prettyPrintSource","src","prettyDateTimeFormat","prettyDate","fullIsoDate","formatEnabled","formatDefaultEventEnabled","getAssociatedItems","itemKey","itemsObj","_","obj","name","escapeQuotes","term","displayRecipeParams","recipeId","options","search_query","getHeadlineFromArticleId","Id","title","article","articleSkeletons","extractDomain","url","begins_with_http","test","domain","match","handleEventCounts","lastRun","scheduleBy","eventCountsInfo","msg","pending","articles","prettyMetricName","superPretty","super_pretty_names","isActiveMetric","metricName","sortKey","sort_name","class_name","prettyMetricValue","aggregationOperation","toFixed","convertLineBreaksToHtml","alert","Model","Backbone","urlRoot","article_detailed","getTimeSeriesStats","timeseries_filtered","timeseries_stats","timeseries_metrics","timeseries_stat","keys","filtered_obj","timeseries_metric","stat_has_metric","contains","timestamp","article_summary","defaults","active_selected","selected_for_compare","selected_for_detail","parse","articleSummaryJson","articles_with_data","addInfo","hydrateTagsInfo","tags","nestTags","addTagInputOptions","articleJson","subject_tag_models","tagModel","tag_model","clone","subject_tag_input_options","dehydratedObj","tagKeys","full_key","tag_key","sort","localeCompare","impact_tag_categories","chain","impact_tags_full","pluck","uniq","nameText","attr","color","attributeColorLookup","impact_tag_levels","sortBy","unnestedObj","subject_tag_columns","chunk","subject_tags_full","i","push","subject_tags_grouped","impact_tag_columns","d3","nest","category","rollup","list","level","count","entries","impact_tags_grouped","filters","initialize","on","checkChanged","assembleQueryParams","previous","current","JSON","stringify","trigger","silent","model_json","each","val","isArray","join","sort_by","event","eventModel","events_with_hydrated_tags","hydrateTags","hydrated_tags","tag_ids","generic","impact_tag","type","active","new_article","viewing","enabled","itemObj","isObject","input_options","isEmpty","set_val","recipe_creator","setting","subject_tag","user_setting","active_alerts","Collection","model","comparator","created","article_comparisons","content_items","prototype","apply","arguments","updateHash","remove","add","Error","isString","bind","setComparator","dimensionName","sort_ascending","comparators","articleComparisonModel","comparison_value","date","metric","bars","dimensionKind","dimensions","getSelectDimensions","kind","reverseSortBy","sortByFunction","left","right","l","r","ascending","query_params","hash","getHash","redrawMarkers","first","addLevelColors","promotions","promotion","article_detailed_events","eventsInfo","pagination","total","event_tag_facets","facets","eventItem","article_detailed_impact_tag_attributes","categories_instance","levels_instance","article_detailed_impact_tags","call","article_detailed_subject_tags","article_detailed_timeseries","article_summaries","tag_facets","articles_detailed","selects","cloneMetrics","getAll","metrics","select","selects_list","dimension_selects","that","selectInfo","dimension_json","select_name","dimension_model","getSelectsForIsotope","selects_for_isotope","caster","impact_tag_attributes","loaded_alerts","recipe_all_instance","po","sorts","schemas_instance","article_rss_feeds","settings","sous_chefs","user_settings","ApprovalRiver","View","el","click .scroll-to","click .load-more","_subviews","$drawer","$content","$divisionSwitcher","setLoading","listenTo","section_mode","sectionMode","update","alerts","render","$target","state","saveHash","mode","router","navigate","reset","killAllSubviews","find","my-recipes","$drawerPointers","$recipes","has_recipes","show_all_view","ShowAllRecipes","show_all_markup","pause_init","setState","html","manual_recipe_model","manual_recipe_view","RecipeDrawerStatic","manual_recipe_markup","append","recipeModel","item_view","RecipeDrawer","item_markup","create","clearLoadMoreButton","recipe_creator_prep_markup","drawerCreatePrep","sousChefSchema","SousChefDrawerItem","item_el","SousChefForm","alertModel","Alert","DivisionSwitcher","content","setActiveAlertsPerRecipe","provenance","loaded_alerts_collection","fetch_options","data","success","collection","setLoadMoreButton","error","err","recipe_ids","recipe_alerts_counts","recipe_alerts_pending_count","alert_models_in_memory","fetch","loadMoreAlerts","gifizeLoadMoreButton","currentTarget","pagination_info","current_page","page","$loadMore","load_more_str","page_size","per_page","total_pages","currently_loaded_count","total_pending_for_recipe_id","more_alerts_to_load","remaining_alerts","to_load_string","min","appendTo","scrollTo","dest","buffer","animate","scrollTop","position","top","parseFloat","css","Articles","click .add-to-comparison","click .option-title .show-hide","change .toggle-all","click #alter-comparison-marker","click .load-more[data-which=\"article-summaries\"]","click .go-to-detail","$subjectTagList","$impactTagCategoriesList","$impactTagLevelsList","$impactTagList","tag_list_els","parent","categories","levels","$articleList","$drawerPointersCntnr","$articleTitleSearcher","$dateRangeSearcher","$articleDrawerSorter","$addArticle","isotopeCntnr","isotopeChild","drawer","reportErr","comparison","detail","updateTagContainerByCounts","content_item_filters","fetchByParameters","onScrollTick","drawerPointers","tag","tag_view","TagSectionNav","article_view","ArticleSummaryDrawer","subjectTag","$option","ArticleSearcher","DateRangeSearcher","ArticleDrawerSorter","bakeArticleAdder","$articleCount","responseJSON","status_code","message","increment","params","then","status","articleSummary","section_selection_key","selected_for_section","compare","article_grid","ArticleComparisonGrid","$listContainer","select_sorters","isotope","initCntnr","removeClass","staged_article_comparison_models","compare_models","loadRows","detailModelId","staged_article_detail","addClass","loadPage","toggleAllDrawer","checked","selected_for","summaryModel","setActiveArticleSummaries","current_filtered_set","shiftSelectable","addToComparison","action","$btn","selected_models","relayout","ArticleSummaryRow","addItem","comparisonModel","stagedArticleComparisonModels","detailModel","ArticleDetail","bakeInteractiveBits","summary_model","mode_collections","mode_collection","article_ids","showHideList","open","$list","parents","slide_duration","slideUp","slideDown","moreSummaryArticles","text_str","button_str","article_summaries_collection","total_pending_for_search","updateComparisonMarker","operation","group","stuck","sticky_original_offset","content_scrollTop","scrollHeight","$sticky","$el","toggleClass","goToDetail","article_id","current_mode","add_article_view","AddArticle","_time_picker","toggleModal","facet","has_facet","Settings","click button.add","default_recipes","rss-feeds","view_name","recipe_name","rss_feed_recipe_name","template","rssFeedRecipeFactory","staff-twitter-lists","staff_twitter_list_to_promotion_recipe_name","staffTwitterListRecipeFactory","twitter-users","staff_twitter_user_to_promotion_recipe_name","twitterUserRecipeFactory","facebook-pages","staff_facebook_page_to_promotion_recipe_name","facebookPageRecipeFactory","subject-tags","impact-tags","userSetting","user_setting_views","email","view","SettingSingle","password","SettingPassword","userSettingName","oSetting","setting_el","setting_view","valueKey","orgSetting","recipeInfo","recipeShorthand","recipe_models","$parent_el","setGroupEmpty","view_options","parentEl","$subject_tag_container","subject_tag_view","SettingSubjectTag","impactTag","$impact_tag_container","impact_tag_view","SettingImpactTag","$settingGroup","is_empty","$inputsContainer","siblings","setting_name","setting_view_info","reportError","Submit","submit form","$formContainer","event_creator_view","EventCreator","disableModal","saveMsg","determineBehavior","behavior","getAllIds","drawerData","drawerDatum","listId","$isotopeCntnr","itemSelector","masonry","columnWidth","getSortData","clearCntnr","sortAscending","isUndefined","flattenDataStructures","init","dict","converters","dict_of_json_ready_csvs","object","top_level_info","topLevelInfo","info","article_datetime","article_timestamp","article_authors","article_subject_tags","article_impact_tags","article_impact_tag_categories","article_impact_tag_levels","article_links","article_entities","article_keywords","quant_metrics","quantMetric","device_facets","deviceFacet","pageviews","entrances","non_empty_social_facets","social_network_facets","networkFacet","tweets","flat_tweets","pick","tweet","datetime","hashtags","img_urls","story_ids","urls","user_mentions","timeseries","stats","augmented_stats","stat","augmented_promotions","Array","end_timestamp","augmented_events","evt","comparisons","transformed_comparisons","values","group_key","killView","destroy","undelegateEvents","silenceView","silenceAllSubviews","subview","AA_BaseArticleViz","tagName","className","setMarkup","setTitle","setContainer","section_title","calcComparisonMarkerParams","comparison_marker_operation","comparison_marker_group","$vizContainer","fancyPercent","decimal","Math","round","renderMarker","vizContainer","d3_vizContainer","_columns","selectAll","enter","bar_container","classed","style","bullet_markers","calcLeftOffset","dimension","leftOffset","parseInt","alignment","percent","redrawMarker","transition","duration","ease","styleTween","starting_px","parent_px","parentNode","offsetWidth","starting_percent","ending_percent","interpolate","max","scale","group_metric","articleComparisons","offset_percent","this_metrics_info","linear","range","AA_BaseForm","click .modal-overlay","click .modal-close","click .article-assignee","killPropagation","stopPropagation","assignmentTemplateFactory","bakeModal","modal_markup","hasClass","$form","refresh","postRender","search","initArticleTitleSearcher","pikaday","initPikaday","$submitMsgText","el_modal_outer","window","drag","removeSetEventPrefix","identity","bakeFormInputRow","fieldName","isDefaultEvent","selectedVal","groups","time_of_day","crontab","minutes","input_type","is_hidden","field_name_pp","which_name","markup","has_help_link","help","has_help_desc","description","skipped_fields","formJsonToMarkup","input_markup","placeholder","assignees","assignee","set_event_content_items","datepicker","required","textNumberOrHidden","which","selected","hidden","searchstring","number","paragraph","option","checkbox","namespacer","checkboxItemObj","idx","styleCheckboxLabel","checkboxId","uniqueId","selected_ids","bgColor","whiteOrBlack","name_changes","q","img_url","min_followers","interval","utcDate","Date","toLocaleString","$typeahead","full_schema","self","full_info","vals","$typeaheadRow","insertAfter","typeahead","highlight","minLength","displayKey","async","source","query","syncResults","asyncResults","query_url","ajax","dataType","results","preventDefault","addArticleAssignee","contentItem","newContentItem","existingContentItems","$articleAssignments","getSettings","removeArticleAssignee","time_picker","$form_el","Pikaday","field","showTime","use24hour","onSelect","moment_timezone_date","getMoment","full_date_string","pretty_date_string","date_obj_in_schema","selected_date","setMoment","bgColorHex","rgbColor","hexToRgb","g","yiq","hex","shorthandRegex","m","result","exec","bakeButtons","includeDelete","combineFormSchemaWithVals","schema_obj","settings_obj","setting_schema","selected_array","array_fields","concat","validate","requiredKeys","formData","cb","ctx","existing_keys","missing_keys","s","difference","existingVal","existingKey","flatten","intersection","missingKey","validateNew","schema","required_keys","printMsgOnSubmit","setDefaultEvent","$form_selector","$this","form_options","serializeJSON","canDrag","D3_modal_inner","dy","dx","elements_to_not_drag","$dragging_element","sourceEvent","explicitOriginalTarget","can_drag","every","elementToDrag","AA_BaseRecipe","change .schedule_by","getScheduleByVal","$select","updateScheduleByLayout","hide","show","separateSchemaFromEvent","optionsJson","settingsInfo","eventInfo","AA_BaseSetting","change .js-input-item.color-picker","keyup .js-input-item","keypress .js-input-item","change .js-input-item","click .js-input-item","change select.js-input-item","click .input-action-btn[data-which=\"cancel\"]","submit .js-parent-form","click .multi-child.js-destroy","click input.js-destroy","keepPreviousValueIfExists","initializeBase","compareFormData","setDataChanged","opacity","height","queue","next","bakeInputActions","inputHasChanged","incoming_val","esc_key_code","metaKey","keyCode","revertToPreviousSettingVal","getCurrentFormData","inputHasChangedFromKeypress","return_key_code","command_key_modifying","saveModel","saved_data","getRelevantSavedFormData","current_data","data_is_different","isEqual","form_data","standardized_form_data","standardizeEmptyFields","data_object","opts","setupOpts","keys_list","output_object","input_name","splitInputNameIntoKeysArray","keys_value_list","pop","deepGet","keysValue","deepSet","buttons_markup","inputActionsFactory","$modal","modalFactory","initColorPicker","$colorPicker","spectrum","preferredFormat","showPaletteOnly","hideAfterPaletteSelect","palette","palettes","change","toHexString","getVal","dataLocation","value_keys","dataObj","returnObjBool","rest","nextKey","setVals","inputs_data","assembleInputsData","inputData","$input","existing_value","trim","set_actions","normal","data_location","set_action","subject-tag","impact-tag","input_data_object","preSaveHook","existing_attrs","attrs_to_save","keep","save","patch","modelSaved","saveSuccess","postSaveHook","delay","destroyModel","wait","AA_BaseSettingListItemRecipe","parent_el","checkIfNew","default_model_opts","homepage","AA_BaseTag","colorLuminance","lum","String","c","rgb","substr","styleLayout","bg_color","text_color","bg_color_darker","background-color","border","styleLayoutWithTooltip","tooltip_text","getTooltipText","add_article_schema","addArticleSchema","event_schema","fieldData","event_data","formListToObject","event_creator_options","form_obj","formItem","form_value","addArticle","new_article_model","authors","author","click .approval-btn-container[data-which=\"no\"]","click .approval-btn-container[data-which=\"yes\"]","river_item_markup","alertFactory","bakeEventCreator","EventCreatorFromAlert","$modalOuter","modal_opening","focus","createEvent","removeItem","makeInsignificant","itemModel","destroyMode","making_insignificant","removeAlertColorfully","onAnimationEnd","animation_duration","animation_opts","width","margin-top","margin-right","margin-bottom","overflow","white-space","click .header-el","setMetricHeaders","metric_comparisons","addComparisonInfo","select_dimensions","grid_markup","articleGridContainerFactory","comparison_marker_max","metricsList","full_group_comparison_metrics","comparison_metrics","metricInfo","comparison_data","sortColumn","dimension_name","display_operation","display_operation_abbreve","metric_name","$header_el","click .tab","click .modal-toggle","click .modal-parent[data-which=\"subject\"] .modal-close","destroyView","article_detailed_events_collection","event_filters","eventsGallery","impact_tag_attribute","fetchEventsByParameters","articles_impact_tags_collection","articles_impact_tag_categories_collection","articles_impact_tag_levels_collection","chartSelector","onWindowResize_throttled","throttle","onWindowResize","resize","article_detail_markup","articleDetailFactory","ms","$eventCreator","$subjectTagsContainer","$impactTagsContainer","$impactTagCategoriesContainer","$impactTagLevelsContainer","$editSubjectTagsContainer","$impactTagsList","$eventsContainer","$eventsGalleryContainer","$downloadData","bakeTags","setDetailNavigation","setActiveTab","bakeEventGalleryFurniture","bakeEventsGalleryFilters","setDownloadButton","data_to_download","article_story_id","story_id","article_title","article_url","article_domain","summary","entities","links","keywords","referrer_metrics","tweet_info","pretty_keys","flat_dict","zip","zipMultiple","zippedBlob","zippedBlobHref","bakeChart","datum","timeseriesData","spottedTail","calcStickyOffsets","sticky_anchor_offset","$sticky_anchor","TagEventFilter","filterModel","bakeArticleVizs","$articleVizsReadingContainer","$articleVizsTweetsContainer","device_facet_view","ArticleDetailVizDeviceFacet","device_facet_markup","internal_external_facet_view","ArticleDetailVizInternalExternal","internal_external_facet_markup","domain_facet_view","ArticleDetailVizDomainFacets","domain_facet_markup","ArticleDetailVizArticleReferrers","tweets_view","ArticleDetailVizTweets","tweet_markup","ArticleDetailEvent","setActiveEvents","getCurrentItems","updateEventGalleryItems","subjectTagModel","subject_tag_el","ArticleDetailSubjectTagEditor","articleTags","editSubjectTagsWrapper","ArticleDetailSubjectTag","impactTagModel","ArticleDetailImpactTag","attributeModel","which_collection","containers","container","ArticleDetailAttributeTag","filterEventsByDateRange","timestampRange","empty","clearQuery","intersectQuery","$tab","setActiveTabFromClick","prev_model","next_model","prev_title","next_title","comparison_models","comparison_ids","this_id","this_id_index","indexOf","$nav","$prev","$next","prev_model_index","next_model_index","prepend","moreEvents","setLoadMoreEventsButton","$loadMoreBtn","this_collection","firstRun","content_item_ids","collection_pagination","tag_data","tag_markup","articleDetailTagFactory","click input.destroy","event_item_markup","articleDetailEventFactory","$eventTagsContainer","bakeEventEditor","ArticleSummaryDrawerImpactTag","event_editor_view","EventEditor","saveModal","current_view","disableBtns","inSelection","destroyEvent","article_subject_tag_ids","syncToApi","articleDetailAccountSubjectTagFactory","toggleChecked","method","col","sync","modelBack","article_referrers_from_article","article_referrers","_links","ppUrl","device_facets_from_article","total_pageviews","existing_val","domain_facets_from_article","ref_domain_facets","twitter_facet","_tweets","html_without_script","setTimeout","twttr","widgets","load","change select","click .sort-direction","$sorter","$direction","sorterModels","options_markup","sorterModel","setSort","direction","toggleSortDir","keyup","listenForKeyup_debounced","debounce","listenForKeyup","unset","click .drawer-list-outer","updateActiveSelectionField","setActiveCssState","setDetailDrawerDisplay","toggleActive","drawer_list_item_markup","articleSummaryDrawerFactory","addTags","clearRadios","detailId","model_id","selectedForDetail","subject_tags_full_unique","impact_tags_full_unique","ArticleSummaryDrawerSubjectTag","click .destroy","data_for_template","calcSize","comparisonOperation","comparisonMax","comparisonGroup","articleSummaryRowFactory","subject_tags_str","impact_tags_count","d3_el","removeRow","comparison_object","val_percent","click .clear","pikaday_options","$els","$clearDateRange","$start_el","$end_el","start_opts","date_obj","getDate","picker_end","setMinDate","gotoDate","onClose","_d","filterByDate","end_opts","picker_start","setMaxDate","clearDateRange","assembleValidDates","picker","index","dates","dateInfo","click li","updateActiveState","setMode","event_creator_schema","eventCreatorSchema","flashSubmitMsg","toggleBtnsDisabled","responseText","fadeOut","alert_options","event_creator_schema_with_values","form_schema","RecipeCreator","recipe_info","recipe_schema","set_event_schema","sous_chef_name","slug","$defaultEvents","default_event_markup","renderDefaultEvent","click .drawer-list-outer:not(active)","click .settings-switch","click .toggle-default-event","renderEnabled","showHideDefaults","recipeFactory","$defautEventsBtn","$submitMsg","bakeRecipeEditor","recipe_editor_view","RecipeEditor","deactivate","killEvent","set_default_event","toggleDefaults","recipeStaticFactory","click .modal-outer","recipe_options","set_event_options","sous_chef_options","sous_chef_info","sous_chef_schema","recipe_schema_with_values","set_event_schema_with_values","default_event_schema","SettingFacebookPage","attrs","subject_tag_markup","impactTagFactory","$oldField","getPasswordEl","$newField","$confirmField","fields","setDataCorrection","old_password","new_password","confirm_password","all_good","flagErrors","confirm_error","needsCorrection","SettingRssFeed","required_fields","requiredField","saved_model_name","saved_model_value","SettingStaffTwitterList","subjectTagFactory","SettingTwitterUser","click .drawer-list-outer:not(.active)","hasRecipes","drawerMyRecipesPrepFactory","accountRecipe","sousChefDrawerItemFactory","sousChefFormFactory","bakeRecipeCreator","recipe_creator_view","new_recipe_creator_model","at","Tag","click","tagFactory","updateLayoutByCount","hasInitialized","is_active","set_bg_color","set_text_color","getCount","show_el","setCount","setOpts","isActive","getImportantModelInfo","id_key_value","filter_model","tag_list","without","find_obj","replacements","countInfo","$modalParent","$tray","centerishInViewport","el_width","outerWidth","el_height","outerHeight","v_width","v_height","Router","section","history","args","fragment","loadRecipesAlerts","setModeOnly","compareArticles","sort_ascending_str","metrics_list","metric_str","fetch_params","merge","detailArticle","is_detail_mode","getMode","getArticleIds","exists","articleId","id_regex","RegExp","approval-river","submit","articleSummariesInfo","comparisonMetrics","subject","impact","dimensionsInfo","manual_recipe","event_counts","manualEventsTotal","sousChefs","user","orgSettingsList","all","defaultRecipeNames","events_collection","go","start","starting_route","route"],"mappings":"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","file":"main.bundled.js","sourcesContent":["'use strict';\nvar helpers = {};\nvar templates = {};\nvar models = {};\nvar collections = {};\nvar app = {};\nvar views = {};\nvar routing = {};","helpers.common = {\n\tsortNumber: function(a,b) {\n\t\treturn a - b;\n\t},\n\thtmlDecode: function(input){\n\t\tvar e = document.createElement('div');\n\t\te.innerHTML = input;\n\t\treturn e.childNodes[0].nodeValue;\n\t},\n\ttoUserTimezone: function(utcDatestamp){\n\t\tvar utc_moment = moment(utcDatestamp),\n\t\t\t\tuser_timezone_moment = utc_moment.tz(pageData.timezone);\n\t\t\n\t\treturn user_timezone_moment;\n\t},\n\tconciseDate: function(utcDatestamp){\n\t\tvar user_timezone_moment = helpers.common.toUserTimezone(utcDatestamp),\n\t\t\t\tuser_timezone_string = user_timezone_moment.format('MM-DD-YY');\n\n\t\treturn user_timezone_string; // returns `6-24-14`\n\t},\n\taddCommas: function(x){\n\t\tif (x || x === 0){\n\t\t\treturn x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n\t\t} else {\n\t\t\tconsole.log('Warning: Expected string, found', x);\n\t\t\treturn '';\n\t\t}\n\t},\n\tprettyDatestamp: function(utcDatestamp){\n\t\tvar user_timezone_moment = helpers.common.toUserTimezone(utcDatestamp),\n\t\t\t\tuser_timezone_string = user_timezone_moment.format('M/D/YYYY, h:mm a');\n\n\t\treturn user_timezone_string; // returns `9/6/2014, 9:13 am`\n\t},\n\ttoTitleCase: function(str){\n\t\treturn (str.charAt(0).toUpperCase() + str.slice(1, str.length));\n\t},\n\tboolToStr: function(bool, str){\n\t\tvar response;\n\t\tif (bool){\n\t\t\tresponse = str;\n\t\t} else {\n\t\t\tresponse = '';\n\t\t}\n\t\treturn response;\n\t}\n}\n","helpers.modelsAndCollections = {\n\n\ttoggle: function(key){\n\t\tthis.set(key, !this.get(key));\n\t},\n\t\n\n\tsetBoolByIds: function(trueKey, idKey, ids, bool){\n\t\tids = ids.split('+').map(function(id){ return +id });\n\t\tids.forEach(function(id){\n\t\t\tvar where_obj = {}; where_obj[idKey] = id;\n\t\t\tif (this.where(where_obj).length) this.where(where_obj)[0].set(trueKey, bool);\n\t\t}, this);\n\t},\n\n\taddTagsFromId: function(objectList){\n\t\tobjectList.forEach(function(item){\n\t\t\titem.subject_tags = $.extend(true, [], item.subject_tags.map(function(d) {return pageData.org['subject_tags'].filter(function(f){ return f.id == d })[0] }) );\n\t\t\titem.events.forEach(function(ev){\n\t\t\t\t// console.log(pageData.org['impact_tags'])\n\t\t\t\tev.impact_tags = $.extend(true, [], ev.impact_tags.map(function(d) {return pageData.org['impact_tags'].filter(function(f){ return f.id == d })[0] }) );\n\t\t\t})\n\t\t});\n\t\treturn objectList;\n\t},\n\n\tmetadata: function(prop, value) { \n\t\tif (!this.metadataHash){\n\t\t\tthis.metadataHash = {};\n\t\t}\n\t\tif (value === undefined) {\n\t\t\treturn this.metadataHash[prop];\n\t\t} else {\n\t\t\tthis.metadataHash[prop] = value;\n\t\t}\n\n\t}\n\n}","helpers.templates = {\n\taddCommas: helpers.common.addCommas,\n\tautolink: function(text){\n\t\treturn Autolinker.link(text);\n\t},\n\ttoLowerCase: function(str){\n\t\treturn str.toLowerCase();\n\t},\n\ttoTitleCase: helpers.common.toTitleCase,\n\tserviceFromSousChef: function(sousChef){\n\t\t// TODO, For now this works but will need to be changed if we have services that are more than one word\n\t\t// Ideally the icon should be stored as base64 on the sous_chef\n\t\t// source data is stored as `:service-:task` name, e.g. `google-alert`, `reddit-search`. Split by `-` and return the first node.\n\t\treturn sousChef.split('-')[0];\n\t},\n\tmethodFromSousChef: function(sousChef){\n\t\t// source data is stored as `:service-:task` name, e.g. `google-alert`, `reddit-search`. Split by `-` and return the second node.\n\t\t// TODO, For now this works but will need to be changed if we have services that are more than one word\n\t\t// Ideally the icon should be stored as base64 on the sous_chef\n\t\treturn this.prettyName(sousChef.split('-')[1]);\n\t},\n\talertSourceIdToSousChef: function(sourceId){\n\t\t// \"facebook-page-to-event-promotion:14947c7a-11fe-11e5-aebc-c82a14194035\"\n\t\treturn sourceId.split(':')[0];\n\t},\n\talertSourceIdToService: function(sourceId){\n\t\tvar sous_chef = helpers.templates.alertSourceIdToSousChef(sourceId);\n\t\treturn helpers.templates.serviceFromSousChef(sous_chef);\n\t},\n\tgetRecipeFromId: function(recipe_id){\n\t\t// For manual alert creation\n\t\t// Those alerts will have a `recipe_id` of null, change that to `-1`, which is the id of our manual recipe\n\t\t// This isn't done in the database due to foreign key constraints\n\t\t// per issue #395 https://github.com/newslynx/issue-tracker/issues/395\n\t\tif (recipe_id === null){\n\t\t\trecipe_id = -1;\n\t\t}\n\t\tvar recipe = collections.recipes.instance.findWhere({id: recipe_id});\n\t\tvar recipe_json;\n\n\t\tif (recipe){\n\t\t\trecipe_json = recipe.toJSON();\n\t\t} else {\n\t\t\tconsole.log('ERROR, could not find recipe of id', recipe_id, 'in',  collections.recipes.instance.models)\n\t\t\tconsole.log(recipe)\n\t\t}\n\n\t\treturn recipe_json;\n\t},\n\tprettyPrintSource: function(src){\n\t\tsrc = src.replace(/-/g, ' ').replace(/_/g, ' ');\n\t\treturn helpers.templates.toTitleCase(src);\n\t},\n\t// toUserTimezone: helpers.common.toUserTimezone,\n\tprettyDateTimeFormat: 'MMM D, YYYY, h:mm a',\n\t// http://momentjs.com/docs/#/displaying/format/\n\tprettyDate: function(utcDatestamp){\n\t\tvar user_timezone_moment = helpers.common.toUserTimezone(utcDatestamp),\n\t\t\t\tuser_timezone_string = user_timezone_moment.format('MMM D, YYYY');\n\n\t\treturn user_timezone_string; // returns `Jun 23, 2014`\n\t},\n\tprettyDatestamp: helpers.common.prettyDatestamp,\n\tconciseDate: helpers.common.conciseDate,\n\tfullIsoDate: function(utcDatestamp){\n\t\tvar user_timezone_moment = helpers.common.toUserTimezone(utcDatestamp),\n\t\t\t\tuser_timezone_string = user_timezone_moment.format();\n\n\t\treturn user_timezone_string; // returns \n\t},\n\tformatEnabled: function(bool){\n\t\tif (bool) return 'Recipe is active';\n\t\treturn 'Recipe not active';\n\t},\n\tformatDefaultEventEnabled: function(bool){\n\t\tif (bool) return 'Enabled';\n\t\treturn 'Disabled';\n\t},\n\tgetAssociatedItems: function(id, itemKey, itemsObj){\n\t\titemsObj = pageData[itemsObj];\n\t\treturn _.filter(itemsObj, function(obj) { return obj[itemKey] == id });\n\t},\n\tprettyName: function(name){\n\t\t// Make any name changes here to prettify things that might not be terribly evident what they do from their API slug.\n\t\tname = name.replace(/_/g, ' ');\n    return name.charAt(0).toUpperCase() + name.slice(1);\n\t},\n\tescapeQuotes: function(term){\n\t\tif (!term) { return false; }\n\t\tif (typeof term !== 'string') { return term };\n\t\treturn term.replace(/\"/g,'&quot;')\n\t},\n\tdisplayRecipeParams: function(recipeId){\n\t\tvar recipe = helpers.templates.getRecipeFromId(recipeId);\n\t\tvar text = '';\n\t\ttext += recipe.name\n\t\tif (recipe.options && recipe.options.search_query){\n\t\t\ttext += ',<br/>' + recipe.options.search_query;\n\t\t}\n\t\treturn text;\n\t},\n\thtmlDecode: helpers.common.htmlDecode,\n\tboolToStr: helpers.common.boolToStr,\n\tgetHeadlineFromArticleId: function(Id){\n\t\tvar article = _.findWhere(pageData.articleSkeletons, {id: Id}),\n\t\t\t\ttitle;\n\t\tif (article) {\n\t\t\ttitle = article.title;\n\t\t} else {\n\t\t\ttitle = 'Article headline no longer available';\n\t\t}\n\t\treturn title;\n\t},\n\textractDomain: function(url){\n\t\tvar begins_with_http = /^http/;\n\t\tif (!begins_with_http.test(url)){\n\t\t\turl = 'http://'+url;\n\t\t}\n\t\tvar domain = url.match(/^https?\\:\\/\\/([^\\/?#]+)(?:[\\/?#]|$)/i)[0]\n\t\t\t\t\t\t\t\t\t\t.replace('www.', '')\n\t\t\t\t\t\t\t\t\t\t.replace('://', '')\n\t\t\t\t\t\t\t\t\t\t.replace(/https?/, '')\n\t\t\t\t\t\t\t\t\t\t.replace('/', '')\n\n\t\treturn domain;\n\n\t},\n\thandleEventCounts: function(lastRun, scheduleBy, eventCountsInfo){\n\t\tvar msg = '';\n\t\tif (eventCountsInfo && scheduleBy){\n\t\t\tmsg = eventCountsInfo.pending + ' pending';\n\t\t} else if (eventCountsInfo && scheduleBy == 'unscheduled'){\n\t\t\tmsg = 'Not scheduled,' + eventCountsInfo.pending + ' pending';\n\t\t} else if (!lastRun && scheduleBy){\n\t\t\tmsg = 'Scheduled to run, 0 pending';\n\t\t} else if (!eventCountsInfo && scheduleBy == 'unscheduled'){\n\t\t\tmsg = 'Not scheduled. 0 pending';\n\t\t}\n\t\treturn msg;\n\t},\n\tarticles: {\n\t\tprettyMetricName: function(name, superPretty){\n\t\t\tvar super_pretty_names = {\n\t\t\t\tsubject_tags: 'subj.',\n\t\t\t\timpact_tags: 'imp.'\n\t\t\t};\n\t\t\t// This is used in the comparison grid header when we want really short names\n\t\t\tif (superPretty && super_pretty_names[name]){\n\t\t\t\tname = super_pretty_names[name];\n\t\t\t}\n\t\t\t// Make any name changes here to prettify things that might not be terribly evident what they do from their API slug.\n\t\t\tname = name.replace(/_/g, ' ').replace('ga ', 'GA ').replace('facebook', 'FB');\n\t    return name.charAt(0).toUpperCase() + name.slice(1);\n\t\t},\n\t\tisActiveMetric: function(metricName, sortKey){\n\t\t\tvar sort_name = sortKey.replace('-metrics.','');\n\t\t\tvar class_name = (sort_name == metricName) ? 'active' : '';\n\t\t\treturn class_name;\n\t\t},\n\t\thtmlDecode: helpers.common.htmlDecode,\n\t\tprettyDatestamp: helpers.common.prettyDatestamp,\n\t\tconciseDate: helpers.common.conciseDate,\n\t\tprettyMetricValue: function(value, aggregationOperation){\n\t\t\tif (aggregationOperation == 'avg'){\n\t\t\t\tvalue = value.toFixed(2);\n\t\t\t} \n\t\t\treturn helpers.common.addCommas(value);\n\t\t},\n\t\tconvertLineBreaksToHtml: function(str){\n\t\t\tstr = str || '';\n\t\t\treturn str.replace(/\\n/g, '<br/>');\n\t\t},\n\t\ttoTitleCase: helpers.common.toTitleCase,\n\t\tboolToStr: helpers.common.boolToStr\n\t}\n}\n","// This model gets a urlRoot when it's used to create an event from an alert\nmodels.alert = {\n\t\"Model\": Backbone.Model.extend({\n\t\turlRoot: 'api/_VERSION/events'\n\t})\n}","collections.article_detailed = {\n\t\"instance\": null,\n\t\"Collection\": Backbone.Collection.extend({\n\t\tmodel: models.article_detailed.Model,\n\t\tmetadata: helpers.modelsAndCollections.metadata,\n\t\tset: function() {\n\t\t\t// You could also set this up on the model and put the `hydrateTagsInfo` and `addTagInformation` functions on the model class\n\t\t\t// Which would be a little more organized since they apply to the model and not to a collection, but this is also clean since we're just correcting\n\t\t\t// A limitation of the json not returning full tag detail\n\t\t\t// Only do this if the thing coming in is a backbone model\n\t\t\t// var incoming_model = arguments[0][0];\n\t\t\t// If this isn't a backbone model it means it's not hyrdated\n\t\t\t// Another way to check for this would be to see if it has a `subject_tags_full` property\n\t\t\t// But because accessing attributes is different between backbone models and json objects, i.e. `.get` versus dot notation\n\t\t\t// You have to test further upstream\n\t\t\t// if (!(incoming_model instanceof Backbone.Model)){\n\t\t\t// \targuments[0][0] = this.addTagInformation(incoming_model);\n\t\t\t// }\n\t\t\t// Always remove contents before setting so that we can set an existing model\n\t\t\t// Backbone.Collection.prototype.remove.call(this, this.models );\n\t\t\tBackbone.Collection.prototype.set.apply(this, arguments);\n\t\t\tthis.updateHash();\n\t\t\t// // Whenever we set an article on this model, also add it to `collections.articles_detailed.instance`\n\t\t\t// I don't think we need this line anymore because these will already be stored in article_summaries\n\t\t\t// What we could somehow do is save all the fetched data on that model\n\t\t\t// This line would come after that view is fully rendered and all data is fetched\n\t\t\t// And those data objects would need to be added back to this model\n\t\t\t// And that model would check for those values on render\n\t\t\t// Marking this as a TODO for now\n\t\t\t// Backbone.Collection.prototype.add.apply(collections.articles_detailed.instance, arguments);\n\t\t},\n\t\tupdateHash: function() {\n\t\t\t// This will just have one, unless we're doing a drawer change set which will empty\n\t\t\tif (this.length){\n\t\t\t\tthis.hash = this.first().get('id');\n\t\t\t}\n\t\t\t// this.hash = this.pluck('id')[0];\n\t\t},\n\t\tgetHash: function() {\n\t\t\treturn this.hash; \n\t\t},\n\n\t\t// hydrateTagsInfo: function(dehydratedObjectList, info, tagKeys){\n\t\t// \tdehydratedObjectList.forEach(function(dehydratedObject){\n\t\t// \t\ttagKeys.forEach(function(key){\n\t\t// \t\t\t// Add the full info on a `[key_name + '_full']` property\n\t\t// \t\t\t// This will take take ids in `obj['impact_tags']` or `obj['subject_tags']` and map them to full objects on `key + '_full'\n\t\t\t\t\t\n\t\t// \t\t\tif (dehydratedObject[key]){\n\t\t// \t\t\t\tdehydratedObject[key + '_full'] = dehydratedObject[key].map(function(id){ \n\t\t// \t\t\t\t\treturn _.chain(info[key]).findWhere({id: id}).clone().value();\n\t\t// \t\t\t\t}).sort(function(a,b){\n\t\t// \t\t\t\t\treturn a.name.localeCompare(b.name);\n\t\t// \t\t\t\t});\n\t\t// \t\t\t}\n\t\t// \t\t});\n\n\t\t// \t\t// Add `impact_tag_categories` and `impact_tag_levels` as their own items for filtering based on our hydrated info above\n\t\t// \t\t// But only if we've hydrated based on impact tag, which we don't always do because articles don't have impact tags, only subject tags\n\t\t// \t\tif (dehydratedObject.impact_tags_full){\n\t\t// \t\t\tvar impact_tag_categories = _.chain(dehydratedObject.impact_tags_full).pluck('category').uniq().value();\n\t\t// \t\t\tvar impact_tag_levels     = _.chain(dehydratedObject.impact_tags_full).pluck('level').uniq().value();\n\t\t// \t\t\tdehydratedObject['impact_tag_categories'] = impact_tag_categories.sort();\n\t\t// \t\t\tdehydratedObject['impact_tag_levels'] \t\t= impact_tag_levels.sort();\n\t\t// \t\t}\n\t\t// \t});\n\t\t// \treturn dehydratedObjectList;\n\t\t// },\n\n\t\t// Add color information for promotions\n\t\taddLevelColors: function(promotions){\n\t\t\treturn promotions.map(function(promotion){\n\t\t\t\tvar color = pageData.attributeColorLookup[promotion.level];\n\t\t\t\tpromotion.color = color;\n\t\t\t\treturn promotion;\n\t\t\t});\n\t\t},\n\n\t\t// addTagInformation: function(articleDetail){\n\t\t// \t// console.log('adding tag info')\n\t\t// \tvar info = _.clone(pageData);\n\t\t// \t// Hydrate subject tags\n\t\t// \tarticleDetail = this.hydrateTagsInfo([articleDetail], info, ['subject_tags'])[0];\n\t\t// \t// Hydrate each event\n\t\t// \tarticleDetail.events = this.hydrateTagsInfo(articleDetail.events, info, ['impact_tags']);\n\n\t\t// \tarticleDetail.promotions = this.addLevelColors(articleDetail.promotions);\n\t\t// \t// Add the impact category and level info on the parent for all of the events\n\t\t// \tvar impact_tags_full_with_dupes      = _.chain(articleDetail.events).pluck('impact_tags_full').flatten().value();\n\t\t// \tvar impact_tags_full    \t\t\t\t\t\t = _.chain(impact_tags_full_with_dupes).uniq(function(d){\n\t\t// \t\treturn d.id;\n\t\t// \t}).map(function(tag){\n\t\t// \t\t// Get counts for each tag within an event\n\t\t// \t\ttag.count = _.where(impact_tags_full_with_dupes, {id: tag.id}).length;\n\t\t// \t\treturn tag;\n\t\t// \t}).value();\n\n\n\t\t// \t// Hydrate these categories and levels with full data\n\t\t// \tvar impact_tag_categories_with_dupes = _.chain(articleDetail.events).pluck('impact_tag_categories').flatten().value();\n\n\t\t// \tvar impact_tag_categories = _.chain(impact_tag_categories_with_dupes).uniq().map(function(category){ \n\t\t// \t\tvar attr_obj = _.findWhere(info.impact_tag_categories, {name: category});\n\t\t// \t\t// Overwrite the count property with the number of events that have this attribute on this article\n\t\t// \t\tattr_obj.count = _.filter(impact_tag_categories_with_dupes, function(d){ return d == category }).length;\n\t\t// \t\treturn attr_obj;\n\t\t// \t}).value();\t\n\n\t\t// \tvar impact_tag_levels_with_dupes     = _.chain(articleDetail.events).pluck('impact_tag_levels').flatten().value();\n\n\t\t// \tvar impact_tag_levels = _.chain(impact_tag_levels_with_dupes).uniq().map(function(level){ \n\t\t// \t\tvar attr_obj = _.findWhere(info.impact_tag_levels, {name: level});\n\t\t// \t\t// Overwrite the count property with the number of events that have this attribute on this article\n\t\t// \t\tattr_obj.count = _.filter(impact_tag_levels_with_dupes, function(d){ return d == level }).length;\n\t\t// \t\treturn attr_obj;\n\t\t// \t}).value();\n\t\t\t\n\t\t// \tarticleDetail['impact_tags_full'] \t\t = impact_tags_full.sort();\n\t\t// \tarticleDetail['impact_tag_categories'] = impact_tag_categories.sort();\n\t\t// \tarticleDetail['impact_tag_levels'] \t\t = impact_tag_levels.sort();\n\n\t\t// \treturn articleDetail;\n\t\t// }\n\n\t})\n}","models.article_summary = {\n\t\"Model\": Backbone.Model.extend({\n\t\tdefaults: {\n\t\t\tactive_selected: false,\n\t\t\tselected_for_compare: false,\n\t\t\tselected_for_detail: false\n\t\t\t// in_drawer: true,\n\t\t\t// destroy: false\n\t\t},\n\t\ttoggle: helpers.modelsAndCollections.toggle,\n\n\t\tparse: function(articleSummaryJson){\n\t\t\tvar articles_with_data = this.addInfo(articleSummaryJson);\n\t\t\treturn articles_with_data;\n\t\t},\n\n\t\t// What orchestrates everything to get some the messiness out of `parse`\n\t\taddInfo: function(articleSummaryJson){\n\t\t\tarticleSummaryJson = this.hydrateTagsInfo(articleSummaryJson, pageData.tags, ['subject_tag_ids', 'impact_tag_ids']);\n\t\t\tarticleSummaryJson = this.nestTags(articleSummaryJson);\n\t\t\tarticleSummaryJson = this.addTagInputOptions(articleSummaryJson);\n\t\t\treturn articleSummaryJson;\n\t\t},\n\n\t\taddTagInputOptions: function(articleJson){\n\t\t\t// // Add a url so we can add/remove these \n\t\t\t// // These models don't exist in a collection so that's why we use urlRoot\n\t\t\tvar subject_tag_models = collections.subject_tags.instance.models.map(function(tagModel){\n\t\t\t\tvar tag_model = tagModel.clone();\n\t\t\t\ttag_model.urlRoot = 'api/_VERSION/content/'+articleJson.id+'/tags/';\n\t\t\t\treturn tag_model;\n\t\t\t});\n\t\t\tarticleJson.subject_tag_input_options = subject_tag_models;\n\t\t\treturn articleJson;\n\t\t},\n\n\t\t// For general display\n\t\thydrateTagsInfo: function(dehydratedObj, tags, tagKeys){\n\t\t\ttagKeys.forEach(function(key){\n\t\t\t\t// Add the full info on a key name with `full` in the title\n\t\t\t\t// This will take take ids in `obj['impact']` or `obj['subject']` and map them like to\n\t\t\t\t// `subject_tag_ids` => `subject_tags_full`\n\t\t\t\tif (dehydratedObj[key]){\n\t\t\t\t\tvar full_key = key.replace('_ids', 's_full'); \n\t\t\t\t\tdehydratedObj[full_key] = dehydratedObj[key].map(function(id){ \n\t\t\t\t\t\tvar tag_key = key.replace('_tag_ids',''); // They're stored on our tags object just as `subject` and and `impact`\n\t\t\t\t\t\treturn _.findWhere(tags[tag_key], {id: id});\n\t\t\t\t\t}).sort(function(a,b){\n\t\t\t\t\t\treturn a.name.localeCompare(b.name);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// Add `impact_tag_categories` and `impact_tag_levels` as their own items\n\t\t\t\tvar impact_tag_categories = _.chain(dehydratedObj.impact_tags_full)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.pluck('category')\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.uniq()\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.map(function(nameText){\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar attr = {};\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tattr.name = nameText;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tattr.color = pageData.attributeColorLookup[nameText];\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn attr;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.value();\n\n\t\t\t\tvar impact_tag_levels     = _.chain(dehydratedObj.impact_tags_full)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.pluck('level')\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.uniq()\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.map(function(nameText){\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar attr = {};\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tattr.name = nameText;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tattr.color = pageData.attributeColorLookup[nameText];\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn attr;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.value();\n\n\t\t\t\tdehydratedObj['impact_tag_categories'] = _.sortBy(impact_tag_categories, 'name');\n\t\t\t\tdehydratedObj['impact_tag_levels'] \t\t= _.sortBy(impact_tag_levels, 'name');\n\n\t\t\t});\n\t\t\treturn dehydratedObj;\n\t\t},\n\n\t\t// For display in article comparison row\n\t\tnestTags: function(unnestedObj){\n\n\t\t\t// For subject tags, chunk them into groups of three so they will be displayed as columns of no more than three. Each one looks like this and they're stored under `subject_tags_full`.\n\t\t\t\t/*\n\t\t    {\n\t\t      \"articles\": 2,\n\t\t      \"domain\": \"propalpatine.org\",\n\t\t      \"name\": \"Fracking\",\n\t\t      \"color\": \"#6a3d9a\",\n\t\t      \"id\": 5,\n\t\t      \"events\": 2\n\t\t    }\n\t\t\t\t*/\n\t\t\t\t// `tag_columns` will be a list of lists, each containing no more than three tags\n\t\t\t\tvar subject_tag_columns = [],\n\t\t\t\t\t\tchunk = 3;\n\n\t\t\t\tif (unnestedObj.subject_tags_full){\n\t\t\t\t\tfor (var i = 0; i < unnestedObj.subject_tags_full.length; i += chunk) {\n\t\t\t\t\t\tsubject_tag_columns.push( unnestedObj.subject_tags_full.slice(i,i+chunk) );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// This on the object, which will either be an empty array or one with our groups\n\t\t\t\tunnestedObj.subject_tags_grouped = subject_tag_columns;\n\n\t\t\t\tvar impact_tag_columns = [];\n\n\t\t\t\tif (unnestedObj.impact_tags_full){\n\n\t\t\t\t\t// Impact tags need more nesting. It makes most sense to group them by category\n\t\t\t\t\t// These tags look like this and they're found under `impact_tags_full`.\n\t\t\t\t\t/*\n\t\t\t\t\t{\n\t\t\t      \"category\": \"change\",\n\t\t\t      \"articles\": 2,\n\t\t\t      \"domain\": \"propalpatine.org\",\n\t\t\t      \"name\": \"legislative impact\",\n\t\t\t      \"level\": \"Institution\",\n\t\t\t      \"color\": \"#fb8072\",\n\t\t\t      \"events\": 2, \n\t\t\t      \"id\": 1\n\t\t\t    }\n\t\t\t\t\t*/\n\t\t\t\t\timpact_tag_columns = d3.nest()\n\t\t\t\t\t\t.key(function(d) { return d.category; })\n\t\t\t\t\t\t.key(function(d) { return d.name; })\n\t\t\t\t\t\t.rollup(function(list) { \n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tname: list[0].name,\n\t\t\t\t\t\t\t\tcolor: list[0].color,\n\t\t\t\t\t\t\t\tcategory: list[0].category,\n\t\t\t\t\t\t\t\tlevel: list[0].level,\n\t\t\t\t\t\t\t\tcount: list.length\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t \t\t\t.entries(unnestedObj.impact_tags_full);\n\t\t\t\t}\n\n\t\t\t\tunnestedObj.impact_tags_grouped = impact_tag_columns;\n\n\t\t\treturn unnestedObj;\n\t\t}\n\n\t})\n}","models.filters = {\n\t\"Model\": Backbone.Model.extend({\n\t\tmetadata: helpers.modelsAndCollections.metadata,\n\t\tinitialize: function(){\n\t\t\tthis.on('filter', this.checkChanged);\n\t\t\tthis.assembleQueryParams();\n\n\t\t\treturn this;\n\t\t},\n\t\tcheckChanged: function(){\n\t\t\tvar previous = this.metadata('previousParams'),\n\t\t\t\t\tcurrent = JSON.stringify(this.assembleQueryParams(true));\n\n\t\t\tif (previous != current){\n\t\t\t\tthis.trigger('hasChanged');\n\t\t\t}\n\n\t\t\treturn this;\n\t\t},\n\t\tassembleQueryParams: function(silent){\n\t\t\tvar model_json = $.extend(true, {}, this.toJSON()); \n\t\t\t_.each(model_json, function(val, key){\n\t\t\t\tif (_.isArray(val)){\n\t\t\t\t\tmodel_json[key] = val.join(',');\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (model_json.sort_by){\n\t\t\t\tmodel_json.sort = model_json.sort_by;\n\n\t\t\t\tdelete model_json.sort_by;\n\t\t\t}\n\t\t\tif (!silent){\n\t\t\t\tthis.metadata('previousParams', JSON.stringify(model_json));\n\t\t\t}\n\t\t\treturn model_json;\n\t\t}\n\t})\n}","models.event = {\n\t\"Model\": Backbone.Model.extend({\n\t\turlRoot: '/api/_VERSION/events',\n\n\t\tparse: function(eventModel){\n\t\t\tvar events_with_hydrated_tags = this.hydrateTags(eventModel);\n\t\t\treturn events_with_hydrated_tags;\n\t\t},\n\n\t\thydrateTags: function(eventModel){\n\t\t\tvar hydrated_tags = eventModel.tag_ids.map(function(id){\n\t\t\t\treturn collections.impact_tags.instance.findWhere({id: id});\n\t\t\t});\n\t\t\teventModel.impact_tags_full = hydrated_tags;\n\n\t\t\treturn eventModel;\n\t\t}\n\n\t})\n}","// Just a plain old model\nmodels.generic = {\n\t\"Model\": Backbone.Model.extend({})\n}","models.impact_tag = {\n\t\"Model\": Backbone.Model.extend({\n\t\tdefaults: {\n\t\t\ttype: 'impact',\n\t\t\tcolor: '#6699cc',\n\t\t\tactive: false,\n\t\t\tcategory: null,\n\t\t\tlevel: null\n\t\t},\n\t\ttoggle: helpers.modelsAndCollections.toggle\n\t})\n}","models.new_article = {\n\t\"Model\": Backbone.Model.extend({\n\t\turlRoot: '/api/articles'\n\t})\n}","models.org = {\n\t\"Model\": Backbone.Model.extend({\n\t\turlRoot: '/api/_VERSION/settings'\n\t})\n}","models.recipe = {\n\t\"Model\": Backbone.Model.extend({\n\t\ttoggle: helpers.modelsAndCollections.toggle,\n\t\tdefaults: {\n\t\t\tviewing: false, \n\t\t\tenabled: true // TODO, we're not using this but could implement, it's used to turn the recipe on and off\n\t\t},\n\t\tinitialize: function(itemObj){\n\t\t\tvar keys  = _.chain(itemObj.options).keys().filter(function(key){\n\t\t\t\t\t\t\tvar val = _.clone(itemObj.options[key])\n\t\t\t\t\t\t\tif (_.isObject(val) && val.input_options) {\n\t\t\t\t\t\t\t\tdelete val.input_options;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn /^set_event_/.test(key) && !_.isEmpty(val);\n\t\t\t\t\t\t}).value();\n\t\t\tvar set_val = keys.length ? true : false;\n\t\t\tthis.set('set_default_event', set_val);\n\n\t\t}\n\t})\n}","models.recipe_creator = {\n\t\"Model\": Backbone.Model.extend({\n\t\turlRoot: '/api/_VERSION/recipes'\n\t})\n}","models.setting = {\n\t\"Model\": Backbone.Model.extend({})\n}","models.sous_chef = {\n\t\"Model\": Backbone.Model.extend({\n\t\ttoggle: helpers.modelsAndCollections.toggle\n\t\t\n\t})\n}","models.subject_tag = {\n\t\"Model\": Backbone.Model.extend({\n\t\ttoggle: helpers.modelsAndCollections.toggle,\n\t\tdefaults: {\n\t\t\ttype: 'subject',\n\t\t\tcolor: '#1f78b4'\n\t\t}\n\t})\n}","models.user_setting = {\n\t\"Model\": Backbone.Model.extend({\n\t\turl: 'api/_VERSION/me'\n\t})\n}","// This is the model that holds our selected alerts\n// If it is added to this collection, it's baked to the dom\n// If it is removed from this collection, it's removed from the dom\ncollections.active_alerts = {\n\t\"instance\": null,\n\t\"Collection\": Backbone.Collection.extend({\n\t\tmodel: models.alert.Model,\n\t\tmetadata: helpers.modelsAndCollections.metadata,\n\t\turl: 'api/_VERSION/events', // This doesn't need any query paremeters because it isn't used to fetch, just to delete or POST\n\t\tcomparator: function(alert){\n\t\t\treturn alert.created;\n\t\t}\n\t})\n}","collections.article_comparisons = {\n\t\"instance\": null,\n\t\"Collection\": Backbone.Collection.extend({\n\t\tmodel: models.article_summary.Model,\n\t\tmetadata: helpers.modelsAndCollections.metadata,\n\t\turl: 'api/_VERSION/content?facets=subject_tags,impact_tags,categories,levels&incl_body=false',\n\t\t// Set our default options, these all correspond to keys in the article comparisons object. Essentially, what values should we pluck out of that to use as our comparison point\n\t\tinitialize: function(){\n\t\t\tthis.metadata('operation', 'mean');\n\t\t\tthis.metadata('group', 'all');\n\t\t\tthis.metadata('max', 'per_97_5');\n\n\t\t\treturn this;\n\t\t},\n\n\t\tparse: function(response){\n\t\t\treturn response.content_items;\n\t\t},\n\t\t\n\t\t// http://stackoverflow.com/questions/17753561/update-a-backbone-collection-property-on-add-remove-reset\n\t\tset: function() {\n\t\t\tBackbone.Collection.prototype.set.apply(this,arguments);\n\t\t\tthis.updateHash();\n\t\t},\n\t\t// updateHash on a remove\n\t\tremove: function() {\n\t\t\tBackbone.Collection.prototype.remove.apply(this,arguments);\n\t\t\tthis.updateHash();\n\t\t},\n\t\t// updateHash on a add\n\t\tadd: function() {\n\t\t\tBackbone.Collection.prototype.add.apply(this,arguments);\n\t\t\tthis.updateHash();\n\t\t},\n\t\t// Also update hash on sort\n\t\tsort: function(options) {\n\t\t\tif (!this.comparator) throw new Error('Cannot sort a set without a comparator');\n\t\t\toptions = options || {};\n\t\t\n\t\t\tif (_.isString(this.comparator) || this.comparator.length === 1) {\n\t\t\t\tthis.models = this.sortBy(this.comparator, this);\n\t\t\t} else {\n\t\t\t\tthis.models.sort(_.bind(this.comparator, this));\n\t\t\t}\n\t\t\tconsole.log('id list from comparison sort',this.pluck('id'))\n\n\t\t\tif (!options.silent) this.trigger('sort', this, options);\n\t\t\tthis.updateHash();\n\t\t\treturn this;\n\t\t},\n\t\tsetComparator: function(dimensionName){\n\t\t\tvar sort_ascending = this.metadata('sort_ascending');\n\n\t\t\tvar comparators = {};\n\t\t\tcomparators.text = function(articleComparisonModel){\n\t\t\t\tvar comparison_value = articleComparisonModel.get(dimensionName);\n\t\t\t\treturn comparison_value;\n\t\t\t}\n\t\t\tcomparators.date = comparators.text;\n\t\t\tcomparators.metric = function(articleComparisonModel){\n\t\t\t\tvar comparison_value = articleComparisonModel.get('metrics')[dimensionName];\n\t\t\t\tif (!sort_ascending){\n\t\t\t\t\tcomparison_value = comparison_value*-1;\n\t\t\t\t}\n\t\t\t\treturn comparison_value;\n\t\t\t}\n\n\t\t\tcomparators.bars = function(articleComparisonModel){\n\t\t\t\t// These are stored as `subject_tags_full` and `impact_tags_full` on the model, do some string formatting to our metric name \n\t\t\t\t// TODO, subject_tags should be sorted alphabetically\n\t\t\t\tvar comparison_value = articleComparisonModel.get(dimensionName+'_full').length\n\t\t\t\tif (!sort_ascending){\n\t\t\t\t\tcomparison_value = comparison_value*-1;\n\t\t\t\t}\n\t\t\t\treturn comparison_value;\n\t\t\t}\n\n\t\t\tvar dimensionKind = _.findWhere( collections.dimensions.instance.getSelectDimensions() , {name: dimensionName}).kind;\n\t\t\tthis.comparator = comparators[dimensionKind];\n\n\t\t\t// Adapted from this http://stackoverflow.com/questions/5013819/reverse-sort-order-with-backbone-js\n\t\t\t// Backbone won't sort non-numerical fields, `this.reverseSortBy` fixes that.\n\t\t\tif ((dimensionKind == 'text' || dimensionKind == 'date') && !sort_ascending){\n\t\t\t\tthis.comparator = this.reverseSortBy(this.comparator);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t},\n\t\treverseSortBy: function(sortByFunction) {\n\t\t\treturn function(left, right) {\n\t\t\t\tvar l = sortByFunction(left);\n\t\t\t\tvar r = sortByFunction(right);\n\n\t\t\t\tif (l === void 0) return -1;\n\t\t\t\tif (r === void 0) return 1;\n\n\t\t\t\treturn l < r ? 1 : l > r ? -1 : 0;\n\t\t\t};\n\t\t},\n\t\tupdateHash: function() {\n\t\t\tvar sort_by = this.metadata('sort_by'),\n\t\t\t\t\tascending = this.metadata('sort_ascending');\n\t\t\t\t\t\n\t\t\tvar query_params = '?sort=' + sort_by + '&asc=' + ascending;\n\t\t\tthis.hash = this.pluck('id').join('+') + query_params;\n\t\t},\n\t\tgetHash: function() {\n\t\t\treturn this.hash; \n\t\t},\n\t\tredrawMarkers: function(){\n\t\t\t// Trigger his on the collection itself to update headers\n\t\t\t// The article detail vizs piggy back on this listener to redraw themselves also\n\t\t\tthis.trigger('resetMetricHeaders');\n\t\t\t\t// Trigger this event so each comparison item can redraw itself\n\t\t\tthis.models.forEach(function(model){\n\t\t\t\tmodel.trigger('redrawMarker');\n\t\t\t});\n\t\t}\n\t})\n}","collections.article_detailed_events = {\n\t\"Collection\": Backbone.Collection.extend({\n\t\tmodel: models.event.Model,\n\t\tmetadata: helpers.modelsAndCollections.metadata,\n\t\turl: 'api/_VERSION/events?facets=tags,categories,levels&status=approved&per_page=10&creates=events', \n\t\tparse: function(eventsInfo){\n\t\t\tthis.metadata('pagination', eventsInfo.pagination);\n\t\t\tthis.metadata('total', eventsInfo.total);\n\t\t\tmodels.event_tag_facets.set(eventsInfo.facets);\n\t\t\treturn eventsInfo.events;\n\t\t},\n\t\tcomparator: function(eventItem){\n\t\t\treturn eventItem.created;\n\t\t}\n\n\t})\n}","collections.article_detailed_impact_tag_attributes = {\n\t\"categories_instance\": null,\n\t\"levels_instance\": null,\n\t\"Collection\": Backbone.Collection.extend({\n\t\tmodel: models.impact_tag.Model,\n\t\tmetadata: helpers.modelsAndCollections.metadata\n\t})\n}","// TODO, the url\ncollections.article_detailed_impact_tags = {\n\t\"instance\": null,\n\t\"Collection\": Backbone.Collection.extend({\n\t\tmodel: models.impact_tag.Model,\n\t\tset: function() {\n\t\t\t// Always remove contents before setting\n\t\t\tBackbone.Collection.prototype.remove.call(this, this.models );\n\t\t\tBackbone.Collection.prototype.set.apply(this, arguments);\n\t\t}\n\t})\n}","collections.article_detailed_subject_tags = {\n\t\"instance\": null,\n\t\"Collection\": Backbone.Collection.extend({\n\t\tmodel: models.subject_tag.Model,\n\t\t// setUrl: function(id){\n\t\t// \tthis.url = '/api/content/'+id+'/tag/';\n\t\t// \treturn this;\n\t\t// }\n\t\t// set: function() {\n\t\t// \t// Always remove contents before setting\n\t\t// \tBackbone.Collection.prototype.remove.call(this, this.models );\n\t\t// \tBackbone.Collection.prototype.set.apply(this, arguments);\n\t\t// }\n\t})\n}","collections.article_detailed_timeseries = {\n\t\"categories_instance\": null,\n\t\"levels_instance\": null,\n\t\"Collection\": Backbone.Collection.extend({\n\t\tmodel: models.event.Model,\n\t\tmetadata: helpers.modelsAndCollections.metadata,\n\t\turl: 'TK'\n\t})\n}","collections.article_summaries = {\n\t\"instance\": null,\n\t\"Collection\": Backbone.Collection.extend({\n\t\tmodel: models.article_summary.Model,\n\t\tmetadata: helpers.modelsAndCollections.metadata,\n\t\turl: 'api/_VERSION/content?facets=subject_tags,impact_tags,categories,levels&incl_body=false',\n\t\tparse: function(response){\n\t\t\tthis.metadata('pagination', response.pagination);\n\t\t\tthis.metadata('total', response.total);\n\t\t\t// This will fire a change event and update counts as well as show hide containers\n\t\t\tmodels.tag_facets.set(response.facets);\n\n\t\t\treturn response.content_items;\n\t\t},\n\t})\n}","collections.articles_detailed = {\n\t\"instance\": null,\n\t\"Collection\": Backbone.Collection.extend({\n\t\tmodel: models.article_detailed.Model\n\t})\n}","// This is most closely tied to metrics but it also includes information like `title` and `created` date which are just pieces of data\ncollections.dimensions = {\n\t\"instance\": null,\n\t\"Collection\": Backbone.Collection.extend({\n\t\tmetadata: helpers.modelsAndCollections.metadata,\n\n\t\tinitialize: function(){\n\t\t\tvar selects = [\n\t\t\t\t{\n\t\t\t\t\tname: 'title',\n\t\t\t\t\tkind: 'text'\n\t\t\t\t},{\n\t\t\t\t\tname: 'created',\n\t\t\t\t\tkind: 'date'\n\t\t\t\t},{\n\t\t\t\t\tname: 'ga_pageviews',\n\t\t\t\t\tkind: 'metric'\n\t\t\t\t},{\n\t\t\t\t\tname: 'twitter_shares',\n\t\t\t\t\tkind: 'metric'\n\t\t\t\t},{\n\t\t\t\t\tname: 'facebook_likes',\n\t\t\t\t\tkind: 'metric'\n\t\t\t\t},{\n\t\t\t\t\tname: 'facebook_shares',\n\t\t\t\t\tkind: 'metric'\n\t\t\t\t},{\n\t\t\t\t\tname: 'facebook_comments',\n\t\t\t\t\tkind: 'metric'\n\t\t\t\t},{\n\t\t\t\t\tname: 'subject_tags',\n\t\t\t\t\tkind: 'bars'\n\t\t\t\t},{\n\t\t\t\t\tname: 'impact_tags',\n\t\t\t\t\tkind: 'bars'\n\t\t\t\t}\n\t\t\t];\n\t\t\tthis.metadata('selects', selects);\n\t\t},\n\n\t\tcloneMetrics: function(getAll){ // We're lazy so give this a flag if we want to grab all\n\t\t\tvar metrics = [];\n\t\t\tthis.metadata('selects').forEach(function(select){\n\t\t\t\tvar metric;\n\t\t\t\tif (select.kind == 'metric' || getAll){\n\t\t\t\t\tmetric = _.clone(select); // Beware, we are expecting a non-nested object here\n\t\t\t\t\tmetrics.push(metric);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn metrics;\n\t\t},\n\t\tgetSelectDimensions: function(){\n\t\t\tvar selects_list = this.cloneMetrics(true),\n\t\t\t\t\tdimension_selects = [],\n\t\t\t\t\tthat = this;\n\n\t\t\tselects_list.forEach(function(selectInfo){\n\t\t\t\tvar select_name = selectInfo.name,\n\t\t\t\t\t\tdimension_model = that.findWhere({name: select_name}),\n\t\t\t\t\t\tdimension_json;\n\t\t\t\t\t\t\n\t\t\t\tif (dimension_model){\n\t\t\t\t\tdimension_json = _.clone(dimension_model.toJSON()); // Beware, we are expecting a non-nested object here\n\t\t\t\t\t_.extend(dimension_json, selectInfo);\n\t\t\t\t\tdimension_selects.push(dimension_json);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn dimension_selects;\n\n\t\t},\n\n\t\tgetSelectsForIsotope: function(){\n\t\t\tvar selects = this.cloneMetrics(true),\n\t\t\t\t\tselects_for_isotope = {};\n\n\t\t\tselects.forEach(function(selectInfo){\n\t\t\t\tvar select = {};\n\t\t\t\tvar caster = '';\n\t\t\t\tif (selectInfo.kind == 'metric' || selectInfo.name == 'impact_tags'){\n\t\t\t\t\tcaster = ' parseFloat';\n\t\t\t\t}\n\t\t\t\tselects_for_isotope[selectInfo.name] = '[data-'+selectInfo.name+']' + caster;\n\t\t\t});\n\n\t\t\treturn selects_for_isotope;\n\t\t}\n\t})\n}","collections.impact_tag_attributes = {\n\t\"categories_instance\": null,\n\t\"levels_instance\": null,\n\t\"Collection\": Backbone.Collection.extend({\n\t\tmodel: models.impact_tag.Model,\n\t\tmetadata: helpers.modelsAndCollections.metadata\n\t})\n}","collections.impact_tags = {\n\t\"instance\": null,\n\t\"Collection\": Backbone.Collection.extend({\n\t\tmodel: models.impact_tag.Model,\n\t\turl: '/api/tags/impact',\n    metadata: helpers.modelsAndCollections.metadata,\n\t\turl: function(){\n\t\t\treturn '/api/_VERSION/tags'\n\t\t}\n\t})\n}","collections.loaded_alerts = {\n\t\"recipe_all_instance\": null, // One instance is creaeted for every recipe\n\t\"Collection\": Backbone.Collection.extend({\n\t\tmodel: models.alert.Model,\n\t\tmetadata: helpers.modelsAndCollections.metadata,\n\t\turl: 'api/_VERSION/events?status=pending&creates=events',\n\t\tparse: function(eventsInfo){\n\t\t\tthis.metadata('pagination', eventsInfo.pagination);\n\t\t\tthis.metadata('total', eventsInfo.total);\n\t\t\treturn eventsInfo.events;\n\t\t}\n\t})\n}","// PourOver views\nviews.po = { };","collections.recipes = {\n\t\"instance\": null,\n\t\"schemas_instance\": null,\n\t\"Collection\": Backbone.Collection.extend({\n\t\turl: '/api/_VERSION/recipes',\n\t\tmodel: models.recipe.Model,\n\t\tsetBoolByIds: helpers.modelsAndCollections.setBoolByIds\n\t\t// comparator: function(recipe){\n\t\t// \treturn -recipe.id;\n\t\t// }\n\t})\n}","// This collection holds our out-of-the-box recipe that handle article ingestion\ncollections.article_rss_feeds = {\n\t\"instance\": null,\n\t\"Collection\": Backbone.Collection.extend({\n\t\t// model: models.rss_feed.Model,\n\t\tmetadata: helpers.modelsAndCollections.metadata,\n\t\turl: 'api/_VERSION/alerts'\n\t})\n}","collections.settings = {\n\t\"instance\": null,\n\t\"Collection\": Backbone.Collection.extend({\n\t\tmodel: models.setting.Model,\n\t\tmetadata: helpers.modelsAndCollections.metadata,\n\t\turl: 'api/_VERSION/settings'\n\t})\n}","collections.sous_chefs = {\n\t\"instance\": null,\n\t\"schemas_instance\": null,\n\t\"Collection\": Backbone.Collection.extend({\n\t\turl: '/api/_VERSION/sous-chefs',\n\t\tmodel: models.sous_chef.Model,\n\t\tsetBoolByIds: helpers.modelsAndCollections.setBoolByIds\n\t\t// comparator: function(recipe){\n\t\t// \treturn -recipe.id;\n\t\t// }\n\t})\n}","collections.subject_tags = {\n\t\"instance\": null,\n\t\"Collection\": Backbone.Collection.extend({\n\t\tmodel: models.subject_tag.Model,\n\t\tmetadata: helpers.modelsAndCollections.metadata,\n\t\turl: function(){\n\t\t\treturn '/api/_VERSION/tags'\n\t\t}\n\t})\n}","collections.user_settings = {\n\t\"instance\": null,\n\t\"Collection\": Backbone.Collection.extend({\n\t\tmodel: models.user_setting.Model,\n\t\tmetadata: helpers.modelsAndCollections.metadata,\n\t\turl: 'api/_VERSION/me'\n\t})\n}","app.ApprovalRiver = Backbone.View.extend({\n\n\tel: '#main-wrapper',\n\n\tevents: {\n\t\t'click .scroll-to': 'scrollTo',\n\t\t'click .load-more': 'loadMoreAlerts'\n\t},\n\n\tinitialize: function(){\n\n\t\t// Keep track of views rendered by this view\n\t\tthis._subviews = [];\n\n\n\t\t// Cache these selectors\n\t\tthis.$drawer = $('#drawer');\n\t\tthis.$content = $('#content');\n\t\tthis.$divisionSwitcher = $('.division-switcher');\n\n\t\tthis.setLoading(this.$content, 'true');\n\n\t\t// Update hash and active collection on mode change\n\t\tthis.listenTo(models.section_mode, 'change:mode', this.sectionMode.update);\n\n\t\t// When an alert is added or removed from the active_alerts collection, add or remove it\n\t\tthis.listenTo(collections.active_alerts.instance, 'add', this.alerts.add);\n\t\tthis.listenTo(collections.active_alerts.instance, 'remove', this.alerts.remove);\n\n\t\t// Create views for every one of the models in the collection and add them to the page\n\t\tthis.render();\n\n\t\t// Bind scrolling here because backbone events doesn't like to do it\n\t\t// var that = this;\n\t\t// this.$content.on('scroll', function(){\n\t\t// \tvar $content = $(this);\n\t\t// \t// that.lazyLoadAlerts.call(that, $content);\n\t\t// })\n\t\t// this.enableWaypoint(); \n\t},\n\n\tsetLoading: function($target, state){\n\t\t$target.attr('data-loading', state);\n\t},\n\n\tsaveHash: function(mode){\n\t\trouting.router.navigate(mode);\n\t},\n\n\tsectionMode: {\n\t\tupdate: function(model, mode){\n\t\t\tmode = mode || model.get('mode');\n\t\t\t// Set loading state\n\t\t\tthis.setLoading(this.$drawer, 'true');\n\t\t\t// Clear the active alerts so that when we switch back they are re-added\n\t\t\tcollections.active_alerts.instance.reset(null);\n\t\t\t// Kill all subviews\n\t\t\tthis.killAllSubviews();\n\t\t\tthis.$content.find('.placeholder').remove();\n\t\t\tthis.sectionMode[mode].call(this);\n\t\t\tthis.saveHash(mode);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t'my-recipes': function(){\n\n\t\t\t// Stash some selectors\n\t\t\tvar $drawer = this.$drawer,\n\t\t\t\t\t$drawerPointers = $drawer.find('#drawer-pointers-container'),\n\t\t\t\t\t$content = this.$content,\n\t\t\t\t\t$recipes = $('#recipes');\n\n\t\t\t$drawer.attr('data-mode', 'my-recipes');\n\n\t\t\t// Bake recipe buttons in the drawer\n\t\t\t// Prep the drawer with our show all button, which is an instance of the show all view\n\t\t\tvar has_recipes = collections.recipes.instance.length > 1;\n\t\t\tvar show_all_view = new views.ShowAllRecipes({}),\n\t\t\t\t\tshow_all_markup = show_all_view.render(has_recipes).el;\n\n\t\t\t// Stash this so we might destroy it on divisionSwitch\n\t\t\tthis._subviews.push(show_all_view);\n\t\t\t// Set the initial state, unless we want to hold off because we have something in the hash that will load stuff\n\t\t\tif (!app.instance.pause_init){\n\t\t\t\tshow_all_view.setState();\n\t\t\t}\n\t\t\t// Save it so we might modify the drawer-outer active state on selection of other options\n\t\t\tthis.show_all_view = show_all_view;\n\t\t\t$drawerPointers.html(show_all_markup);\n\n\t\t\t// Bake the manual recipe\n\t\t\tvar manual_recipe_model = collections.recipes.instance.findWhere({id: -1});\n\t\t\tvar manual_recipe_view = new views.RecipeDrawerStatic({model: manual_recipe_model}),\n\t\t\t\t\tmanual_recipe_markup = manual_recipe_view.render().el;\n\t\t\tthis._subviews.push(manual_recipe_view);\n\t\t\t$recipes.append(manual_recipe_markup);\n\n\t\t\t// Bake the other recipes\n\t\t\tif (has_recipes){\n\t\t\t\tcollections.recipes.instance.each(function(recipeModel){\n\t\t\t\t\t// Skip over our manual-event recipe\n\t\t\t\t\t// We do this because we still want it in our collection so it's findable like the others with `collection.findWhere(id)`\n\t\t\t\t\tif (recipeModel.id !== -1){\n\t\t\t\t\t\tvar item_view = new views.RecipeDrawer({model: recipeModel}),\n\t\t\t\t\t\t\t\titem_markup = item_view.render().el;\n\t\t\t\t\t\tthis._subviews.push(item_view);\n\n\t\t\t\t\t\t$recipes.append(item_markup);\n\t\t\t\t\t}\n\t\t\t\t}, this);\n\t\t\t} else {\n\t\t\t\t$content.html('<div class=\"placeholder\">You don\\'t have any recipes. Click <a href=\"/approval-river#create\">create</a> to make some. &mdash; <em>Merlynne</em></div>');\n\t\t\t}\n\n\t\t\tthis.setLoading(this.$drawer, 'false');\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcreate: function(){\n\n\t\t\t// Stash some selectors\n\t\t\tvar $drawer = this.$drawer,\n\t\t\t\t\t$drawerPointers = $drawer.find('#drawer-pointers-container'),\n\t\t\t\t\t$content = this.$content,\n\t\t\t\t\t$recipes = $('#recipes');\n\n\t\t\t// Clear the load more button\n\t\t\tthis.clearLoadMoreButton();\n\n\t\t\t// Add the pointer text\n\t\t\tvar recipe_creator_prep_markup = templates.drawerCreatePrep;\n\t\t\t$drawerPointers.html(recipe_creator_prep_markup);\n\n\t\t\t// Add the table of contents of recipe schema\n\t\t\tcollections.sous_chefs.instance.each(function(sousChefSchema){\n\t\t\t\tvar item_view = new views.SousChefDrawerItem({model: sousChefSchema}),\n\t\t\t\t\t\titem_el   = item_view.render().el;\n\t\t\t\tthis._subviews.push(item_view);\n\t\t\t\t$recipes.append(item_el)\n\t\t\t}, this);\n\n\t\t\t// Add the recipe creator forms\n\t\t\tcollections.sous_chefs.instance.each(function(sousChef){\n\t\t\t\tvar item_view = new views.SousChefForm({model: sousChef}),\n\t\t\t\t\t\titem_el   = item_view.render().el;\n\n\t\t\t\tthis._subviews.push(item_view);\n\n\t\t\t\t$content.append(item_el)\n\t\t\t}, this);\n\n\t\t\tthis.setLoading(this.$content, 'false');\n\n\t\t\treturn this;\n\n\t\t}\n\t},\n\n\talerts: {\n\t\tadd: function(alertModel){\n\t\t\t// Actions to take when adding an item to the drawer\n\t\t\tvar item_view,\n\t\t\t\t\titem_el;\n\n\t\t\titem_view = new views.Alert({model: alertModel});\n\t\t\titem_el = item_view.render().el;\n\n\t\t\tthis.setLoading(this.$content, 'false');\n\t\t\tthis._subviews.push(item_view);\n\t\t\tthis.$content.append(item_el);\n\n\t\t\treturn this;\n\t\t},\n\t\tremove: function(alertModel){\n\t\t\talertModel.set('destroy', 'remove');\n\t\t\t// this.setLoading(this.$content, 'false');\n\n\t\t\treturn this;\n\t\t}\n\t},\n\n\trender: function(){\n\t\tnew views.DivisionSwitcher({ model: models.section_mode, el: this.$divisionSwitcher })\n\n\t\treturn this;\n\t},\n\n\tcontent: {\n\n\t\tsetActiveAlertsPerRecipe: function(recipeId){\n\n\t\t\t// Do some cleanup\n\t\t\t// Get rid of the load more button\n\t\t\tthis.clearLoadMoreButton.call(this);\n\n\t\t\t// Add the loading state, some Merlynne potions\n\t\t\tthis.setLoading(this.$content, 'true');\n\n\t\t\tvar that = this, // `this` is `app.instance`.\n\t\t\t\t\tpage_size = collections.active_alerts.instance.metadata('page_size');\n\n\t\t\t// Stash this here so our load more button can know what it's doing\n\t\t\t// The more pure way would be to have that button be part of a view on that collection, but we don't currently have such a view set up\n\t\t\t// And this is easy enough\n\t\t\tcollections.active_alerts.instance.metadata('recipe_id', recipeId);\n\n\t\t\t// If a collection for this recipe doesn't exist, then create it\n\t\t\tif (!collections.loaded_alerts['recipe_'+recipeId+'_instance']){\n\t\t\t\tcollections.loaded_alerts['recipe_'+recipeId+'_instance'] = new collections.loaded_alerts.Collection([]);\n\t\t\t}\n\n\t\t\tvar loaded_alerts_collection = collections.loaded_alerts['recipe_'+recipeId+'_instance'];\n\t\t\tvar pagination_info = loaded_alerts_collection.metadata('pagination');\n\n\t\t\tvar fetch_options = {\n\t\t\t\tremove: false,\n\t\t\t\tdata: {}, \n\t\t\t\tsuccess: function(collection, response, options){\n\t\t\t\t\t// Add all of this collections models into the DOM\n\t\t\t\t\tcollections.active_alerts.instance.set(collection.models);\n\n\t\t\t\t\t// Call the load more button, which has its own logic on whether it should display itself and how it behaves\n\t\t\t\t\tthat.setLoadMoreButton.call(that, recipeId);\n\t\t\t\t},\n\t\t\t\terror: function(model, err){\n\t\t\t\t\tconsole.log('Error fetching alerts for recipe', model, err);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tvar provenance;\n\t\t\tif (recipeId != 'all'){\n\t\t\t\tif (recipeId === -1){\n\t\t\t\t\tprovenance = 'manual';\n\t\t\t\t} else {\n\t\t\t\t\tprovenance = 'recipe';\n\t\t\t\t\tfetch_options.data.recipe_ids = recipeId;\n\t\t\t\t}\n\t\t\t\t// If it's not all, we need to query with a recipe id\n\t\t\t\tfetch_options.data.provenance = provenance;\n\t\t\t}\n\n\t\t\t// If we've fetched this already, then it will stored, otherwise, go and look on the recipe\n\t\t\t// Add this logic to protect against the count being `0`.\n\t\t\tvar recipe_alerts_pending_count = loaded_alerts_collection.metadata('total'),\n\t\t\t\t\trecipe_alerts_counts;\n\t\t\tif (!recipe_alerts_pending_count && recipe_alerts_pending_count !== 0){\n\t\t\t\trecipe_alerts_counts = collections.recipes.instance.findWhere({id: recipeId}).get('event_counts');\n\t\t\t\tif (recipe_alerts_counts){\n\t\t\t\t\trecipe_alerts_pending_count = recipe_alerts_counts.pending;\n\t\t\t\t} else {\n\t\t\t\t\trecipe_alerts_pending_count = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Do we have alerts in memory\n\t\t\tvar alert_models_in_memory = loaded_alerts_collection.models;\n\t\t\t// Reset their destroy mode so that we might destroy it later\n\t\t\talert_models_in_memory.forEach(function(alertModel){\n\t\t\t\talertModel.set('destroy', null);\n\t\t\t});\n\n\t\t\t// If we don't have pending alerts, say so, otherwise, figure out how to load them either from memory, the server, or both\n\t\t\tif (!recipe_alerts_pending_count){\n\t\t\t\tthat.$content.html('<div class=\"placeholder\">This recipe doesn\\'t have any pending alerts. I\\'ll let you know here when I find some!<br/>&mdash; <em>Merlynne</em></div>');\n\t\t\t\t// Zero-out our collection\n\t\t\t\tcollections.active_alerts.instance.set(alert_models_in_memory);\n\t\t\t\tthis.setLoading(this.$content, 'false');\n\t\t\t\t// If we have no models in memory, fetch the first page\n\t\t\t} else if (!alert_models_in_memory.length){\n\t\t\t\t// Clear the placeholder, if it exists\n\t\t\t\tthat.$content.find('.placeholder').remove();\n\t\t\t\t// Clear the active collection\n\t\t\t\tcollections.active_alerts.instance.set([]);\n\t\t\t\t// Fetch new alerts, callbacks specified in `fetch_options`.\n\t\t\t\tloaded_alerts_collection.fetch(fetch_options);\n\t\t\t}else {\n\t\t\t\t// Clear the placeholder, if it exists\n\t\t\t\tthat.$content.find('.placeholder').remove();\n\t\t\t\t// If we're not fetching, that is to say, we have a full page already in memory, just set those models\n\t\t\t\tcollections.active_alerts.instance.set(alert_models_in_memory);\n\t\t\t\t// Call the load more button, which has its own logic on whether it should display itself and how it behaves\n\t\t\t\tthat.setLoadMoreButton.call(app.instance, recipeId);\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\n\t},\n\n\tloadMoreAlerts: function(e){\n\n\t\t// Set the button to loading mode\n\t\tapp.helpers.gifizeLoadMoreButton($(e.currentTarget));\n\n\t\tvar that = app.instance, // This is `app.instance`.\n\t\t\t\trecipeId = collections.active_alerts.instance.metadata('recipe_id');\n\n\n\t\tvar loaded_alerts_collection = collections.loaded_alerts['recipe_'+recipeId+'_instance'];\n\t\tvar pagination_info = loaded_alerts_collection.metadata('pagination');\n\n\t\tvar current_page = pagination_info.page;\n\n\t\tvar fetch_options = {\n\t\t\tremove: false,\n\t\t\tdata: { \n\t\t\t\tpage: current_page + 1\n\t\t\t},\n\t\t\tsuccess: function(collection, response, options){\n\t\t\t\t// Add them to the dom\n\t\t\t\tcollections.active_alerts.instance.add(response.events);\n\t\t\t\t// Call the load more button, which has its own logic on whether it should display itself and how it behaves\n\t\t\t\tthat.setLoadMoreButton.call(that, recipeId);\n\t\t\t},\n\t\t\terror: function(model, err){\n\t\t\t\tconsole.log('Error fetching more alerts detail', err);\n\t\t\t}\n\t\t};\n\n\t\tvar provenance;\n\t\tif (recipeId != 'all'){\n\t\t\tif (recipeId === -1){\n\t\t\t\tprovenance = 'manual';\n\t\t\t} else {\n\t\t\t\tprovenance = 'recipe';\n\t\t\t\t// If it's not all, we need to query with a recipe id\n\t\t\t\tfetch_options.data.recipe_ids = recipeId;\n\t\t\t}\n\t\t\tfetch_options.data.provenance = provenance;\n\t\t}\n\n\t\t// Fetch for the next page of results\n\t\tloaded_alerts_collection.fetch(fetch_options);\n\n\t\treturn this;\n\t},\n\n\tclearLoadMoreButton: function(){\n\t\tthis.$content.find('.load-more').remove();\n\t},\n\t\n\tsetLoadMoreButton: function(recipeId){\n\n\t\t// To be created and appended below, if we need it.\n\t\tvar $loadMore;\n\n\t\t// Always kill the button\n\t\tthis.clearLoadMoreButton();\n\n\t\tvar loaded_alerts_collection = collections.loaded_alerts['recipe_'+recipeId+'_instance'];\n\t\tvar pagination_info = loaded_alerts_collection.metadata('pagination');\n\n\t\tvar current_page = pagination_info.page,\n\t\t\t\tpage_size = pagination_info.per_page,\n\t\t\t\ttotal_pages = pagination_info.total_pages;\n\n\t\tvar currently_loaded_count = loaded_alerts_collection.length,\n\t\t\t\ttotal_pending_for_recipe_id = loaded_alerts_collection.metadata('total');\n\n\t\t// Do we need the button\n\t\tvar more_alerts_to_load = current_page < total_pages,\n\t\t\t\tremaining_alerts = total_pending_for_recipe_id - currently_loaded_count,\n\t\t\t\tto_load_string = _.min([remaining_alerts, page_size]), // Say you'll load either a full page or how many are left, whichever is smaller\n\t\t\t\tload_more_str;\n\n\t\tif (more_alerts_to_load){\n\t\t\t// Create a little button in-memory (for now)\n\t\t\t$loadMore = $('<button class=\"load-more\"></button>');\n\t\t\tload_more_str = 'Showing ' + currently_loaded_count + ' out of ' + total_pending_for_recipe_id + '. Load ' + to_load_string + ' more...'\n\t\t\t// Finally, append it as the last thing\n\t\t\t$loadMore.html(load_more_str).appendTo(this.$content);\n\t\t}\n\n\t\treturn this;\n\t},\n\n\t// enableWaypoint: function(){\n\t// \tconsole.log(this.$el.find('.recipe-form-container').length)\n\t// \tthis.$el.find('.recipe-form-container').waypoint(function(dir) {\n\t// \t\tconsole.log(dir)\n\t// \t\tvar $this = $(this),\n\t// \t\t\t\tid = $this.find('.title').attr('id').replace('-recipe','')\n\t// \t\t\t\tidx;\n\t// \t\t$('.drawer-list-outer.scroll-to').removeClass('active');\n\t// \t\tif (dir == 'down'){\n\t// \t\t\t$('.drawer-list-outer.scroll-to[data-destination=\"'+id+'\"]').addClass('active');\n\t// \t\t} else if (dir == 'up'){\n\t// \t\t\tidx = $('.recipe-form-container').index( $this );\n\t// \t\t\t$($('.drawer-list-outer.scroll-to')[idx]).addClass('active')\n\t// \t\t}\n\t// \t},{ context: this.$content, offset: 50 });\n\t// },\n\n\tscrollTo: function(e){\n\t\tvar dest = $(e.currentTarget).attr('data-destination'),\n\t\t\t\tbuffer = 10;\n\t\tthis.$content.animate({\n\t\t\tscrollTop: (this.$content.scrollTop() + $('#'+dest+'-recipe').position().top - parseFloat(this.$content.css('padding-top')) - buffer)\n\t\t}, 200);\n\t}\n\n});","app.Articles = Backbone.View.extend({\n\n\tel: '#main-wrapper',\n\n\tevents: {\n\t\t'click .add-to-comparison': 'addToComparison',\n\t\t'click .option-title .show-hide': 'showHideList',\n\t\t'change .toggle-all': 'toggleAllDrawer',\n\t\t'click #alter-comparison-marker': 'updateComparisonMarker',\n\t\t'click .load-more[data-which=\"article-summaries\"]': 'moreSummaryArticles',\n\t\t'click .go-to-detail': 'goToDetail',\n\t\t// 'click .modal-toggle': 'toggleModal',\n\t\t// 'click .modal-close': 'toggleModal'\n\t},\n\n\tinitialize: function(){\n\t\t// Keep track of views rendered by this view\n\t\tthis._subviews = [];\n\n\t\t// Cache these selectors\n\t\tthis.$subjectTagList = $('.option-container[data-type=\"subject-tags\"] .tag-list');\n\t\tthis.$impactTagCategoriesList = $('.option-container[data-type=\"categories\"] .tag-list');\n\t\tthis.$impactTagLevelsList = $('.option-container[data-type=\"levels\"] .tag-list');\n\t\tthis.$impactTagList = $('.option-container[data-type=\"impact-tags\"] .tag-list');\n\t\t\n\t\tthis.tag_list_els = {\n\t\t\tsubject_tags: this.$subjectTagList.parent(),\n\t\t\tcategories: this.$impactTagCategoriesList.parent(),\n\t\t\tlevels: this.$impactTagLevelsList.parent(),\n\t\t\timpact_tags: this.$impactTagList.parent()\n\t\t};\n\n\t\tthis.$articleList = $('#article-list');\n\t\tthis.$drawer = $('#drawer');\n\t\tthis.$content = $('#content');\n\t\tthis.$divisionSwitcher = $('.division-switcher');\n\t\tthis.$drawerPointersCntnr = $('#drawer-pointers-container');\n\t\tthis.$articleTitleSearcher = $('#article-title-searcher');\n\t\tthis.$dateRangeSearcher = $('#date-range-searcher');\n\t\tthis.$articleDrawerSorter = $('#article-drawer-sorter');\n\t\tthis.$addArticle = $('#add-article');\n\n\n\t\tthis.isotopeCntnr = '.rows';\n\t\tthis.isotopeChild = '.article-detail-row-wrapper';\n\n\n\t\t// Update hash and active collection on mode change\n\t\tthis.listenTo(models.section_mode, 'change:mode', this.sectionMode.update);\n\n\t\t// Listen for adds and removes to the article summaries collection\n\t\t// And populate the drawer on `add` and `remove`\n\t\t// this.listenTo(collections.article_summaries.instance, 'change', this.updateToggle);\n\t\tthis.listenTo(collections.article_summaries.instance, 'add', this.drawer.add);\n\t\tthis.listenTo(collections.article_summaries.instance, 'remove', this.drawer.remove);\n\t\tthis.listenTo(collections.article_summaries.instance, 'error', this.reportErr);\n\n\n\t\t// As you move things in and out of the comparison view\n\t\t// Listen to its collection and `add` and `remove things accordingly\n\t\tthis.listenTo(collections.article_comparisons.instance, 'add', this.comparison.add);\n\t\tthis.listenTo(collections.article_comparisons.instance, 'remove', this.comparison.remove);\n\n\t\t// When an item is added or removed from the detail collection, add or remove it\n\t\t// The remove is somewhat unnecessary since `this.$content`'s html is emptied. But it's consistent with our other code.\n\t\tthis.listenTo(collections.article_detailed.instance, 'add', this.detail.add);\n\t\tthis.listenTo(collections.article_detailed.instance, 'remove', this.detail.remove);\n\t\tthis.listenTo(collections.article_detailed.instance, 'error', this.reportErr);\n\n\t\t// Listen for changes in facet counts and show hide all tag controls\n\t\tthis.listenTo(models.tag_facets, 'change', this.updateTagContainerByCounts);\n\t\t// Listen for changes in facet counts and show hide all tag controls\n\t\tthis.listenTo(models.content_item_filters, 'hasChanged', this.fetchByParameters);\n\n\n\t\t// Create views for every one of the models in the collection and add them to the page\n\t\tthis.render();\n\n\t\t// Listen to scroll so you can sticky the filter\n\t\tvar that = this;\n\t\tthis.$content.on('scroll', function(){\n\t\t\tvar $content = $(this);\n\t\t\tthat.onScrollTick.call(that, $content);\n\t\t})\n\t},\n\n\trender: function(){\n\n\t\tthis.$drawerPointersCntnr.append(templates.drawerPointers);\n\n\t\t/* Drawer tag */\n\t\t// Article tags\n\t\tif (collections.subject_tags.instance.length){\n\t\t\tthis.$subjectTagList.html('');\n\t\t\tcollections.subject_tags.instance.each(function(tag){\n\t\t\t\tvar tag_view = new views.TagSectionNav({ model: tag });\n\t\t\t\tthis.$subjectTagList.append(tag_view.render().el);\n\t\t\t}, this);\n\t\t}\n\n\t\t// Impact tags\n\t\tif (collections.impact_tags.instance.length){\n\t\t\tthis.$impactTagList.html('');\n\t\t\tcollections.impact_tags.instance.each(function(tag){\n\t\t\t\tvar tag_view = new views.TagSectionNav({ model: tag });\n\t\t\t\tthis.$impactTagList.append(tag_view.render().el);\n\t\t\t}, this);\n\t\t}\n\n\t\t// Impact tag categories\n\t\tif (collections.impact_tag_attributes.categories_instance.length){\n\t\t\tthis.$impactTagCategoriesList.html('');\n\t\t\tcollections.impact_tag_attributes.categories_instance.each(function(tag){\n\t\t\t\tvar tag_view = new views.TagSectionNav({ model: tag });\n\t\t\t\tthis.$impactTagCategoriesList.append(tag_view.render().el);\n\t\t\t}, this);\n\t\t}\n\n\t\t// Impact tag levels\n\t\tif (collections.impact_tag_attributes.levels_instance.length){\n\t\t\tthis.$impactTagLevelsList.html('');\n\t\t\tcollections.impact_tag_attributes.levels_instance.each(function(tag){\n\t\t\t\tvar tag_view = new views.TagSectionNav({ model: tag });\n\t\t\t\tthis.$impactTagLevelsList.append(tag_view.render().el);\n\t\t\t}, this);\n\t\t}\n\n\t\t/* Article Summaries in the drawer */\n\t\tcollections.article_summaries.instance.each(function(article){\n\t\t\tvar article_view = new views.ArticleSummaryDrawer({model: article});\n\t\t\tthis.$articleList.append(article_view.render().el);\n\t\t}, this);\n\n\t\t// If you have subject tags, render them as options in the article comparison dropdowns\n\t\tcollections.subject_tags.instance.each(function(subjectTag){\n\t\t\tvar $option = $('<option></option>').val(subjectTag.get('id')).html(subjectTag.get('name'))\n\t\t\t$option.appendTo('.alter-comparison-marker[data-which=\"group\"]');\n\t\t});\n\n\t\t// These views are okay to stick around (ie. not added to the subviews array and killed at any point) because they are only created once and then the page is refreshed, which clears them\n\t\tnew views.DivisionSwitcher({ model: models.section_mode, el: this.$divisionSwitcher });\n\n\t\tnew views.ArticleSearcher({el: this.$articleTitleSearcher});\n\n\t\tnew views.DateRangeSearcher({el: this.$dateRangeSearcher});\n\n\t\tnew views.ArticleDrawerSorter({el: this.$articleDrawerSorter, collection: collections.dimensions.instance});\n\n\t\tthis.bakeArticleAdder();\n\n\t\t// Hide the tag lists based on what the counts are\n\t\tthis.updateTagContainerByCounts();\n\n\t\tthis.setLoading(this.$drawer, 'false');\n\t\tthis.$articleCount = this.$drawer.find('.item-text[data-which=\"article-count\"]');\n\n\t\tthis.setLoadMoreButton();\n\n\t\treturn this;\n\t},\n\n\tsetLoading: function($target, state){\n\t\t$target.attr('data-loading', state);\n\t},\n\n\treportErr: function(model, msg){\n\t\tvar response = msg.responseJSON;\n\t\tconsole.log('ERROR in model:', model);\n\t\tconsole.log('ERROR message:', response);\n\t\talert(response.error  +' ' + response.status_code + ': ' + response.message);\n\t},\n\n\tfetchByParameters: function(increment){\n\t\tvar params = models.content_item_filters.assembleQueryParams();\n\t\tvar current_page = collections.article_summaries.instance.metadata('pagination').page;\n\n\t\tconsole.log('params',params);\n\n\t\tif (!increment){\n\t\t\t// Set the loading state\n\t\t\t// Which will hide the button, otherwise we want the button to be visible\n\t\t\tapp.instance.setLoading.call(app.instance, app.instance.$articleList, true);\n\t\t\t// Clear the set\n\t\t\tcollections.article_summaries.instance.set([]);\n\t\t} else {\n\t\t\tparams.page = current_page + 1;\n\t\t}\n\t\t// Responsive articles will be added to `collections.article_summaries.instance`\n\t\t// `pagination and `total` information will be added as metadata on that collection\n\t\tcollections.article_summaries.instance.fetch({data: params, remove: false})\n\t\t\t.then(function(model, status, response){\n\t\t\t\t// This is only called on success, error are caught by our listener above\n\t\t\t\tapp.instance.setLoading.call(app.instance, app.instance.$articleList, false);\n\t\t\t\tapp.instance.setLoadMoreButton.call(app.instance);\n\t\t\t});\n\n\t\treturn this;\n\t},\n\n\tsectionMode: {\n\t\tupdate: function(model, mode){\n\t\t\tmode = mode || model.get('mode');\n\n\t\t\t// Kill all subviews\n\t\t\t// this.killAllSubviews();\n\t\t\t// Possibly replace this with\n\t\t\tcollections.article_comparisons.instance.set([]);\n\t\t\tcollections.article_detailed.instance.set([]);\n\n\t\t\t// Roll out section-secpfic code\n\t\t\tthis.sectionMode[mode].call(this);\n\n\t\t\t// If we had some models already in a collection, we'll want to adjust their selection state\n\t\t\t// Do this after the sectionMode call so that all of our listeners are bound\n\t\t\tcollections.article_summaries.instance.each(function(articleSummary){\n\t\t\t\tvar section_selection_key = 'selected_for_' + mode,\n\t\t\t\t\t\tselected_for_section = articleSummary.get(section_selection_key);\n\n\t\t\t\tarticleSummary.set('active_selected', selected_for_section);\n\t\t\t});\n\n\t\t\treturn this;\n\t\t},\n\t\tcompare: function(){\n\n\t\t\tvar article_grid =  new views.ArticleComparisonGrid({collection: collections.dimensions.instance});\n\t\t\t// // Keep track of this view\n\t\t\tthis._subviews.push(article_grid);\n\n\t\t\tthis.$content.html( article_grid.render().el );\n\n\t\t\tthis.$listContainer = $('#compare-grid .rows');\n\t\t\t// Init isotope on the `$listContainer`\n\t\t\tvar select_sorters = collections.dimensions.instance.getSelectsForIsotope();\n\t\t\tapp.helpers.isotope.initCntnr.call(this, select_sorters);\n\n\t\t\t// Set the sort on our comparison grid\n\t\t\tvar initial_sort_by = collections.article_comparisons.instance.metadata('sort_by');\n\t\t\tvar initial_sort_ascending = collections.article_comparisons.instance.metadata('sort_ascending');\n\n\t\t\t// And enable the toggle all and add to comparison buttons\n\t\t\tthis.$drawer.find('.drawer-item-group[data-which=\"comparison-additions\"] input,.drawer-item[data-type=\"action-item\"] button')\n\t\t\t\t.prop('disabled', false)\n\t\t\t\t.parent()\n\t\t\t\t\t.removeClass('disabled');\n\n\t\t\t// Get the parameters by which we're sorting the comparisons\n\t\t\tvar sort_by = collections.article_comparisons.instance.metadata('sort_by'),\n\t\t\t\t\tsort_ascending = collections.article_comparisons.instance.metadata('sort_ascending');\n\t\t\t$('.header-el').attr('data-sort-ascending', sort_ascending);\n\n\t\t\t// Set the compare view to the staged set of models\n\t\t\t// On load this will be json, but if we're coming from the detail view, we'll already have things so let's load those\n\t\t\t// On load `this.staged_article_comparisons` will be undefined so grab the ids of the article summaries\n\t\t\t// Unless we've been told to stop by an incoming route\n\t\t\tvar staged_article_comparison_models;\n\t\t\tvar compare_models;\n\t\t\tif (!this.pause_init){\n\t\t\t\t// This next line needs to be refactored so that data is being upated and the view reflects that\n\t\t\t\t// article_grid.sortBy.call(article_grid, initial_sort_by, initial_sort_ascending);\n\t\t\t\tcollections.article_comparisons.instance.trigger('setMetricHeaders');\n\t\t\t\tstaged_article_comparison_models = this.staged_article_comparison_models || collections.article_summaries.instance.models;\n\t\t\t\t// var staged_article_comparison_models = this.staged_article_comparison_models || collections.article_summaries.instance.models;\n\t\t\t\tcompare_models = this.comparison.loadRows(staged_article_comparison_models, this.saveHash); // Analagous to this.detail.loadPage excempt doesn't require fetching because article summaries are already loaded\n\t\t\t\tthis.staged_article_comparison_models = staged_article_comparison_models;\n\t\t\t\tconsole.log('staged articls',this.staged_article_comparison_models);\n\t\t\t\t\n\t\t\t}\n\t\t\t// var compare_models = collections.article_comparisons.instance.models;\n\n\t\t\t// // If we don't have any already in our comparison, then grab what's selected in the drawer\n\t\t\t// // Note, this condition will most likely be on load so the `selected_for_compare: true` is a bit meaningless\n\t\t\t// // Since many of those models load with `selected_for_compare: true`\n\t\t\t// // But it could also trigger if you just deleted everything from the compare grid\n\t\t\t// // In that case, grabbing just the selected ones is a better choice since it seems closer so the user's intention\n\t\t\t// // But also it avoids loading a TON of models accidentally.\n\t\t\t// if (!compare_models.length){\n\t\t\t// \t// If we don't have anything incoming in the hash, then grab what's in the drawer as we discussed before\n\t\t\t// \t// TODO, also look in the hash if we're coming from a permalink\n\t\t\t// \tcompare_models = collections.article_summaries.instance.where({selected_for_compare: true, in_drawer: true});\n\n\t\t\t// \t// Make sure these models get sorted in the proper way that our collection is sorted\n\t\t\t// \t// You would think that adding them to our sorted collection would take care of this\n\t\t\t// \t// but the sort doesn't change the order in which add events are fired, which is how we're adding things\n\t\t\t// \t// Perhaps isotope layout could be called again to take care of that... For now, this works and it keeps our data sorted and clean\n\t\t\t// \tif (sort_by){\n\t\t\t// \t\tcompare_models = _.sortBy(compare_models, function(compare_model){ return compare_model.get(sort_by) });\n\t\t\t// \t\tif (sort_ascending === false) {\n\t\t\t// \t\t\tcompare_models.reverse();\n\t\t\t// \t\t}\n\t\t\t// \t}\n\t\t\t// }\n\n\t\t\t// // Reset this so that existing models are removed?\n\t\t\t// // TODO look into this\n\t\t\t// collections.article_comparisons.instance.reset();\n\t\t\t// collections.article_comparisons.instance.set(compare_models);\n\t\t\t// Save this\n\t\t\t// this.saveHash();\n\n\t\t\treturn this;\n\t\t},\n\t\tdetail: function(detailModelId){\n\t\t\t// We have `detailModelId` if we're coming from a summary drawer click\n\t\t\t// But if we're coming from a `.go-to-detail` click, changing modes triggers an update and thus we need to preload the model id under `staged_article_detail`\n\t\t\tdetailModelId = detailModelId || this.staged_article_detail\n\t\t\t// TODO, put a loading gif in here\n\t\t\t// Kill the toggle all button and add to replace buttons\n\t\t\tthis.$drawer.find('.drawer-item-group[data-which=\"comparison-additions\"] input,.drawer-item[data-type=\"action-item\"] button').prop('disabled', true).parent().addClass('disabled');\n\n\t\t\t// Figure out which model we are loading and add it to collections.article_detailed.instance\n\t\t\t\t\t// \t\tthis.detail.getDetailModelFromId.call(this, detailModelId, cb);\n\n\n\n\t\t\tthis.detail.loadPage.call(this, detailModelId, this.saveHash);\n\t\t\t// this.detail.loadModel.call(this, this.staged_article_detail, this.detail.loadPage)\n\t\t\treturn this;\n\t\t}\n\t},\n\n\ttoggleAllDrawer: function(e){\n\t\tvar checked = $(e.currentTarget).find('input').prop('checked'),\n\t\t\t\tmode = models.section_mode.get('mode'),\n\t\t\t\tselected_for = 'selected_for_' + mode;\n\n\t\tcollections.article_summaries.instance.each(function(summaryModel){\n\t\t\t// Persist and set mode\n\t\t\tif (mode == 'compare') {\n\t\t\t\tsummaryModel.set(selected_for, checked);\n\t\t\t}\n\t\t\tsummaryModel.set('active_selected', checked);\n\t\t});\n\t\treturn this;\n\t},\n\n\tdrawer: {\n\t\tsetActiveArticleSummaries: function(){\n\t\t\t// var current_filtered_set = views.po.article_summaries.getCurrentItems();\n\t\t\t// To maintain the correct sort order on the dom, we want to empty it\n\t\t\tcollections.article_summaries.instance.set([]);\n\t\t\t// For changing the drawer list items based on filters\n\t\t\tcollections.article_summaries.instance.set(current_filtered_set);\n\t\t\tapp.instance.setLoadMoreButton.call(app.instance);\n\n\t\t\t// Make the checkboxes shift-selectable\n\t\t\tapp.instance.$drawer.find('.drawer-list-outer').shiftSelectable();\n\n\t\t\treturn this;\n\n\t\t},\n\t\tadd: function(summaryModel){\n\t\t\t// Actions to take when adding an item to the drawer\n\t\t\tvar item_view,\n\t\t\t\titem_el;\n\n\t\t\titem_view = new views.ArticleSummaryDrawer({model: summaryModel});\n\t\t\titem_el = item_view.render().el;\n\t\t\tthis.$articleList.append(item_el);\n\n\t\t\treturn this;\n\t\t},\n\t\tremove: function(summaryModel){\n\t\t\t// Actions to take when removing an item from the drawer\n\t\t\tsummaryModel.trigger('destroy');\n\t\t\treturn this;\n\t\t}\n\n\t},\n\n\taddToComparison: function(e){\n\t\tvar $btn = $(e.currentTarget),\n\t\t\t\taction = $btn.attr('data-action'),\n\t\t\t\tsort_by,\n\t\t\t\tsort_ascending;\n\n\t\t// Only add items that are both selected and `in_drawer` which is `true` when it comes from a pourover filter\n\t\tvar selected_models = collections.article_summaries.instance.where({selected_for_compare: true}),\n\t\t\t\taction;\n\n\t\t// Either replace or append\n\t\tif (action == 'replace'){\n\t\t\taction = 'set';\n\t\t} else if (action == 'add'){\n\t\t\taction = 'add';\n\t\t}\n\n\t\tcollections.article_comparisons.instance[action](selected_models);\n\n\t\t// Persist these models by saving their ids\n\t\tthis.staged_article_comparison_models = collections.article_comparisons.instance.slice(0);\n\n\t\t// Grab our params to sort from metadata elements on our collection\n\t\tsort_by = collections.article_comparisons.instance.metadata('sort_by')\n\t\tsort_ascending = collections.article_comparisons.instance.metadata('sort_ascending')\n\t\tapp.helpers.isotope.relayout(sort_by, sort_ascending);\n\n\t\tconsole.log('adding to comparison')\n\t\t// this.saveHash();\n\n\t\treturn this;\n\n\t},\n\n\tcomparison: {\n\n\t\tadd: function(summaryModel) {\n\t\t\t// Actions to take when adding an item to the comparison grid\n\t\t\tvar item_view,\n\t\t\t\titem_el;\n\n\t\t\titem_view = new views.ArticleSummaryRow({model: summaryModel, collection: collections.dimensions.instance});\n\t\t\tthis._subviews.push(item_view);\n\t\t\titem_el = item_view.render().el;\n\t\t\tthis.$listContainer.append(item_el);\n\t\t\tapp.helpers.isotope.addItem.call(app.instance, item_el);\n\t\t\treturn this;\n\t\t},\n\n\t\tremove: function(comparisonModel) {\n\t\t\tcomparisonModel.trigger('removeFromComparison');\n\t\t\t// comparisonModel.set('destroy', 'delete');\n\t\t\treturn this;\n\t\t},\n\n\t\tloadRows: function(stagedArticleComparisonModels, saveHash){\n\n\t\t\tcollections.article_comparisons.instance.set(stagedArticleComparisonModels);\n\n\t\t\t// Pass asn argument so as to be consistent with how `detail.loadPage` works, also handles passing in a reference to this\n\t\t\tsaveHash();\n\n\t\t\t// // If we don't have any already in our comparison, then grab what's selected in the drawer\n\t\t\t// // Note, this condition will most likely be on load so the `selected_for_compare: true` is a bit meaningless\n\t\t\t// // Since many of those models load with `selected_for_compare: true`\n\t\t\t// // But it could also trigger if you just deleted everything from the compare grid\n\t\t\t// // In that case, grabbing just the selected ones is a better choice since it seems closer so the user's intention\n\t\t\t// // But also it avoids loading a TON of models accidentally.\n\t\t\t// if (!compare_models.length){\n\t\t\t// \t// If we don't have anything incoming in the hash, then grab what's in the drawer as we discussed before\n\t\t\t// \t// TODO, also look in the hash if we're coming from a permalink\n\t\t\t// \tcompare_models = collections.article_summaries.instance.where({selected_for_compare: true, in_drawer: true});\n\n\t\t\t// \t// Make sure these models get sorted in the proper way that our collection is sorted\n\t\t\t// \t// You would think that adding them to our sorted collection would take care of this\n\t\t\t// \t// but the sort doesn't change the order in which add events are fired, which is how we're adding things\n\t\t\t// \t// Perhaps isotope layout could be called again to take care of that... For now, this works and it keeps our data sorted and clean\n\t\t\t// \tif (sort_by){\n\t\t\t// \t\tcompare_models = _.sortBy(compare_models, function(compare_model){ return compare_model.get(sort_by) });\n\t\t\t// \t\tif (sort_ascending === false) {\n\t\t\t// \t\t\tcompare_models.reverse();\n\t\t\t// \t\t}\n\t\t\t// \t}\n\t\t\t// }\n\n\t\t\treturn this;\n\n\t\t}\n\t},\n\n\tdetail: {\n\t\tadd: function(detailModel) {\n\t\t\t// Vars for baking account subject tags\n\t\t\tvar item_view,\n\t\t\t\t\titem_el;\n\n\t\t\t// Actions to take when adding an item to the detail view\n\t\t\titem_view = new views.ArticleDetail({model: detailModel});\n\t\t\tthis._subviews.push(item_view);\n\n\n\t\t\titem_el = item_view.render().el;\n\t\t\tthis.$content.html(item_el);\n\t\t\t// This is called after the view has rendered instead of as a part of it because we're doing some dynamic layout calculation\n\t\t\t// If we did more harcoding of that then we could call it before it's appended to the DOM, but this way gives us more layout flexibility\n\t\t\titem_view.bakeInteractiveBits();\n\n\t\t\treturn this;\n\t\t},\n\t\tremove: function(detailModel) {\n\n\t\t\tdetailModel.trigger('destroyDetail');\n\t\t\t// detailModel.set('destroy', true);\n\t\t\treturn this;\n\t\t},\n\t\tloadPage: function(detailModelId, saveHash){\n\t\t\tvar that = this;\n\n\t\t\t// var fetch_options = {\n\t\t\t// \t\t\t\tdata: { \n\t\t\t// \t\t\t\t\tsparse: true,\n\t\t\t// \t\t\t\t\t// counts: true\n\t\t\t// \t\t\t\t},\n\t\t\t// \t\t\t\t// processData: true,\n\t\t\t// \t\t\t\tsuccess: function(collection, response, options){\n\t\t\t// \t\t\t\t\tcb.call(that, response);\n\t\t\t// \t\t\t\t},\n\t\t\t// \t\t\t\terror: function(model, err){\n\t\t\t// \t\t\t\t\tconsole.log('Error fetching article detail' + detail_model_id, err);\n\t\t\t// \t\t\t\t}\n\t\t\t// \t\t\t};\n\n\t\t\tvar summary_model = collections.article_summaries.instance.findWhere({id: detailModelId}) || collections.article_summaries.instance.first(); // For now grab the first one\n\t\t\t// var detail_model = collections.articles_detailed.instance.findWhere({id: detailModelId});\n\n\t\t\t// If that didn't get anything, then we're fetching, so set the fetch options\n\t\t\tif (!summary_model){\n\t\t\t\t// detail_model = new models.article_detailed.Model({id: detail_model_id});\n\t\t\t\t// detail_model.fetch(fetch_options);\n\n\t\t\t\t\tconsole.log('FIGURE OUT FETCHING');\n\t\t\t\t\tsaveHash(); // TEMP\n\t\t\t\t// collections.article_detailed.instance.fetch({data: {sparse: true, id: detailModelId}, remove: true})\n\t\t\t\t// \t.then(function(){\n\t\t\t\t// \t\tsaveHash()\n\t\t\t\t// \t});\n\t\t\t} else {\n\t\t\t\tsummary_model.set('active_selected', true);\n\t\t\t\tsummary_model.set('selected_for_detail', true);\n\t\t\t\t// Reset this so we can destroy it later\n\t\t\t\t// detail_model.set('destroy', false, {silent: true});\n\t\t\t\t// cb.call(this, detail_model);\n\t\t\t\tcollections.article_detailed.instance.set([summary_model]);\n\n\t\t\t\t// collections.article_detailed.instance.set([detail_model]);\n\t\t\t\tsaveHash();\n\t\t\t\tthis.staged_article_detail = detailModelId;\n\n\t\t\t}\n\n\t\t},\n\t\n\t},\n\n\tsaveHash: function(){\n\t\tvar mode = models.section_mode.get('mode'),\n\t\t\t\tmode_collections = {\n\t\t\t\t\tcompare: 'article_comparisons',\n\t\t\t\t\tdetail: 'article_detailed'\n\t\t\t\t},\n\t\t\t\tmode_collection = mode_collections[mode];\n\n\t\tvar article_ids = collections[mode_collection].instance.getHash();\n\t\t// Only add the trailing slash if there are ids that follow\n\t\tif (article_ids){\n\t\t\tarticle_ids = '/' + article_ids\n\t\t}\n\n\t\tconsole.log('navigating')\n\t\trouting.router.navigate(mode + article_ids);\n\t},\n\n\tshowHideList: function(e){\n\t\tvar $btn = $(e.currentTarget),\n\t\t\t\topen = $btn.attr('data-open') == 'true',\n\t\t\t\t$list = $btn.parents('.option-container').find('.tag-list'),\n\t\t\t\tslide_duration = 400,\n\t\t\t\ttext;\n\n\t\tif (open) {\n\t\t\t$list.slideUp(slide_duration, 'easeOutQuint');\n\t\t\ttext = 'Show';\n\t\t} else {\n\t\t\t$list.slideDown(slide_duration, 'easeOutQuint');\n\t\t\ttext = 'Hide';\n\t\t}\n\n\t\t$btn.attr('data-open', !open).html(text);\n\n\t},\n\n\tmoreSummaryArticles: function(e){\n\t\tapp.helpers.gifizeLoadMoreButton($(e.currentTarget));\n\n\t\tthis.fetchByParameters(true);\n\n\t\treturn this;\n\t},\n\n\tclearLoadMoreButton: function(){\n\t\tthis.$drawer.find('.load-more').remove();\n\t},\n\n\tsetLoadMoreButton: function(){\n\n\t\t// To be created and appended below, if we need it.\n\t\tvar $loadMore;\n\n\t\t// Always kill the button\n\t\tthis.clearLoadMoreButton();\n\n\t\tvar article_summaries_collection = collections.article_summaries.instance;\n\t\tvar pagination_info = article_summaries_collection.metadata('pagination');\n\n\t\tvar current_page = pagination_info.page,\n\t\t\t\tpage_size = pagination_info.per_page,\n\t\t\t\ttotal_pages = pagination_info.total_pages;\n\n\t\tvar currently_loaded_count = article_summaries_collection.length,\n\t\t\t\ttotal_pending_for_search = article_summaries_collection.metadata('total');\n\n\t\t// Do we need the button\n\t\tvar more_alerts_to_load = current_page < total_pages,\n\t\t\t\tremaining_alerts = total_pending_for_search - currently_loaded_count,\n\t\t\t\tto_load_string = _.min([remaining_alerts, page_size]), // Say you'll load either a full page or how many are left, whichever is smaller\n\t\t\t\ttext_str,\n\t\t\t\tbutton_str;\n\n\t\ttext_str = 'Showing ' + currently_loaded_count + ' out of ' + total_pending_for_search;\n\n\t\tthis.$articleCount.html(text_str);\n\n\n\t\tif (more_alerts_to_load){\n\t\t\t// Create a little button in-memory (for now)\n\t\t\t$loadMore = $('<button class=\"load-more\"></button>');\n\t\t\tbutton_str = 'Load ' + to_load_string + ' more...'\n\n\t\t\t// Finally, append it as the last thing\n\t\t\t$loadMore.html(button_str).appendTo(this.$articleList);\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tupdateComparisonMarker: function(e){\n\t\tvar operation = $('.alter-comparison-marker[data-which=\"operation\"]').val(),\n\t\t\t\tgroup     = $('.alter-comparison-marker[data-which=\"group\"]').val();\n\n\t\tcollections.article_comparisons.instance.metadata('operation', operation);\n\t\tcollections.article_comparisons.instance.metadata('group', group);\n\t\tcollections.article_comparisons.instance.redrawMarkers();\n\n\t\treturn this;\n\t},\n\n\tonScrollTick: function($content){\n\t\tvar that = this,\n\t\t\t\tstuck,\n\t\t\t\tbuffer = 5,\n\t\t\t\tsticky_original_offset;\n\t\t// Vars to detect if at bottom\n\t\tvar content_scrollHeight = $content[0].scrollHeight,\n\t\t\t\tcontent_scrollTop = $content.scrollTop();\n\n\t\tvar $sticky = this.$el.find('.sticky');\n\n\t\tif ($sticky.length){\n\t\t\tsticky_original_offset = +$sticky.attr('data-offset');\n\n\t\t\tif (content_scrollTop >= sticky_original_offset - buffer) {\n\t\t\t\tstuck = true;\n\t\t\t} else {\n\t\t\t\tstuck = false;\n\t\t\t}\n\t\t\t$sticky.toggleClass('stuck', stuck);\n\t\t}\n\t},\n\n\tgoToDetail: function(e){\n\t\t// Convert to number\n\t\tvar article_id = +$(e.currentTarget).attr('data-id');\n\t\t\n\t\t// Make our target id what we clicked on \n\t\tthis.staged_article_detail = article_id;\n\t\tvar current_mode = models.section_mode.get('mode');\n\n\t\t// If we aren't in detail mode, setting it will be enough to bring about a page change\n\t\tif (current_mode != 'detail') {\n\t\t\tmodels.section_mode.set('mode', 'detail');\n\t\t// Otherwise if we are in detail mode, then skip the prep part and load this model\n\t\t} else {\n\t\t\tconsole.log('here', article_id)\n\t\t\tthis.sectionMode.detail.call(this, article_id);\n\t\t}\n\t\treturn this;\n\t},\n\n\tbakeArticleAdder: function(){\n\t\tvar defaults = {};\n\n\t\t// Create an instance of an event creator view\n\t\tvar add_article_view = new views.AddArticle({defaults: defaults, el: this.$addArticle[0]});\n\t\t// this._subviews.push(add_article_view);\n\t\tthis._time_picker = add_article_view._time_picker;\n\t\treturn this;\n\t},\n\n\ttoggleModal: function(e){\n\t\t// Open up a modal that lets you assign it to something\n\t\tviews.helpers.toggleModal(e);\n\t},\n\n\tupdateTagContainerByCounts: function(){\n\n\t\t_.each(this.tag_list_els, function($el, key){\n\t\t\tvar facet = models.tag_facets.get(key);\n\t\t\t$el.find('.count').html(facet.length);\n\t\t\tvar has_facet = facet.length > 0;\n\t\t\t$el.toggleClass('disabled', !has_facet);\n\n\t\t}, this);\n\n\t\treturn this;\n\t}\n\n\n});","app.Settings = Backbone.View.extend({\n\tel: '#main-wrapper',\n\n\tevents: {\n\t\t'click button.add': 'addItem'\n\t},\n\n\tinitialize: function(){\n\n\t\tthis._subviews = [];\n\n\t\t// Cache these selectors\n\t\tthis.$drawer = $('#drawer');\n\t\tthis.$content = $('#content');\n\n\t\tthis.default_recipes = {\n\t\t\t'rss-feeds': {\n\t\t\t\tview_name: 'SettingRssFeed',\n\t\t\t\trecipe_name: app.defaults.rss_feed_recipe_name,\n\t\t\t\toptions: {\n\t\t\t\t\ttemplate: templates.rssFeedRecipeFactory\n\t\t\t\t}\n\t\t\t},\n\t\t\t'staff-twitter-lists': {\n\t\t\t\tview_name: 'SettingStaffTwitterList',\n\t\t\t\trecipe_name: app.defaults.staff_twitter_list_to_promotion_recipe_name,\n\t\t\t\toptions: {\n\t\t\t\t\ttemplate: templates.staffTwitterListRecipeFactory\n\t\t\t\t}\n\t\t\t},\n\t\t\t'twitter-users': {\n\t\t\t\tview_name: 'SettingTwitterUser',\n\t\t\t\trecipe_name: app.defaults.staff_twitter_user_to_promotion_recipe_name,\n\t\t\t\toptions: {\n\t\t\t\t\ttemplate: templates.twitterUserRecipeFactory\n\t\t\t\t}\n\t\t\t},\n\t\t\t'facebook-pages': {\n\t\t\t\tview_name: 'SettingFacebookPage',\n\t\t\t\trecipe_name: app.defaults.staff_facebook_page_to_promotion_recipe_name,\n\t\t\t\toptions: {\n\t\t\t\t\ttemplate: templates.facebookPageRecipeFactory\n\t\t\t\t}\n\t\t\t},\n\t\t\t'subject-tags': {\n\t\t\t\tview_name: 'SettingSubjectTag'\n\t\t\t},\n\t\t\t'impact-tags': {\n\t\t\t\tview_name: 'SettingImpactTag'\n\t\t\t}\n\t\t};\n\n\t\t// Instantiate settings view\n\t\tthis.render();\n\n\t},\n\n\trender: function(){\n\n\t\t// Bind user settings to inputs\n\t\tcollections.user_settings.instance.each(function(userSetting){\n\n\t\t\tvar user_setting_views = {\n\t\t\t\temail: {\n\t\t\t\t\tview: views.SettingSingle\n\t\t\t\t},\n\t\t\t\tpassword: {\n\t\t\t\t\tview: views.SettingPassword\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tvar user_settings = ['email', 'password'];\n\n\t\t\tuser_settings.forEach(function(userSettingName){\n\t\t\t\t// Create a model outside of this collection so different settings keys can act independently, be validated independently but still relate to the same object\n\t\t\t\t// You might wonder, why put these in a collection to begin with\n\t\t\t\t// This could be refactored to make this just a list of different models to begin with but at least the overall pattern with this is more like other elements except for this line here\n\t\t\t\tvar oSetting = new models.user_setting.Model(userSetting.toJSON())\n\t\t\t\tvar setting_el = this.$content.find('.js-inputs-container[data-setting-name=\"'+userSettingName+'\"]')[0];\n\t\t\t\tvar setting_view = new user_setting_views[userSettingName].view({model: oSetting, el: setting_el, valueKey: userSettingName});\n\t\t\t\tthis._subviews.push(setting_view);\n\n\t\t\t}, this);\n\n\n\t\t}, this);\n\n\t\t// Bind settings to inputs\n\t\tcollections.settings.instance.each(function(orgSetting){\n\t\t\tvar name = orgSetting.get('name');\n\n\t\t\tvar setting_el = this.$content.find('.js-inputs-container[data-setting-name=\"'+name+'\"]')[0];\n\t\t\tvar setting_view = new views.SettingSingle({model: orgSetting, el: setting_el, valueKey: 'value'});\n\t\t\tthis._subviews.push(setting_view);\n\n\t\t}, this);\n\n\n\t\t// Bind article recipes to inputs\n\t\t_.each(this.default_recipes, function(recipeInfo, recipeShorthand){\n\t\t\tvar recipe_name = recipeInfo.recipe_name,\n\t\t\t\t\trecipe_models = collections.recipes.instance.where({name: recipeInfo.recipe_name});\n\n\t\t\tvar $parent_el = this.$content.find('.js-inputs-container[data-setting-name=\"'+recipeShorthand+'\"]');\n\t\t\t\n\t\t\tif (recipe_models.length){\n\t\t\t\tthis.setGroupEmpty($parent_el.parents('.js-setting-group'), 'false');\n\t\t\t}\n\n\t\t\trecipe_models.forEach(function(recipeModel){\n\t\t\t\tvar view_options = _.extend({\n\t\t\t\t\tmodel: recipeModel,\n\t\t\t\t\tparentEl: $parent_el[0]\n\t\t\t\t}, recipeInfo.options);\n\n\t\t\t\tvar setting_view = new views[recipeInfo.view_name]( view_options );\n\t\t\t\t$parent_el.append(setting_view.el);\n\t\t\t\tthis._subviews.push(setting_view);\n\t\t\t}, this);\n\n\t\t}, this);\n\n\n\t\t// Bind subject tags to inputs\n\t\tcollections.subject_tags.instance.each(function(subjectTag){\n\n\t\t\tvar $subject_tag_container = this.$content.find('.js-inputs-container[data-setting-name=\"subject-tags\"]');\n\t\t\tvar subject_tag_view = new views.SettingSubjectTag({model: subjectTag});\n\t\t\t$subject_tag_container.append(subject_tag_view.el);\n\t\t\tthis._subviews.push(subject_tag_view);\n\n\t\t}, this);\n\n\n\t\t// Bind impact tags to inputs\n\t\tcollections.impact_tags.instance.each(function(impactTag){\n\n\t\t\tvar $impact_tag_container = this.$content.find('.js-inputs-container[data-setting-name=\"impact-tags\"]');\n\t\t\tvar impact_tag_view = new views.SettingImpactTag({model: impactTag});\n\t\t\t$impact_tag_container.append(impact_tag_view.el);\n\t\t\tthis._subviews.push(impact_tag_view);\n\n\t\t}, this);\n\n\n\t\treturn this;\n\t},\n\n\tsetGroupEmpty: function($settingGroup, isEmpty){\n\t\t$settingGroup.attr('data-empty', isEmpty);\n\n\t\treturn this;\n\t},\n\n\taddItem: function(e){\n\t\tvar $btn = $(e.currentTarget),\n\t\t\t\t$settingGroup = $btn.parents('.js-setting-group'),\n\t\t\t\tis_empty = $settingGroup.attr('data-empty');\n\n\t\t// Make the `create` button turn into a `'+'` button\n\t\tif (is_empty === 'true'){\n\t\t\tthis.setGroupEmpty($settingGroup, 'false')\n\t\t}\n\n\t\tvar $inputsContainer = $btn.siblings('.js-inputs-container'),\n\t\t\t\tsetting_name = $inputsContainer.attr('data-setting-name'),\n\t\t\t\tsetting_view_info = this.default_recipes[setting_name],\n\t\t\t\toptions = setting_view_info.options || {}\n\n\t\tvar view = new views[setting_view_info.view_name]( options );\n\n\t\t$inputsContainer.append(view.el);\n\t\tthis._subviews.push(view);\n\n\t\treturn this;\n\n\t},\n\n\treportError: function(msg){\n\t\tconsole.log('Error', msg);\n\t\treturn false;\n\t}\n\n\n});","app.Submit = Backbone.View.extend({\n  el: '#main-wrapper',\n\n  events: {\n    'submit form': 'saveForm'\n  },\n\n  initialize: function(){\n\n    this._subviews = [];\n\n    this.$formContainer = this.$el.find('#form-container');\n\n    // Instantiate settings view\n    this.render();\n\n  },\n\n  render: function(){\n\n    var defaults = {\n      status: 'pending'\n    };\n\n    var event_creator_view = new views.EventCreator({el: this.$formContainer[0], model: defaults, collection: this.collection, disableModal: true, saveMsg: 'Pending event added to the Approval River!'});\n    this._subviews.push(event_creator_view);\n    this._time_picker = event_creator_view._time_picker;\n\n\n    return this;\n  }\n\n \n\n});","views.helpers = {\n\n\ttoggleModal: function(e){\n\t\te.preventDefault();\n\t\te.stopPropagation();\n\t\tconsole.log('toggling')\n\t\tvar $modalParent = $(e.currentTarget).parents('.modal-parent');\n\t\tvar $tray = $modalParent.find('.modal-outer');\n\t\t$tray.toggleClass('active', !$tray.hasClass('active'));\n\t\t// This will set `overflow: hidden` so you can't horizontal scroll\n\t\t$('body').attr('data-modal', $tray.hasClass('active'));\n\t\t// Give the parent a flag to control styles and things\n\t\t$modalParent.attr('data-modal-open', $tray.hasClass('active'));\n\n\t\t// Center it\n\t\tthis.centerishInViewport( $tray.find('.modal-inner') );\n\t},\n\n\tcenterishInViewport: function($el){\n\t\t// Center the element horizontally and ten percent above the center of vertical\n\t\tvar el_width = $el.outerWidth(),\n\t\t    el_height = $el.outerHeight(),\n\t\t    v_width = $(window).width(),\n\t\t    v_height = $(window).height();\n\n\n\t\t$el.css({\n\t\t\ttop:  _.max([4, (((v_height/2 - (el_height/2))/v_height*100) - 10)]) + '%',\n\t\t\tleft: (v_width/2 - (el_width/2))/v_width*100 + '%' \n\t\t});\n\t},\n\n\t// groupSetEventOptions: function(json){\n\t// \tjson.set_event_options = {};\n\t// \t_.each(json.options, function(val, key){\n\t// \t\tif (/^set_event_/.test(key)){\n\t// \t\t\tjson.set_event_options[key] = val;\n\t// \t\t\tdelete json.options[key];\n\t// \t\t}\n\t// \t});\n\t// \treturn json;\n\t// }\n}","Backbone.View.prototype.killView = function() {\n\n\tif (this._time_picker) { this._time_picker.destroy(); }\n\tthis.killAllSubviews();\n\tthis.undelegateEvents();\n\tthis.remove();\n\t\n}\n\nBackbone.View.prototype.silenceView = function() {\n\n\tthis.silenceAllSubviews();\n\tthis.undelegateEvents();\n\tif (this._time_picker) { this._time_picker.destroy(); }\n\t\n}\n\nBackbone.View.prototype.silenceAllSubviews = function() {\n\n\tif (this._subviews && _.isArray(this._subviews)){\n\t\tthis._subviews.forEach(function(subview){\n\t\t\tsubview.silenceView();\n\t\t});\n\t\tthis._subviews = [];\n\t}\n\t\n}\n\nBackbone.View.prototype.killAllSubviews = function() {\n\n\tif (this._subviews && _.isArray(this._subviews)){\n\t\tthis._subviews.forEach(function(subview){\n\t\t\tsubview.killView();\n\t\t});\n\t\tthis._subviews = [];\n\t}\n\n}","views.AA_BaseArticleViz = Backbone.View.extend({\n\n\ttagName: 'section',\n\n\tclassName: 'article-detail-viz-container',\n\n\tsetMarkup: function(){\n\t\tthis.setTitle();\n\t\tthis.setContainer();\n\t},\n\n\tsetTitle: function(){\n\t\tthis.$el.html('<h3 class=\"title\">'+this.section_title+'</h3>');\n\t\treturn this;\n\t},\n\n\tcalcComparisonMarkerParams: function(){\n\t\tthis.comparison_marker_operation \t= collections.article_comparisons.instance.metadata('operation'); // `mean` or `median`\n\t\tthis.comparison_marker_group \t\t\t= collections.article_comparisons.instance.metadata('group'); // `all` for now\n\t\t// this.comparison_marker_max \t\t\t\t= collections.article_comparisons.instance.metadata('comparison-marker-max');\n\n\t\treturn this;\n\t},\n\n\tsetContainer: function(){\n\t\tthis.$vizContainer = $('<div class=\"viz-container\"></div>').appendTo(this.$el);\n\t\treturn this;\n\t},\n\n\tfancyPercent: function(decimal){\n\t\tif (decimal < .01) { \n\t\t\treturn '<1%'; \n\t\t} else {\n\t\t\treturn Math.round(decimal*100) + '%';\n\t\t}\n\n\t},\n\n\trender: function(renderMarker){\n\t\tvar that = this;\n\t\tvar vizContainer = this.$vizContainer.get(0);\n\t\tvar d3_vizContainer = d3.select(vizContainer);\n\n\t\tvar _columns = d3_vizContainer.selectAll('.bar-container').data(this.data).enter();\n\n\t\tvar bar_container = _columns.append('div')\n\t\t\t.classed('bar-container', true);\n\n\n\t\t// Do the bullet\n\t\tbar_container.append('div')\n\t\t\t\t.classed('bar', true)\n\t\t\t\t.style('width', function(d){\n\t\t\t\t\treturn ((d.pageviews / that.total)*100).toFixed(2) + '%';\n\t\t\t\t});\n\n\t\t// And the marker\n\t\t// But only if that's set\n\t\t// It's currently not being drawn for domain referrers bc we don't have that data\n\t\t// TODO, maybe cache this value so we're not calculating it multiple times\n\t\tvar bullet_markers;\n\t\tif (renderMarker){\n\t\t\tbullet_markers = bar_container.append('div')\n\t\t\t\t.classed('marker-container', true)\n\t\t\t\t.style('left', function(d) { \n\t\t\t\t\treturn that.calcLeftOffset(d.facet, that.comparison_marker_operation);\n\t\t\t\t})\n\t\t\t\t.classed('tooltipped', true)\n\t\t\t\t.attr('aria-label', function(d){\n\t\t\t\t\tvar dimension = helpers.templates.toTitleCase(that.comparison_marker_operation);\n\n\t\t\t\t\tif (dimension == 'Mean'){\n\t\t\t\t\t\tdimension = 'Average'\n\t\t\t\t\t}\n\t\t\t\t\treturn dimension + ' of ' + that.comparison_marker_group + ' articles: ' + that.calcLeftOffset(d.facet, that.comparison_marker_operation);\n\t\t\t\t})\n\t\t\t\t.attr('data-tooltip-align', function(d){\n\t\t\t\t\tvar leftOffset = parseInt(that.calcLeftOffset(d.facet, that.comparison_marker_operation)),\n\t\t\t\t\t\t\talignment = 'center';\n\n\t\t\t\t\tif (leftOffset <= 20){\n\t\t\t\t\t\talignment = 'left'\n\t\t\t\t\t} else if (leftOffset > 75) {\n\t\t\t\t\t\talignment = 'right'\n\t\t\t\t\t}\n\n\t\t\t\t\treturn alignment;\n\t\t\t\t})\n\t\t\t\t.append('div')\n\t\t\t\t\t.classed('marker', true);\n\t\t}\n\n\t\tbar_container.append('div')\n\t\t\t\t\t.classed('label', true)\n\t\t\t\t\t.html(function(d){\n\t\t\t\t\t\tvar percent = that.fancyPercent(d.pageviews/that.total),\n\t\t\t\t\t\t\t\tcount = (d.pageviews) ? (helpers.templates.addCommas(d.pageviews)) : ''; // Only print this string if count isn't zero\n\n\t\t\t\t\t\treturn '<strong>' + helpers.templates.toTitleCase(d.facet) + '</strong> &mdash; ' + percent+ ', ' + count;\n\t\t\t\t\t});\n\n\t\tthis.bar_container = bar_container;\n\n\t\treturn this;\n\n\t},\n\n\tredrawMarker: function(){\n\t\tthis.calcComparisonMarkerParams();\n\n\t\tvar that = this;\n\t\t// Don't save a cached selector because then sometimes we'll have that var and sometimes we won't\n\t\t// A better is to make a selection on redraw, which will either be empty or have something\n\t\tvar markers = this.bar_container.selectAll('.marker-container') \n\t\t\t\t.transition()\n\t\t\t\t.duration(450)\n\t\t\t\t.ease('exp-out')\n\t\t\t\t.styleTween('left', function(d) { \n\t\t\t\t\t// This is madness, but d3 requires us to venture to such depths\n\t\t\t\t\t// D3 won't interpolate a starting value in the way you think\n\t\t\t\t\t// So if you want to interpolate from left 23% to left 26%\n\t\t\t\t\t// It will interpolate from the pixel representation of 23% to 20%\n\t\t\t\t\t// So that will go from 10px to 20%, the 10px acts like a percent\n\t\t\t\t\t// So we reverse engineer the percent from the pixel value wrt to its parent container\n\t\t\t\t\t// And set that as the starting percentage\n\t\t\t\t\t// Some reference https://github.com/mbostock/d3/issues/1070\n\t\t\t\t\tvar starting_px = parseFloat(d3.select(this).style('left')),\n\t\t\t\t\t\t\tparent_px = this.parentNode.offsetWidth,\n\t\t\t\t\t\t\tstarting_percent = starting_px/parent_px * 100,\n\t\t\t\t\t\t\tending_percent = that.calcLeftOffset(d.facet, that.comparison_marker_operation),\n\t\t\t\t\t\t\tending_pixel = parseFloat(ending_percent)* parent_px;\n\n\t\t\t\t\treturn d3.interpolate(starting_percent, ending_percent); \n\t\t\t\t})\n\t\t\t\t.attr('aria-label', function(d){\n\t\t\t\t\treturn helpers.templates.toTitleCase(that.comparison_marker_operation) + ' of ' + that.comparison_marker_group + ' articles: ' + that.calcLeftOffset(d.facet, that.comparison_marker_operation);\n\t\t\t\t})\n\n\t},\n\n\tcalcLeftOffset: function(metric, val, group){\n\t\tgroup = group || this.comparison_marker_group;\n\t\t/** Metric options: per97_5, per75, median, per25, per2_5, per5, per95, mean **/\n\t\tvar group_metric = pageData.articleComparisons[group],\n\t\t\t\toffset_percent = -999,\n\t\t\t\tthis_metrics_info = _.findWhere(pageData.articleComparisons[group], {metric: 'per_'+metric}),\n\t\t\t\tmax,\n\t\t\t\tscale;\n\n\t\tif (group_metric && this_metrics_info){\n\t\t\tmax \t= 1; // This is 1 because the universe is just this article, as opposed to compensating for high performing articles in the comparison grid\n\t\t\tscale = d3.scale.linear()\n\t\t\t\t\t\t\t\t\t\t.domain([0, max])\n\t\t\t\t\t\t\t\t\t\t.range([0, 100]);\n\n\t\t\tif (typeof val == 'string') {\n\t\t\t\tval = this_metrics_info[val];\n\t\t\t}\n\n\t\t\toffset_percent = Math.round(scale(val));\n\t\t} else {\n\t\t\tconsole.error('ERROR: ' + group + ' is not a comparison value in `pageData.articleComparisons` or per_' + metric + ' does not exist as a metric in that group.')\n\t\t}\n\n\t\treturn offset_percent.toString() + '%';\n\t}\n\n\n});","views.AA_BaseForm = Backbone.View.extend({\n\n\tevents: {\n\t\t'click .modal-overlay': 'toggleModal',\n\t\t'click .modal-close': 'toggleModal',\n\t\t'click .article-assignee': 'removeArticleAssignee'\n\t},\n\n\tkillPropagation: function(e){\n\t\te.stopPropagation();\n\t},\n\n\ttoggleModal: function(e){\n\t\te.stopPropagation();\n\t\t// Open up a modal that lets you assign it to something\n\t\tviews.helpers.toggleModal(e);\n\t},\n\n\t// keyBeenPressed: function(e){\n\t// \tvar return_key_code = 13;\n\n\t// \tconsole.log(e.keyCode)\n\n\t// \tif (e.keyCode == return_key_code){\n\t// \t\te.stopPropagation();\n\t// \t\te.preventDefault();\n\t// \t}\n\t// },\n\n\tassignmentTemplateFactory: _.template('<div class=\"article-assignee\"\"><span class=\"remove-assignee labelled\" aria-label=\"<%= title %>\" >&times;</span><input type=\"hidden\" name=\"content_items[]:object\" value=\\'{\"id\": <%= id %>, \"title\": \"<%= title %>\"}\\'/></div>'),\n\n\tbakeModal: function(title){\n\t\tvar modal_markup = '';\n\t\t// modal_markup += '<div class=\"modal-outer\">';\n\t\t\tmodal_markup += '<div class=\"modal-overlay\"></div>';\n\t\t\tmodal_markup += '<div class=\"modal-inner\">';\n\t\t\t\tmodal_markup += '<div class=\"modal-title\">'+title+'</div>';\n\t\t\t\tmodal_markup += '<form></form>';\n\t\t\tmodal_markup += '</div>';\n\t\t// modal_markup += '</div>';\n\n\t\tvar $target = (this.$el.hasClass('modal-outer')) ? this.$el : this.$el.find('.modal-outer');\n\t\t$target.append(modal_markup);\n\t\tthis.$form = $target.find('form');\n\t\treturn this;\n\t},\n\n\trefresh: function(enabled){\n\t\tthis.render();\n\t\tthis.postRender(enabled);\n\t},\n\n\tpostRender: function(enabled){\n\n\t\tif (enabled.search) { this.initArticleTitleSearcher(); }\n\t\tif (enabled.pikaday) { this.initPikaday(); }\n\t\tthis.$submitMsgText = this.$el.find('.submit-msg');\n\n\t\tvar el_modal_outer = this.$el.find('.modal-outer')[0];\n\n\t\t// Our submit page doesn't use d3 because there's no dragging\n\t\tif (window.d3 !== undefined){\n\t\t\td3.select(el_modal_outer).call(this.drag());\n\t\t}\n\n\t\treturn this;\n\t},\n\n\t// Override this in parent views\n\tremoveSetEventPrefix: _.identity,\n\n\tbakeFormInputRow: function(fieldName, data, isDefaultEvent, selectedVal){\n\t\tvar groups = {\n\t\t\ttime_of_day: 'schedule_by',\n\t\t\tcrontab: 'schedule_by',\n\t\t\tminutes: 'schedule_by'\n\t\t};\n\n\t\tvar type = data.input_type,\n\t\t\t\tis_hidden = (type == 'hidden'),\n\t\t\t\tfield_name_pp = this.prettyName(fieldName),\n\t\t\t\twhich_name = this.removeSetEventPrefix(fieldName),\n\t\t\t\tmarkup = '',\n\t\t\t\thas_help_link = (data.help && data.help.link),\n\t\t\t\thas_help_desc = (data.help && data.help.description),\n\t\t\t\tskipped_fields = ['slug'],\n\t\t\t\tgroup = groups[which_name] || '';\n\n\t\tisDefaultEvent = isDefaultEvent || false;\n\n\t\tif (!_.contains(skipped_fields, fieldName)){\n\t\t\t// Bake the general row container, the label and the input container\n\t\t\tmarkup = '<div class=\"form-row\" data-which=\"'+which_name+'\" data-group=\"'+group+'\" data-hidden=\"'+is_hidden+'\">';\n\t\t\t\tmarkup += '<div class=\"form-row-label-container '+((has_help_link) ? 'has-help-link' : '')+'\">';\n\t\t\t\t\tmarkup += '<label for=\"'+fieldName+'\"> '+field_name_pp+((has_help_desc) ? '<span class=\"tooltipped question-mark\" aria-label=\"'+data.help.description+'\">?</span>' : '' )+'</label> ';\n\t\t\t\tmarkup += '</div>';\n\t\t\t\tmarkup += '<div class=\"form-row-input-container\" data-which=\"'+which_name+'\">';\n\t\t\t\t\tif (has_help_link) markup += '<div class=\"help-row\"><a href=\"'+data.help.link+'\" target=\"_blank\">What do I put here?</a></div>'; \n\t\t\t\t\t// Get the appropriate markup\n\t\t\t\t\tif (!this.formJsonToMarkup[type]){\n\t\t\t\t\t\tconsole.log('ERROR: Your specified `input_type` of ', type, 'on the object', data, 'is missing a corresponding function in `formJsonToMarkup`');\n\t\t\t\t\t}\n\t\t\t\t\tmarkup += this.formJsonToMarkup[type].call(this, fieldName, data, isDefaultEvent, selectedVal);\n\t\t\t\tmarkup += '</div>';\n\t\t\tmarkup += '</div>';\n\t\t}\n\n\t\treturn markup;\n\t},\n\n\tformJsonToMarkup: {\n\n\t\tsearch: function(fieldName, data, isDefaultEvent){\n\t\t\t// Rename the field name\n\t\t\tfieldName = 'assignees-selector';\n\n\t\t\t// var required = data.required ? 'required' : '';\n\n\t\t\t// Give this a normal text input now, minus the data value, we'll instantiate the article searcher and load selecteds after it's been added to the DOM\n\t\t\tvar input_markup = '<input type=\"text\" name=\"'+fieldName+'\" class=\"'+fieldName+'\" placeholder=\"'+((data.help && data.help.placeholder) ? this.escapeQuotes(data.help.placeholder) : '') +'\" data-is-default-event=\"'+isDefaultEvent+'\" data-serialize-skip=\"true\"/>';\n\n\t\t\treturn input_markup;\n\t\t},\n\n\t\tcontent_items: function(assignees){\n\t\t\tvar markup = '';\n\t\t\tassignees.forEach(function(assignee){\n\t\t\t\tmarkup += this.assignmentTemplateFactory(assignee);\n\t\t\t}, this);\n\t\t\treturn markup;\n\t\t},\n\n\t\tset_event_content_items: function(assignees){\n\t\t\treturn this.formJsonToMarkup.content_items.call(this, assignees);\n\t\t},\n\n\t\tdatepicker: function(fieldName, data, isDefaultEvent){\n\t\t\tvar class_name = this.removeSetEventPrefix(fieldName);\n\n\t\t\tvar required = data.required ? 'required' : '';\n\n\t\t\t// Give this a normal timestamp input, we'll instantiate pikaday after it's been added to the DOM\n\t\t\t// This first input is for the pikaday select and display\n\t\t\tvar input_markup = '<input type=\"text\" data-type=\"datepicker\" class=\"'+class_name+'\" '+required+' placeholder=\"'+((data.help && data.help.placeholder) ? this.escapeQuotes(data.help.placeholder) : '') +'\" autocomplete=\"off\" data-is-default-event=\"'+isDefaultEvent+'\" data-serialize-skip=\"true\"/>';\n\t\t\t// Make an input sibling that will be what we read the data from\n\t\t\tinput_markup += '<input type=\"hidden\" name=\"'+fieldName+'\" data-type=\"datepicker-value\" class=\"'+class_name+'\" data-is-default-event=\"'+isDefaultEvent+'\"/>';\n\t\t\t\n\t\t\treturn input_markup;\n\t\t},\n\n\t\ttextNumberOrHidden: function(fieldName, data, which, isDefaultEvent, selectedVal){\n\t\t\tselectedVal = selectedVal || data.selected;\n\t\t\t// TODO, investigate why value needs to be double escaped for Brian's version of Chrome.\n\t\t\tvar value = this.escapeQuotes(selectedVal),\n\t\t\t\t\tclass_name = this.removeSetEventPrefix(fieldName);\n\n\t\t\tvar required = data.required ? 'required' : '';\n\n\t\t\tvar input_markup = '<input type=\"'+which+'\" name=\"'+fieldName+':auto\" class=\"'+class_name+'\" value=\"'+this.escapeQuotes(value)+'\" '+required+' placeholder=\"'+((data.help && data.help.placeholder) ? this.escapeQuotes(data.help.placeholder) : '') +'\" '+((which == 'number') ? 'min=\"0\"' : '') +' data-is-default-event=\"'+isDefaultEvent+'\"/>';\n\t\t\t\n\t\t\treturn input_markup;\n\t\t},\n\n\t\ttext: function(fieldName, data, isDefaultEvent, selectedVal){\n\t\t\treturn this.formJsonToMarkup.textNumberOrHidden.call(this, fieldName, data, 'text', isDefaultEvent, selectedVal);\n\t\t},\n\n\t\thidden: function(fieldName, data, isDefaultEvent, selectedVal){\n\t\t\treturn this.formJsonToMarkup.textNumberOrHidden.call(this, fieldName, data, 'hidden', isDefaultEvent, selectedVal);\n\t\t},\n\n\t\tsearchstring: function(fieldName, data, isDefaultEvent, selectedVal){\n\t\t\t// Do the same as text\n\t\t\treturn this.formJsonToMarkup.text.call(this, fieldName, data, isDefaultEvent, selectedVal);\n\t\t},\n\n\t\tnumber: function(fieldName, data, isDefaultEvent, selectedVal){\n\t\t\treturn this.formJsonToMarkup.textNumberOrHidden.call(this, fieldName, data, 'number', isDefaultEvent, selectedVal);\n\t\t},\n\n\t\tparagraph: function(fieldName, data, isDefaultEvent, selectedVal){\n\t\t\tselectedVal = selectedVal || data.selected;\n\t\t\tvar value = this.escapeQuotes(selectedVal) || '',\n\t\t\t\t\tclass_name = this.removeSetEventPrefix(fieldName);\n\n\t\t\tvar input_markup = '<textarea type=\"text\" name=\"'+fieldName+'\" class=\"'+class_name+'\" placeholder=\"'+((data.help && data.help.placeholder) ? this.escapeQuotes(data.help.placeholder) : '') +'\" data-is-default-event=\"'+isDefaultEvent+'\">'+value+'</textarea>';\n\t\t\t\n\t\t\treturn input_markup;\n\t\t},\n\n\t\tselect: function(fieldName, data, isDefaultEvent, selectedVal){\n\t\t\tselectedVal = selectedVal || data.selected;\n\t\t\tvar class_name = this.removeSetEventPrefix(fieldName);\n\n\t\t\tvar required = data.required ? 'required' : '';\n\n\t\t\tvar input_markup = '<select class=\"'+class_name+'\" name=\"'+fieldName+':auto\" data-is-default-event=\"'+isDefaultEvent+'\" '+required+'>';\n\n\t\t\t_.each(data.input_options, function(option){\n\t\t\t\tvar selected = '';\n\t\t\t\tif (selectedVal == option) {\n\t\t\t\t\tselected = 'selected';\n\t\t\t\t}\n\t\t\t\tinput_markup += '<option value=\"'+option+'\" '+selected+'>'+this.prettyName(option)+'</option>';\n\t\t\t}, this);\n\t\t\tinput_markup += '</select>';\n\t\t\t\n\t\t\treturn input_markup;\n\t\t},\n\n\t\tcheckbox: function(fieldName, data, isDefaultEvent, selectedVal){\n\t\t\tselectedVal = selectedVal || data.selected;\n\t\t\tvar input_markup = '',\n\t\t\t\t\tnamespacer = 'NewsLynx'; // To avoid id collisions\n\n\t\t\tif (!data.input_options.length){\n\t\t\t\tinput_markup = '<span class=\"placeholder\">You haven\\'t yet made any '+fieldName.replace(/^set_event_/,'').replace(/_/g,' ')+' yet. Create them on the <a href=\"/settings\" target=\"_blank\" class=\"out-link\">Settings</a> page.</span>';\n\t\t\t}\n\n\t\t\t// var len = data.input_options.length;\n\t\t\t_.each(data.input_options, function(checkboxItemObj, idx){\n\t\t\t\tvar style = this.styleCheckboxLabel(checkboxItemObj);\n\t\t\t\tvar checkboxId = _.uniqueId(namespacer+'|'+fieldName + '|' + checkboxItemObj.id + '|'); // `form.serializeArray()` will turn this into a data value so later on we'll to remove the number from this value since it will needed to become a generic property name on the key. \n\t\t\t\tinput_markup += '<div class=\"form-checkbox-group tags\">';\n\t\t\t\t\tvar checked = '';\n\t\t\t\t\tvar selected_ids = selectedVal;\n\t\t\t\t\tif (_.contains(selected_ids, checkboxItemObj.id)) {\n\t\t\t\t\t\tchecked = 'checked';\n\t\t\t\t\t}\n\t\t\t\t\t// var label_orientation = (idx != (len - 1)) ? '' : 'right';\n\t\t\t\t\tinput_markup += '<input class=\"tag\" id=\"'+checkboxId+'\" name=\"'+fieldName+'[]:number\" value=\"'+checkboxItemObj.id+'\" type=\"checkbox\" ' + checked + ' data-is-default-event=\"'+isDefaultEvent+'\"/>';\n\t\t\t\t\tinput_markup += '<label class=\"tag tooltipped\" data-tooltip-orientation=\"right\" for=\"'+checkboxId+'\" '+style+' aria-label=\"'+checkboxItemObj.level+' '+checkboxItemObj.category+'\" >'+checkboxItemObj.name+'</label>';\n\t\t\t\tinput_markup += '</div>';\n\t\t\t}, this);\n\n\t\t\treturn input_markup;\n\t\t}\n\n\t},\n\n\tstyleCheckboxLabel: function(checkboxItemObj){\n\t\t// console.log(checkboxItemObj, checkboxItemObj.color)\n\t\tvar bgColor = checkboxItemObj.color,\n\t\t\t\tcolor = this.whiteOrBlack(bgColor);\n\n\t\treturn 'style=\"background-color:'+bgColor+';color:'+color+';\"';\n\t},\n\n\tprettyName: function(name){\n\t\t// Standardize name to remove the `set_event_` prefix used in keys on default event creator forms like when creating or modifying a recipe\n\t\tif (/^set_event_/.test(name)){\n\t\t\tname = name.replace('set_event_', '');\n\t\t}\n\t\t// Make any name changes here to prettify things that might not be terribly evident what they do from their API slug.\n\t\tvar name_changes = {\n\t\t\t'q': 'search_query',\n\t\t\t'content_items': 'Assign to..',\n\t\t\t'url': 'URL',\n\t\t\t'img_url': 'Image URL',\n\t\t\t'filter': 'search_query',\n\t\t\t'min_followers': 'min. followers',\n\t\t\t'tag_ids': 'impact tag(s)',\n\t\t\t'datetime': 'date / time',\n\t\t\t'interval': 'interval (seconds)',\n\t\t\t'title': 'event title'\n\t\t};\n\n\t\tif (name_changes[name]) {\n\t\t\tname = name_changes[name];\n\t\t}\n\t\tif (!name) {\n\t\t\tname = '';\n\t\t}\n\t\tname = name.replace(/_/g, ' ');\n    return name.charAt(0).toUpperCase() + name.slice(1);\n\t},\n\n\tescapeQuotes: function(term){\n\t\tif (term === 0) { return term; }\n\t\tif (!term) { return ''; }\n\t\tif (typeof term !== 'string') { return term };\n\t\treturn term.replace(/\"/g,'&quot;')\n\t},\n\n\tprettyDatestamp: function(utcDate){\n\t\treturn new Date(utcDate).toLocaleString();\n\t},\n\n\tinitArticleTitleSearcher: function(){\n\t\tvar $typeahead = this.$el.find('.assignees-selector'),\n\t\t\t\tcontent_items = _.findWhere(this.full_schema, {input_type: 'search'}), // Get the element in our schema that is of `search` `input_type`\n\t\t\t\tself = this;\n\n\t\t// TEMPORARY until we fully eliminate `combineForm` stuff\n\t\t// For now, mimic the structure it's expecting\n\t\tif (!content_items && this.full_info.vals){\n\t\t\tcontent_items = {\n\t\t\t\tselected: this.full_info.vals.content_items\n\t\t\t}\n\t\t}\n\n\t\tthis.$typeaheadRow = $typeahead.parents('.form-row');\n\t\t$('<div class=\"form-row article-assignees\" ></div>').insertAfter(this.$typeaheadRow);\n\n\t\t$typeahead.typeahead({\n\t\t\thighlight: true,\n\t\t\tminLength: 3\n\t\t},{\n\t\t\tname: 'content-items',\n\t\t\tdisplayKey: 'title',\n\t\t\tasync: true,\n\t\t\tsource: function(query, syncResults, asyncResults){\n\t\t\t\tvar query_url = '/api/_VERSION/content?q='+query+'&search=title&fields=id,title';\n\t\t\t\t$.ajax({\n\t\t\t\t\turl: query_url,\n\t\t\t\t\tdataType: 'json',\n\t\t\t\t\tsuccess: function(results){\n\t\t\t\t\t\tasyncResults(results.content_items);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\t$typeahead.on('typeahead:selected', function(e, d){\n\t\t\te.preventDefault();\n\t\t\t// Clear this val on selection\n\t\t\t$(this).typeahead('val', '');\n\t\t\t// Add selection down below\n\t\t\tself.addArticleAssignee(d, content_items.selected);\n\t\t});\n\n\t\t// Load the selecteds, if they exist\n\t\tif (_.isArray(content_items.selected)){\n\t\t\tcontent_items.selected.forEach(function(contentItem){\n\t\t\t\tself.addArticleAssignee(contentItem, []);\n\t\t\t});\n\t\t}\n\n\t\treturn this;\n\t},\n\n\taddArticleAssignee: function(newContentItem, existingContentItems){\n\t\tvar $articleAssignments,\n\t\t\t\tid,\n\t\t\t\tform_data,\n\t\t\t\tmarkup;\n\n\t\tif (newContentItem){\n\t\t\t$articleAssignments = this.$el.find('.form-row.article-assignees');\n\t\t\tid = newContentItem.id;\n\n\t\t\tvar form_data = this.getSettings(true); // `true` means get the default event values also\n\n\t\t\t// Currently, selecting an article won't remove it from the typeahead options, so as a fix, don't add things if they already exist\n\t\t\tif (!_.contains(_.pluck(existingContentItems, 'id'), id)){\n\n\t\t\t\tmarkup = this.assignmentTemplateFactory(newContentItem);\n\t\t\t\t$articleAssignments.append(markup);\n\t\t\t}\n\t\t\t\n\t\t} else {\n\t\t\tconsole.log('ERROR: Article assignee not found');\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tremoveArticleAssignee: function(e){\n\t\t// Remove from DOM\n\t\t$(e.currentTarget).remove();\n\t\treturn this;\n\t},\n\n\tinitPikaday: function(){\n\t\tvar time_picker,\n\t\t\t\tthat = this,\n\t\t\t\t$el = this.$el.find('input[data-type=\"datepicker\"]'),  // This convention of using `data-type` breaks from our current convention of using names. But those names follow data key fields. In this case, `created`, is a bit too specific. This gives us flexibility in making text fields Pikaday instances without them being tied to a specific datakey. see `formJsonToMarkup.datepicker` for where this is set.\n\t\t\t\tel = $el[0], // Pikaday wants a pure dom object, not a jquery object\n\t\t\t\t$form_el = $el.siblings('input[data-type=\"datepicker-value\"]'); // We create a sibling value that stores the properly formatted date string so we can use the $el input for a prettier display;\n\n\t\ttime_picker = new Pikaday({\n\t\t\tfield: el,\n\t\t\tshowTime: true,\n\t\t\tuse24hour: true,\n\t\t\ttimezone: pageData.timezone,\n\t\t\t// clearInvalidInput: true,\n\t\t\t// onOpen: function(){\n\t\t\t// \t// console.log('existing',this.toString())\n\t\t\t// },\n\t\t\tonSelect: function(){\n\t\t\t\tvar moment_timezone_date = this.getMoment(),\n\t\t\t\t\t\tfull_date_string = moment_timezone_date.format(),\n\t\t\t\t\t\tpretty_date_string = moment_timezone_date.format(helpers.templates.prettyDateTimeFormat); // June 23, 2014, 9:13 am\n\n\t\t\t\t$form_el.val(full_date_string);\n\t\t\t\t$el.val(pretty_date_string);\n\n\t\t\t\t// console.log('form_el',full_date_string)\n\t\t\t\t// console.log('el',pretty_date_string)\n\t\t\t}\n\t\t\t// ,\n\t\t\t// onClear: function(){\n\t\t\t// \t// // Clear the timestamp on error or non-date value\n\t\t\t// \t// that.form_data.timestamp = null;\n\t\t\t// }\n\t\t});\n\n\t\t// TEMPORARY to handle our phasing out of `combineFormSchemaWithVal`\n\t\tvar full_schema,\n\t\t\t\tdate_obj_in_schema,\n\t\t\t\tselected_date;\n\t\tif (this.full_info){\n\t\t\tselected_date = this.full_info.vals.created\n\t\t} else {\n\t\t\tfull_schema = this.full_schema;\n\t\t\tdate_obj_in_schema = _.findWhere(full_schema, {input_type: 'datepicker'}) || {}; // Give a `{}` if undefined so the next line will fail gracefully\n\t\t\tselected_date = date_obj_in_schema.selected\n\t\t}\n\n\t\t// This won't always have a value, if we're initing pikaday without preloading\n\t\tif (selected_date){\n\t\t\tselected_date = moment(selected_date)\n\t\t\ttime_picker.setMoment(selected_date);\n\t\t}\n\n\t\tthis._time_picker = time_picker;\n\t\treturn this;\n\t},\n\n\twhiteOrBlack: function(bgColorHex){\n\t\tvar rgbColor = this.hexToRgb(bgColorHex);\n\t\tvar r = rgbColor.r,\n\t\t\t\tg = rgbColor.g,\n\t\t\t\tb = rgbColor.b;\n\t\tvar yiq = (r * 299 + g * 587 + b * 114) / 1000;\n\t\treturn (yiq >= 128) ? 'black' : 'white';\n\t},\n\n\thexToRgb: function(hex){\n\t\t// Expand shorthand form (e.g. \"03F\") to full form (e.g. \"0033FF\")\n\t\tvar shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n\t\thex = hex.replace(shorthandRegex, function(m, r, g, b) {\n\t\t    return r + r + g + g + b + b;\n\t\t});\n\n\t\tvar result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n\t\treturn result ? {\n\t\t\tr: parseInt(result[1], 16),\n\t\t\tg: parseInt(result[2], 16),\n\t\t\tb: parseInt(result[3], 16)\n\t\t} : null;\n\t},\n\n\tbakeButtons: function(includeDelete){\n\t\tvar markup = '<div class=\"buttons-container\">';\n\t\t\t// Cancel\n\t\t\tmarkup += '<button class=\"cancel modal-close\">Cancel</button>';\n\t\t\t// Save\n\t\t\tmarkup += '<input class=\"save\" type=\"submit\" value=\"Save\"/>';\n\t\t\tmarkup += '<span class=\"submit-msg\"></span>'\n\t\t\t// Delete (optional)\n\t\t\tif (includeDelete){\n\t\t\t\tmarkup += '<input class=\"destroy\" type=\"button\" value=\"Delete\"/>';\n\t\t\t}\n\t\t// Close button container\n\t\tmarkup += '</div>';\n\t\treturn markup;\n\t},\n\n\tcombineFormSchemaWithVals: function(schema_obj, settings_obj){\n\t\tvar setting_schema = {};\n\t\t// For each key in settings, go and add that value under the `selected` key in the schema file\n\t\t// This value will then trigger in the markup baking that that value should be selected\n\t\t_.each(settings_obj, function(setting, fieldName){\n\t\t\tif (!schema_obj[fieldName]) {\n\t\t\t\tconsole.log('Your key name', fieldName, 'in your settings object of ', settings_obj)\n\t\t\t\tconsole.log('Needs a corresponding schema structure in' , schema_obj);\n\t\t\t}\n\n\t\t\tvar selected_array = schema_obj[fieldName].selected || [];\n\t\t\tsetting_schema[fieldName] = schema_obj[fieldName];\n\n\t\t\t// This will create an array for impact_tags and article assignments\n\t\t\tvar array_fields = ['tag_ids', 'set_event_tag_ids', 'content_items', 'set_event_content_items'];\n\t\t\tif (!_.contains(array_fields, fieldName)){\n\t\t\t\tsetting_schema[fieldName].selected = setting;\n\t\t\t} else {\n\t\t\t\tsetting_schema[fieldName].selected = selected_array.concat(setting);\n\t\t\t}\n\t\t});\n\n\t\treturn setting_schema;\n\t},\n\n\tvalidate: function(requiredKeys, formData, cb, ctx){\n\n\t\tvar existing_keys = _.keys(formData),\n\t\t\t\texisting_vals = _.values(formData),\n\t\t\t\tmsg,\n\t\t\t\tmissing_keys = [], // We'll do a few tests and push the missing keys into here and then flatten\n\t\t\t\ts = '';\n\t\t// Test if we flat out missed some\n\t\tmissing_keys.push(_.difference(requiredKeys, existing_keys));\n\n\t\t// Test if some are empty by testing for null and length. This will break on a number so do some type testing first\n\t\t_.each(formData, function(existingVal, existingKey){\n\t\t\tif (existingVal === undefined || existingVal === false || existingVal === ''){\n\t\t\t\tmissing_keys = missing_keys.concat(existingKey);\n\t\t\t}\n\t\t});\n\n\t\t// Flatten this weird array structure we've made\n\t\tmissing_keys = _.flatten(missing_keys);\n\n\t\t// And we're only interested in required ones\n\t\tmissing_keys = _.intersection(requiredKeys, missing_keys);\n\t\tif (missing_keys.length > 0){\n\t\t\tif (missing_keys.length > 1){\n\t\t\t\ts = 's';\n\t\t\t}\n\n\t\t\tmissing_keys = missing_keys.map(function(missingKey){ \n\t\t\t\treturn '\"'+helpers.templates.toTitleCase(missingKey).replace(/_/g, ' ')+'\"';\n\t\t\t}).join(', ');\n\n\t\t\tmsg = 'You didn\\'t include information for the required field'+s+': ' + missing_keys + '.'\n\t\t\tcb.call(ctx, 'Missing fields', msg);\n\t\t} else {\n\t\t\tcb.call(ctx, null, 'Saving!');\n\t\t}\n\t},\t\n\n\tvalidateNew: function(schema, formData, cb, ctx){\n\n\t\tvar required_keys = [];\n\n\t\t_.each(schema, function(val, key){\n\t\t\tif (val.required){\n\t\t\t\trequired_keys.push(key);\n\t\t\t}\n\t\t});\n\n\t\tvar existing_keys = _.keys(formData),\n\t\t\t\texisting_vals = _.values(formData),\n\t\t\t\tmsg,\n\t\t\t\tmissing_keys = [], // We'll do a few tests and push the missing keys into here and then flatten\n\t\t\t\ts = '';\n\t\t// Test if we flat out missed some\n\t\tmissing_keys.push(_.difference(required_keys, existing_keys));\n\n\t\t// Test if some are empty by testing for null and length. This will break on a number so do some type testing first\n\t\t_.each(formData, function(existingVal, existingKey){\n\t\t\tif (existingVal === undefined || existingVal === false || existingVal === ''){\n\t\t\t\tmissing_keys = missing_keys.concat(existingKey);\n\t\t\t}\n\t\t});\n\n\t\t// Flatten this weird array structure we've made\n\t\tmissing_keys = _.flatten(missing_keys);\n\n\t\t// And we're only interested in required ones\n\t\tmissing_keys = _.intersection(required_keys, missing_keys);\n\t\tif (missing_keys.length > 0){\n\t\t\tif (missing_keys.length > 1){\n\t\t\t\ts = 's';\n\t\t\t}\n\n\t\t\tmissing_keys = missing_keys.map(function(missingKey){ \n\t\t\t\treturn '\"'+helpers.templates.toTitleCase(missingKey).replace(/_/g, ' ')+'\"';\n\t\t\t}).join(', ');\n\n\t\t\tmsg = 'You didn\\'t include information for the required field'+s+': ' + missing_keys + '.'\n\t\t\tcb.call(ctx, 'Missing fields', msg);\n\t\t} else {\n\t\t\tcb.call(ctx, null, 'Saving!');\n\t\t}\n\t},\n\n\tprintMsgOnSubmit: function(error, msg){\n\t\tvar class_name = 'success';\n\t\tif (error) class_name = 'fail';\n\t\t\n\t\tthis.$submitMsgText.removeClass('success').removeClass('fail');\n\t\tthis.$submitMsgText.addClass(class_name).html(msg);\n\t},\n\n\tgetSettings: function(setDefaultEvent){\n\n\t\t// Skip any that we've decided are skippable\n\t\tvar $form_selector = this.$el.find('form :input[data-serialize-skip!=\"true\"]').filter(function(){\n\t\t\tvar $this = $(this);\n\t\t\t// Only take inputs that have values, have 0, or are a part of `set_event_`, which we're okay being null.\n\t\t\treturn $this.val() || $this.val() === 0 || /^set_event_/.test($this.attr('name'));\n\t\t\t// return $(this).val() || $(this).val() === 0;\n\t\t});\n\n\t\t// If we don't want to set default event options\n\t\t// Only include the non-default-evnt input fields in our serializer when creating the json\n\t\tif (!setDefaultEvent){\n\t\t\t$form_selector = $form_selector.filter(function(){\n\t\t\t\treturn !$(this).attr('data-is-default-event') || $(this).attr('data-is-default-event') == 'false';\n\t\t\t});\n\t\t}\n\n\t\tvar form_options = $form_selector.serializeJSON();\n\n\t\treturn form_options;\n\n\t},\n\n\tdrag: function(){\n\t\treturn d3.behavior.drag()\n\t\t\t\t\t\t.on('drag', function(d,i,e) {\n\t\t\t\t\t\t\t// FF has a bug where it will allow for drag when the mouse is selected text in an input field\n\t\t\t\t\t\t\t// This means that if you try to click and select text, it will move the window\n\t\t\t\t\t\t\t// Same thing for other browser on the scrollbar of the impact tags\n\t\t\t\t\t\t\t// As a fix, disable all dragging if you're within an input child\n\t\t\t\t\t\t\tif (this.canDrag){\n\t\t\t\t\t\t\t\tvar D3_modal_inner = d3.select(this).select('.modal-inner'),\n\t\t\t\t\t\t\t\t\t\ttop = parseInt(D3_modal_inner.style('top')),\n\t\t\t\t\t\t\t\t\t\tleft = parseInt(D3_modal_inner.style('left'));\n\n\t\t\t\t\t\t\t\ttop += d3.event.dy;\n\t\t\t\t\t\t\t\tleft += d3.event.dx;\n\n\t\t\t\t\t\t\t\tD3_modal_inner.style('top', top+'px').style('left', left+'px');\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.on('dragstart', function(){\n\t\t\t\t\t\t\tvar elements_to_not_drag = ['.form-row-input-container'],\n\t\t\t\t\t\t\t\t\t$dragging_element = $(d3.event.sourceEvent.explicitOriginalTarget);\n\n\t\t\t\t\t\t\tvar can_drag = _.every(elements_to_not_drag, function(elementToDrag){\n\t\t\t\t\t\t\t\tif ($dragging_element.hasClass(elementToDrag.replace('.',''))){\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t} else if ($dragging_element.parents(elementToDrag).length > 0){\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tthis.canDrag = can_drag;\n\n\t\t\t\t\t\t})\n\t}\n});\n\n","views.AA_BaseRecipe = views.AA_BaseForm.extend({\n\n\tevents: _.extend({\n\t\t'change .schedule_by': 'getScheduleByVal'\n\t}, views.AA_BaseForm.prototype.events),\n\n\tassignmentTemplateFactory: _.template('<div class=\"article-assignee\"><span class=\"remove-assignee labelled\" aria-label=\"<%= title %>\" >&times;</span><input type=\"hidden\" name=\"set_event_content_items[]:object\" value=\\'{\"id\": <%= id %>, \"title\": \"<%= title %>\"}\\' data-is-default-event=\"true\"/></div>'),\n\n\tremoveSetEventPrefix: function(fieldName){\n\t\treturn fieldName.replace(/^set_event_/, '');\n\t},\n\n\tgetScheduleByVal: function(e){\n\t\tvar $select = $(e.currentTarget),\n\t\t\t\tval = $select.val();\n\n\t\tthis.updateScheduleByLayout(val);\n\n\t\treturn this;\n\t},\n\n\tupdateScheduleByLayout: function(val){\n\t\t// If this is called with no value, trigger a change event, which will grab the value and update the layout\n\t\t// Useful for setting layout on load\n\t\tif (val){\n\t\t\tthis.$form.find('.form-row[data-group=\"schedule_by\"][data-which!=\"'+val+'\"]').hide();\n\t\t\tthis.$form.find('.form-row[data-group=\"schedule_by\"][data-which=\"'+val+'\"]').show();\n\t\t} else {\n\t\t\tthis.$form.find('.schedule_by').trigger('change');\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tseparateSchemaFromEvent: function(optionsJson){\n\t\tvar options = $.extend(true, {}, optionsJson);\n\t\tvar settingsInfo = _.pick(options, function(val, key){\n\t\t\treturn !/^set_event_/.test(key);\n\t\t});\n\t\tvar eventInfo = _.pick(options, function(val, key){\n\t\t\treturn /^set_event_/.test(key);\n\t\t});\n\t\treturn {settingsInfo: settingsInfo, eventInfo: eventInfo};\n\n\t}\n\n});","views.AA_BaseSetting = Backbone.View.extend({\n\n\tevents: {\n\t\t'change .js-input-item.color-picker': 'inputHasChanged',\n\t\t'keyup .js-input-item': 'inputHasChanged',\n\t\t'keypress .js-input-item': 'inputHasChangedFromKeypress',\n\t\t'change .js-input-item': 'inputHasChanged',\n\t\t'click .js-input-item': 'inputHasChanged',\n\t\t'change select.js-input-item': 'inputHasChanged',\n\t\t'click .input-action-btn[data-which=\"cancel\"]': 'revertToPreviousSettingVal',\n\t\t'submit .js-parent-form': 'saveModel',\n\t\t'click .modal-overlay': 'toggleModal',\n\t\t'click .modal-close': 'toggleModal',\n\t\t'click .multi-child.js-destroy': 'toggleModal',\n\t\t'click input.js-destroy': 'destroyModel'\n\t},\n\n\tkeepPreviousValueIfExists: false,\n\n\tinitializeBase: function(){\n\n\t\t// Cache selectors\n\t\tthis.$form = this.$el.find('form');\n\n\t\t// Listen for model changes to show or hide buttons\n\t\tthis.listenTo(this.model, 'change:input_val', this.compareFormData);\n\t\tthis.listenTo(this.model, 'change:data_changed', this.setDataChanged);\n\t\tthis.listenTo(this.model, 'destroy', this.remove);\n\t\tthis.listenTo(this.model, 'error', this.error);\n\t\tthis.listenTo(this.model, 'invalid', this.error);\n\n\t\treturn this;\n\n\t},\n\n\tremove: function(){\n\t\tthis.$el.animate({\n\t\t\topacity: 0\n\t\t}, 400, 'easeOutQuart').animate({\n\t\t\theight: 0\n\t\t}, 175, 'easeOutQuart')\n\t\t.queue(function(next) { \n\t\t\t\t$(this).remove();\n\t\t\t\tnext(); \n\t\t});\n\n\t\treturn this;\n\t},\n\n\terror: function(model, error){\n\t\tconsole.log('####### MODEL SAVE ERRROR #######');\n\t\tconsole.log(model.toJSON());\n\t\tconsole.log(JSON.stringify(error));\n\t\tconsole.log('####### end model save error #######');\n\t\talert('There was an error saving. Please open your console and paste the output to merlynne@newslynx.org. Or follow its instructions if present.');\n\t\treturn this;\n\t},\n\n\tpostRender: function(){\n\n\t\t// Add cancel and save buttons\n\t\tthis.bakeInputActions();\n\n\t\t// Determine whether this data is changed or not on load\n\t\t// Most browsers will preserve the values in the input field on page refresh\n\t\t// This will let us know if those values on load are different from what's stored in our data model\n\t\tthis.compareFormData();\n\n\t\treturn this;\n\t},\n\n\tinputHasChanged: function(e){\n\t\t// e.preventDefault();\n\t\te.stopPropagation();\n\t\t// Save the input to an attribute unless we just hit the return key\n\t\t// In that case, submit the form\n\t\tvar return_key_code = 13,\n\t\t\t\tesc_key_code = 27,\n\t\t\t\tcommand_key_modifying = e.metaKey,\n\t\t\t\tincoming_val;\n\n\t\tif (e.keyCode == esc_key_code){\n\t\t\tthis.revertToPreviousSettingVal(e);\n\t\t} else {\n\t\t\tincoming_val = this.getCurrentFormData();\n\t\t\tthis.model.set('input_val', incoming_val);\n\t\t}\n\n\n\t\treturn this;\n\t},\n\n\tinputHasChangedFromKeypress: function(e){\n\t\tvar return_key_code = 13,\n\t\t\t\tcommand_key_modifying = e.metaKey;\n\n\t\tif (e.keyCode == return_key_code && command_key_modifying) {\n\t\t\tthis.saveModel(e);\n\t\t} else if (e.keyCode == return_key_code && !command_key_modifying){\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t}\n\n\t},\n\n\tcompareFormData: function(){\n\t\tvar saved_data = this.getRelevantSavedFormData(),\n\t\t\t\tcurrent_data = this.model.get('input_val') || this.getCurrentFormData(),\n\t\t\t\tdata_is_different = !_.isEqual(saved_data, current_data);\n\n\t\tconsole.log('saved',saved_data)\n\t\tconsole.log('current',current_data)\n\n\t\tthis.model.set('data_changed', data_is_different);\n\n\t\treturn this;\n\t},\n\n\tsetDataChanged: function(model, value){\n\t\tthis.$form.attr('data-changed', value.toString());\n\t\treturn this;\n\t},\n\n\tgetCurrentFormData: function(){\n\t\tvar form_data = this.$form.serializeJSON();\n\t\tvar standardized_form_data = this.standardizeEmptyFields(form_data);\n\t\treturn standardized_form_data;\n\t},\n\n\tgetRelevantSavedFormData: function(){\n\t\t// Our saved form data includes things that we aren't asking for input in the form such as org id\n\t\t// We use this function when we want to replace the data in the form with the saved data,\n\t\t// but we only need to ask for the keys that are used in the input\n\t\t// which we can take from the serialized form\n\t\t// That object has the right keys but bad values\n\t\t// So for each of its keys, grab the saved values\n\n\t\tvar f = $.serializeJSON,\n\t\t\t\tdata_object = $.extend(true, {}, this.model.toJSON()),\n\t\t\t\topts = f.setupOpts({}),\n\t\t\t\tkeys_list = [],\n\t\t\t\toutput_object = {};\n\n\t\tthis.$form.find('input,select').each(function(){\n\t\t\tvar input_name = $(this).attr('name'),\n\t\t\t\t\tkeys;\n\n\t\t\tif (input_name){\n\t\t\t  keys = f.splitInputNameIntoKeysArray(input_name, opts);\n\t\t\t\tkeys_list.push(keys);\n\t\t\t}\n\n\t\t});\n\n\t\tvar keys_value_list = keys_list.map(function(keys){\n\t\t\tvar type = keys.pop(); // Remove the last value, which is its caster\n\t\t\t// TODO, maybe do something with type to cast vars\n\t  \tvar val = this.deepGet(data_object, keys);\n      return {keys: keys, value: val}\n\t\t}, this);\n\n\t\tkeys_value_list.forEach(function(keysValue){\n\t\t\tf.deepSet(output_object, keysValue.keys, keysValue.value, opts);\n\t\t}, this);\n\n\t\treturn output_object;\n\n\t},\n\n\tstandardizeEmptyFields: function(obj) {\n     var clone = _.clone(obj);\n     _.each(clone, function(val, key) {\n       if(!val) {\n         clone[key] = undefined;\n       } else if (_.isObject(val)) {\n       \tclone[key] = this.standardizeEmptyFields(val);\n       }\n     }, this);\n     return clone;\n  },\n\n\n\tbakeInputActions: function(){\n\t\tvar $form = this.$form;\n\t\tvar buttons_markup = templates.inputActionsFactory({}); // Our template accepts no data options\n\t\tvar $modal = $( templates.modalFactory({}) );\n\n\t\t$modal.appendTo($form);\n\t\t$form.append(buttons_markup);\n\n\t\tvar drag = d3.behavior.drag()\n\t\t\t\t\t.on('drag', function(d,i,e) {\n\t\t\t\t\t\t// FF has a bug where it will allow for drag when the mouse is selected text in an input field\n\t\t\t\t\t\t// This means that if you try to click and select text, it will move the window\n\t\t\t\t\t\t// Same thing on the scrollbar of the impact tags\n\t\t\t\t\t\t// As a fix, disable all dragging if you're within an input child\n\t\t\t\t\t\tif (this.canDrag){\n\t\t\t\t\t\t\tvar D3_modal_inner = d3.select(this).select('.modal-inner'),\n\t\t\t\t\t\t\t\t\ttop = parseInt(D3_modal_inner.style('top')),\n\t\t\t\t\t\t\t\t\tleft = parseInt(D3_modal_inner.style('left'));\n\n\t\t\t\t\t\t\ttop += d3.event.dy;\n\t\t\t\t\t\t\tleft += d3.event.dx;\n\n\t\t\t\t\t\t\tD3_modal_inner.style('top', top+'px').style('left', left+'px');\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.on('dragstart', function(){\n\t\t\t\t\t\tvar elements_to_not_drag = ['.form-row-input-container'],\n\t\t\t\t\t\t\t\t$dragging_element = $(d3.event.sourceEvent.explicitOriginalTarget);\n\n\t\t\t\t\t\tvar can_drag = _.every(elements_to_not_drag, function(elementToDrag){\n\t\t\t\t\t\t\tif ($dragging_element.hasClass(elementToDrag.replace('.',''))){\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t} else if ($dragging_element.parents(elementToDrag).length > 0){\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tthis.canDrag = can_drag;\n\n\t\t\t\t\t})\n\n\t\td3.select($modal[0]).call(drag);\n\n\t\treturn this;\n\t},\n\n\tinitColorPicker: function(group){\n\t\tvar that = this;\n\t\tthis.$el.find('.color-picker').each(function(){\n\t\t\tvar $colorPicker = $(this);\n\t\t\t$colorPicker.spectrum({\n\t\t\t\tpreferredFormat: \"hex\",\n\t\t\t\tshowPaletteOnly: true,\n\t\t\t\thideAfterPaletteSelect: true,\n\t\t\t\tpalette: that.palettes[group],\n\t\t\t\tchange: function(color){\n\t\t\t\t\t// Save the hex back to the object for reading back laters\n\t\t\t\t\t$colorPicker.val(color.toHexString());\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\treturn this;\n\t},\n\n\tgetVal: function(dataLocation){\n\t\tvar f = $.serializeJSON,\n\t\t\t\topts = f.setupOpts({}),\n\t\t\t\tlocation = dataLocation || this.valueKey || this.options.valueKey,\n\t\t\t\tvalue_keys = f.splitInputNameIntoKeysArray(dataLocation, opts),\n\t\t\t\tsaved_data = this.model.toJSON();//,\n\t\t\n\t\tvar type = value_keys.pop();\n\t\t// TODO, do something with type, perhaps\n\t\tvar val = this.deepGet(saved_data, value_keys);\n\n\t\treturn val;\n\t},\n\n\tdeepGet: function(dataObj, keys, returnObjBool){\n\t\tdataObj = $.extend(true, {}, dataObj);\n\t\t// Protect against nested values on new item creation\n\t\t// This happens if we're looking for a value nested under a key that does not yet exist\n\t\tvar val;\n\t\tif ( (_.isEmpty(dataObj) || !dataObj[keys[0]]) && keys.length > 1){\n\t\t\tval = {};\n\t\t\tval[keys[0]] = {};\n\t\t} else {\n\t\t\tval = dataObj[keys[0]];\n\t\t}\n\n\t\t// If we have specified any other values through a syntax of `key[nested_key][other_nested_key]`, then loop through them and replace the val\n\t\t_.chain(keys).rest().each(function(nextKey){\n\t\t\tval = val[nextKey];\n\t\t}, this).value();\n\n\t\treturn val;\n\t},\n\n\tsetVals: function(vals){\n\t\tvals = vals || [this.options.valueKey];\n\n\t\tvar inputs_data = this.assembleInputsData(vals);\n\n\t\tinputs_data.forEach(function(inputData){\n\t\t\tvar $input = inputData.$input;\n\t\t\tvar val = inputData.val;\n\n\t\t\tvar existing_value = $input.val() || '';\n\n\t\t\tif (!this.keepPreviousValueIfExists || (this.keepPreviousValueIfExists && !existing_value.trim()) ){\n\t\t\t\t$input.val(val);\n\t\t\t}\n\n\t\t}, this);\n\n\n\t\treturn this;\n\t},\n\n\trevertToPreviousSettingVal: function(e){\n\t\te.preventDefault();\n\t\tvar $form = this.$form,\n\t\t\t\tprevious_data = this.getRelevantSavedFormData(),\n\t\t\t\tthat = this;\n\n\t\tthis.model.set('data_changed', 'false');\n\n\t\tvar set_actions = {\n\t\t\tnormal: function($el, val){\n\t\t\t\t// Most elements like `input` tags and `select` tags can be set through `$el.val()`\n\t\t\t\t$el.val(val);\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\tcolor: function($el, val){\n\t\t\t\t// Our color picker is special, however\n\t\t\t\t$el.spectrum('set', val);\n\t\t\t\treturn this;\n\t\t\t}\n\t\t};\n\n\t\t$form.find('input[type=\"text\"],select').each(function(){\n\t\t\tvar $input = $(this);\n\t\t\tvar data_location = $input.attr('name');\n\t\t\tvar val = that.getVal(data_location);\n\n\t\t\tvar set_action = 'normal';\n\t\t\tif (data_location == 'color'){\n\t\t\t\tset_action = 'color';\n\t\t\t}\n\t\t\tset_actions[set_action]($input, val);\n\n\t\t});\n\t\t\t\n\t\treturn this;\n\t},\n\n\tpalettes: {\n\t\t'subject-tag': [\n\t\t\t['#1f78b4','#ff7f0e','#2ca02c','#d62728','#9467bd','#8c564b','#e377c2','#7f7f7f','#bcbd22','#17becf'],\n\t\t\t['#aec7e8','#ffbb78','#98df8a','#ff9896','#c5b0d5','#c49c94','#f7b6d2','#c7c7c7','#dbdb8d','#9edae5']\n\t\t],\n\t\t'impact-tag': [\n\t\t\t['#6699cc','#66cccc','#99cc99','#cc99cc','#d27b53','#f2777a','#f99157','#ffcc66','#bc80bd','#ccebc5','#ffed6f']\n\t\t\t// ['#8dd3c7','#bebada','#fb8072','#80b1d3','#fdb462','#b3de69','#fccde5','#d9d9d9','#bc80bd','#ccebc5','#ffed6f']\n\t\t]\n\t},\n\n\tassembleInputsData: function(keys){\n\t\tvar input_data_object = keys.map(function(key){\n\t\t\treturn {\n\t\t\t\t$input: this.$form.find('.js-input-item[name=\"'+key+'\"]'),\n\t\t\t\tval: this.getVal(key)\n\t\t\t};\n\t\t}, this);\n\n\t\treturn input_data_object;\n\n\t},\n\n\tsaveModel: function(e){\n\t\te.preventDefault();\n\n\t\tif (this.preSaveHook){\n\t\t\tthis.preSaveHook();\n\t\t}\n\n\t\tvar that = this;\n\t\tvar attrs_to_save = this.getCurrentFormData(),\n\t\t\t\texisting_attrs;\n\n\n\t\tif (attrs_to_save.options){\n\t\t\texisting_attrs = _.pick(this.model.get('options'), function(option){\n\t\t\t\t// Only keep the truthy values, unless one is `0`, which is falsey but for our purposes is important\n\t\t\t\tvar keep;\n\t\t\t\tif (option === 0){\n\t\t\t\t\tkeep = true;\n\t\t\t\t} else {\n\t\t\t\t\tkeep = option;\n\t\t\t\t}\n\t\t\t\treturn keep;\n\t\t\t});\n\t\t\tattrs_to_save.options = _.extend(existing_attrs, attrs_to_save.options);\n\t\t}\n\n\t\tthis.model.save(attrs_to_save, {\n\t\t\tpatch: true,\n\t\t\tsuccess: function(){\n\t\t\t\tthat.modelSaved(true);\n\t\t\t},\n\t\t\terror: function(){\n\t\t\t\tthat.modelSaved(false);\n\t\t\t}\n\t\t});\n\n\t\treturn this;\n\t},\n\n\tmodelSaved: function(saveSuccess){\n\t\tthis.model.set('data_changed', !saveSuccess);\n\n\t\tif (saveSuccess){\n\t\t\tthis.$form.attr('data-new', 'false');\n\t\t\tthis.$el.removeClass('js-destroy-wait');\n\t\t\tif (this.postSaveHook){\n\t\t\t\tthis.postSaveHook();\n\t\t\t}\n\t\t\tthis.$form.addClass('js-just-saved').delay(1500)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.queue(function(next) { \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$(this).removeClass('js-just-saved');\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnext(); \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tdestroyModel: function(e){\n\t\tthis.toggleModal(e);\n\t\tthis.$el.addClass('js-destroy-wait');\n\t\tthis.model.destroy({wait: true});\n\t},\n\n\ttoggleModal: function(e){\n\t\te.stopPropagation();\n\t\t// Open up a modal that lets you assign it to something\n\t\tviews.helpers.toggleModal(e);\n\t}\n\n\n});\n\n","views.AA_BaseSettingListItemRecipe = views.AA_BaseSetting.extend({\n\n\ttagName: 'li',\n\n\trender: function(){\n\t\tvar template = this.options.template || this.template;\n\t\tvar parent_el = this.options.parentEl || this.parentEl;\n\n\t\tif (template){\n\t\t\tthis.$el.html(template( {} ));\n\t\t\tif (parent_el){\n\t\t\t\t$(parent_el).append(this.el);\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\n\t}, \n\t\n\tcheckIfNew: function(){\n\t\tif (!this.model){\n\t\t\tthis.model = new models.recipe.Model(this.default_model_opts);\n\t\t\tcollections.recipes.instance.add(this.model);\n\t\t\tthis.$el.find('.js-parent-form').attr('data-new', 'true');\n\t\t}\n\t\treturn this;\n\t},\n\n\tpreSaveHook: function(){\n\t\t// Add the homepage if it wasn't already on there\n\t\t// This happens on first account creation when they set the homepage and then create recipes which have been scaffolded\n\t\tvar options = this.model.get('options');\n\t\tif (!options.search_query){\n\t\t\toptions.search_query = pageData.org.homepage;\n\t\t\tthis.model.set('options', options);\n\t\t}\n\t}\n\n});","views.AA_BaseTag = Backbone.View.extend({\n\n\twhiteOrBlack: function(bgColorHex){\n\t\tvar rgbColor = this.hexToRgb(bgColorHex);\n\t\tvar r = rgbColor.r,\n\t\t\t\tg = rgbColor.g,\n\t\t\t\tb = rgbColor.b;\n\t\tvar yiq = (r * 299 + g * 587 + b * 114) / 1000;\n\t\treturn (yiq >= 128) ? 'black' : 'white';\n\t},\n\n\thexToRgb: function(hex){\n\t\t// Expand shorthand form (e.g. \"03F\") to full form (e.g. \"0033FF\")\n\t\tvar shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n\t\thex = hex.replace(shorthandRegex, function(m, r, g, b) {\n\t\t    return r + r + g + g + b + b;\n\t\t});\n\n\t\tvar result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n\t\treturn result ? {\n\t\t\tr: parseInt(result[1], 16),\n\t\t\tg: parseInt(result[2], 16),\n\t\t\tb: parseInt(result[3], 16)\n\t\t} : null;\n\t},\n\n\tcolorLuminance: function(hex, lum) {\n\n\t\t// validate hex string\n\t\thex = String(hex).replace(/[^0-9a-f]/gi, '');\n\t\tif (hex.length < 6) {\n\t\t\thex = hex[0]+hex[0]+hex[1]+hex[1]+hex[2]+hex[2];\n\t\t}\n\t\tlum = lum || 0;\n\n\t\t// convert to decimal and change luminosity\n\t\tvar rgb = \"#\", c, i;\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\tc = parseInt(hex.substr(i*2,2), 16);\n\t\t\tc = Math.round(Math.min(Math.max(0, c + (c * lum)), 255)).toString(16);\n\t\t\trgb += (\"00\"+c).substr(c.length);\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tstyleLayout: function(){\n\t\tvar bg_color = this.model.get('color'),\n\t\t\t\ttext_color = this.whiteOrBlack(bg_color),\n\t\t\t\tbg_color_darker = this.colorLuminance(bg_color, -.25);\n\n\t\t// this.$el.css({'background-color': bg_color, 'color': text_color});\n\t\tthis.$el.css({'background-color': bg_color, 'color': text_color, 'border': '1px solid' + bg_color_darker});\n\n\t\treturn this;\n\t},\n\n\tstyleLayoutWithTooltip: function(){\n\t\tthis.styleLayout();\n\n\t\tvar tooltip_text = this.getTooltipText();\n\t\tthis.$el.addClass('tooltipped').attr('aria-label', tooltip_text);\n\n\t\treturn this;\n\t},\n\n\tgetTooltipText: function(){\n\t\tvar category = this.model.get('category'),\n\t\t\t\tlevel = helpers.templates.prettyName(this.model.get('level')),\n\t\t\t\ttooltip_text = level + ' ' + category;\n\n\t\treturn tooltip_text;\n\t}\n\n\n});\n\n","views.AddArticle = views.AA_BaseForm.extend({\n\n\tevents: _.extend({\n\t\t'submit form': 'addArticle'\n\t}, views.AA_BaseForm.prototype.events),\n\n\tinitialize: function(options){\n\t\t// First perform a deep copy of our existing `pageData.addArticleSchema` so we don't mess anything up\n\t\tvar add_article_schema = $.extend(true, {}, pageData.addArticleSchema);\n\n\t\t// Store this on the schema with this article's information on the view\n\t\t// We will re-render the view on form submit, rendering makes a copy of these initial settings\n\t\tthis.event_schema = add_article_schema;\n\n\t\t// Prep the area by creating the modal markup\n\t\tthis.bakeModal('Add an article');\n\n\t\t// Bake the modal container and form elements\n\t\tthis.render();\n\t\t// Disable the title searcher but init pikaday\n\t\tthis.postRender({pikaday: true});\n\t},\n\n\trender: function(){\n\t\tvar markup = '',\n\t\t\t\tevent_schema = $.extend(true, {}, this.event_schema);\n\n\t\t// Bake the initial form data\n\t\t_.each(event_schema, function(fieldData, fieldName){\n\t\t\tmarkup += this.bakeFormInputRow.call(this, fieldName, fieldData);\n\t\t}, this);\n\n\t\tmarkup += this.bakeButtons();\n\n\t\tthis.$form.html(markup);\n\n\t\t// Preload with empty arrays for impact_tags and assignees\n\t\t// Selected values will be added on load\n\t\tthis.event_data = {\n\t\t\tsubject_tags: []\n\t\t};\n\n\t\treturn this;\n\t},\n\n\tformListToObject: function(){\n\t\tvar form_data = this.event_creator_options;\n\t\tvar form_obj = {\n\t\t\timpact_tags: [],\n\t\t\tassignees: []\n\t\t};\n\t\tform_data.forEach(function(formItem){\n\t\t\tvar name = formItem.name,\n\t\t\t\t\tform_value = formItem.selected;\n\t\t\tif (name != 'subject_tags'){\n\t\t\t\tform_obj[name] = form_value;\n\t\t\t} else {\n\t\t\t\tform_obj[name].push(form_value);\n\t\t\t}\n\t\t});\n\t\treturn form_obj;\n\t},\n\n\taddArticle: function(e){\n\t\te.preventDefault();\n\t\t// console.log(this.event_data);\n\t\t\n\t\tvar settings_obj = this.event_data;\n\t\tvar new_article_model = new models.new_article.Model;\n\n\t\tdelete settings_obj.undefined;\n\n\t\tvar required_keys = [\n\t\t\t'created',\n\t\t\t'url',\n\t\t\t'title',\n\t\t\t'authors'\n\t\t];\n\n\t\tthis.validate(required_keys, function(error, description){\n\t\t\t// Turn the authors field into an array of whitespace-trimmed strings\n\t\t\tif (settings_obj.authors){\n\t\t\t\tsettings_obj.authors = settings_obj.authors.split(',').map(function(author){ return author.trim(); });\n\t\t\t}\n\t\t\tvar that = this;\n\t\t\tif (!error){\n\t\t\t\tthat.refresh({pikaday: true});\n\t\t\t\tnew_article_model.save(settings_obj, {\n\t\t\t\t\terror: function(model, response, options){\n\t\t\t\t\t\tconsole.log('Error in article creation', response);\n\t\t\t\t\t\tthat.printMsgOnSubmit(true, 'Could not save to the server. Send me an email with a description of what you were doing and I\\'ll look into it: <a href=\"mailto:meow@newslynx.org\">meow@newslynx.org</a> &mdash; <em>Merlynne</em>.');\n\t\t\t\t\t},\n\t\t\t\t\tsuccess: function(model, response, options){\n\t\t\t\t\t\tconsole.log('Saved event', response);\n\n\t\t\t\t\t\tviews.helpers.toggleModal(e);\n\t\t\t\t\t\tthat.refresh({pikaday: true});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.printMsgOnSubmit(error, description)\n\t\t\t}\n\n\t\t});\n\n\n\t}\n\n});","views.Alert = Backbone.View.extend({\n\ttagName: 'div',\n\n\tclassName: 'article-detail-wrapper modal-parent',\n\n\tevents: {\n\t\t'click .approval-btn-container[data-which=\"no\"]': 'makeInsignificant',\n\t\t'click .approval-btn-container[data-which=\"yes\"]': 'toggleModal',\n\t\t'submit form': 'createEvent'\n\t\t// 'change input': 'inputModified'\n\t},\n\n\tinitialize: function(){\n\t\tthis.listenTo(this.model, 'change:destroy', this.destroy);\n\n\t\tthis._subviews = [];\n\t\tthis._time_picker;\n\n\t\treturn this;\n\n\t},\n\n\trender: function() {\n\t\tvar model_json = this.model.toJSON();\n\t\tvar river_item_markup = templates.alertFactory( _.extend(model_json, helpers.templates) );\n\t\tthis.$el.html(river_item_markup);\n\n\t\tthis.$form = this.$el.find('form');\n\n\t\tthis.postRender();\n\n\t\treturn this;\n\t},\n\n\tpostRender: function(){\n\t\tthis.bakeEventCreator();\n\n\t\treturn this;\n\t},\n\n\tbakeEventCreator: function(){\n\n\t\tvar event_creator_view = new views.EventCreatorFromAlert({el: this.el, model: this.model.toJSON()});\n\t\tthis._subviews.push(event_creator_view);\n\t\tthis._time_picker = event_creator_view._time_picker;\n\t\tthis.$el.append(event_creator_view.el);\n\n\t\tthis.event_creator_view = event_creator_view;\n\n\t\treturn this;\n\n\t},\n\n\ttoggleModal: function(e){\n\t\tvar $modalOuter = $(e.currentTarget).parents('.modal-parent').find('.modal-outer'),\n\t\t\t\tmodal_opening = $modalOuter.css('display') == 'none';\n\t\t// Open up a modal that lets you assign it to something\n\t\tviews.helpers.toggleModal(e);\n\t\t// Set the focus to the headline field on modal toggle open\n\t\t// TODO, could possibly be abstracted into a setting in the form, like, `put-focus`.\n\t\tif (modal_opening){\n\t\t\t$modalOuter.find('input[name=\"assignees-selector\"]').focus();\n\t\t}\n\t},\n\n\tcreateEvent: function(e){\n\t\te.preventDefault();\n\n\t\tvar that = this; // `this` is the `alert` view\n\n\t\tvar event_creator_view = this.event_creator_view,\n\t\t    form_data = event_creator_view.getSettings();\n\n\t\tvar required_keys = event_creator_view.required_keys;\n\n\t\tthis.event_creator_view.validate(required_keys, form_data, function(err, msg){\n\t\t\tif (!err){\n\t\t\t\tthat.model.save(form_data, {\n\t\t\t\t\terror: function(model, response, options){\n\t\t\t\t\t\tconsole.log('Server error on recipe edit', response);\n\t\t\t\t\t\tevent_creator_view.printMsgOnSubmit(true, 'Error '+err.status+': ' + err.message.replace(/\\n/g, '<br/><br/>'));\n\t\t\t\t\t},\n\t\t\t\t\tsuccess: function(model, response, options){\n\t\t\t\t\t\tconsole.log('Saved event', response);\n\t\t\t\t\t\tviews.helpers.toggleModal(e);\n\t\t\t\t\t\tthat.removeItem('save');\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tevent_creator_view.printMsgOnSubmit(err, msg);\n\t\t\t}\n\n\t\t}, this);\n\n\n\t\treturn this;\n\n\t},\n\n\tmakeInsignificant: function(itemModel){\n\t\tvar that = this;\n\t\t// console.log(this.model.get('destroy'))\n\t\t// When we destroy it, it removes it from the collection\n\t\t// Firing the remove event we have set up for page switching\n\t\t// We want to override that so it does our fade out\n\t\t// So set this additional bool as a gate\n\t\t// And check for it on destroy\n\t\tthis.model.set('making_insignificant', true);\n\t\tthis.model.destroy({\n\t\t\t// wait: true,\n    \tsuccess: function(model, response) {\n\t\t\t\tthat.removeItem('delete');\n\n\t\t\t},\n\t\t\terror: function(error){\n\t\t\t\tconsole.log('Error deleting event.', error);\n\t\t\t}\n\t\t});\n\t},\n\n\tremoveItem: function(mode){\n\t\t// Open up a modal that lets you assign it to something\n\t\tthis.model.set('destroy', mode);\n\t},\n\n\tdestroy: function(model, destroyMode){\n\t\tvar making_insignificant = model.get('making_insignificant');\n\t\t// For now just destroy\n\t\tif (destroyMode == 'remove' && !making_insignificant){\n\t\t\t// this._time_picker.destroy();\n\t\t\tthis.killView();\n\t\t} else if (destroyMode == 'delete'){\n\t\t\tthis.removeAlertColorfully('delete')\n\t\t} else if (destroyMode == 'save') {\n\t\t\tthis.removeAlertColorfully('save')\n\t\t}\n\t},\n\n\tremoveAlertColorfully: function(mode){\n\t\tvar that = this,\n\t\t\t\tanimation_duration = 500,\n\t\t\t\tcolor,\n\t\t\t\theight;\n\t\t\t\t\n\t\tif (mode == 'save'){\n\t\t\tcolor = '#D0F1D1';\n\t\t} else if (mode == 'delete'){\n\t\t\tcolor = '#FFD0D0';\n\t\t}\n\n\t\tvar height = this.$el.css('height') + 10;\n\n\t\tvar animation_opts = {\n\t\t\t'width': 0,\n\t\t\t'opacity': 0,\n\t\t\t'margin-top': 0,\n\t\t\t'margin-right': 0,\n\t\t\t'height': 0,\n\t\t\t'margin-bottom': height\n\t\t};\n\n\t\tif ($(window).width() > 1260){\n\t\t\tanimation_opts['padding-left'] = 0;\n\t\t\tanimation_opts['padding-right'] = 0;\n\t\t} else {\n\t\t\tanimation_opts['padding-bottom'] = 0;\n\t\t\tanimation_opts['margin-bottom'] = 0;\n\t\t}\n\n\t\tthis.$el.css({\n\t\t\t\t'background-color': color,\n\t\t\t\t'overflow': 'hidden',\n\t\t\t\t'white-space': 'nowrap'\n\t\t\t}).animate(animation_opts, animation_duration)\n\t\t\t.delay(0)\n\t\t\t.queue(function(next) { \n\t\t\t\tonAnimationEnd.call(that);\n\t\t\t});\n\n\t\tfunction onAnimationEnd(){\n\t\t\tthis.event_creator_view._time_picker.destroy();\n\t\t\tthis.killView();\n\t\t}\n\t}\n\n});","views.ArticleComparisonGrid = Backbone.View.extend({\n\n\ttagName: 'div',\n\n\tclassName: 'compare-grid-container',\n\n\tevents: {\n\t\t'click .header-el': 'sortColumn'\n\t},\n\n\tinitialize: function(){\n\t\t// var that = this;\n\n\t\tthis.sortAscending = collections.article_comparisons.instance.metadata('sort_ascending');\n\t\tthis.listenTo(collections.article_comparisons.instance, 'sortMetricHeaders', this.sortBy);\n\t\tthis.listenTo(collections.article_comparisons.instance, 'resetMetricHeaders', this.setMetricHeaders);\n\t\t\n\t\t// views.po.article_summaries.on('sortChange', function(e,d,i){\n\t\t// \tvar metric_arr = this.current_sort.name.split('_'), // `pageviews_desc`-> `pageviews TODO, later on when we sort by asc and descending, the secon item in the array can be passed to determine the sort order\n\t\t// \t\t\tmetric = metric_arr.slice(0, metric_arr.length - 1).join('_'); // Get rid of the last element in the array, which will be `_desc` and then rejoin, so `avg_time_on_page_desc` becomes `avg_time_on_page` again\n\t\t\t\n\t\t// \t// a hack for now to standardize what our comparison grid column headers call these things\n\t\t// \tvar crossover = {\t\n\t\t// \t\ttwitter_mentions: 'twitter',\n\t\t// \t\tfacebook_likes: 'facebook',\n\t\t// \t\tsubject_tags: 'subject',\n\t\t// \t\timpact_tags: 'impact'\n\t\t// \t};\n\n\t\t// \tvar crossover_metric = crossover[metric];\n\n\t\t// \tif (crossover_metric) {\n\t\t// \t\tmetric = crossover_metric;\n\t\t// \t}\n\n\t\t// \tthat.sortFromPourOver.call(that, metric);\n\t\t// });\n\n\t\t// Cache our comparison parameters\n\t\tthis.calcComparisonMarkerParams();\n\n\t\tvar metrics = this.collection.cloneMetrics();\n\t\tthis.metric_comparisons = this.addComparisonInfo(metrics);\n\n\t\treturn this;\n\t},\n\n\trender: function(){\n\t\tvar select_dimensions = _.extend({\n\t\t\t\tselects: this.collection.metadata('selects')\n\t\t\t\t// sort: this.collection.metadata('sort_by')\n\t\t\t}, \n\t\t\thelpers.templates.articles\n\t\t\t);\n\t\tvar grid_markup = templates.articleGridContainerFactory( select_dimensions );\n\n\t\tthis.$el.html(grid_markup);\n\t\tthis.setMetricHeaders();\n\t\t\n\t\treturn this;\n\t},\n\n\tcalcComparisonMarkerParams: function(){\n\t\tthis.comparison_marker_operation \t= collections.article_comparisons.instance.metadata('operation'); // mean\n\t\tthis.comparison_marker_group \t\t\t= collections.article_comparisons.instance.metadata('group'); // all\n\t\tthis.comparison_marker_max \t\t\t\t= collections.article_comparisons.instance.metadata('max'); // per_97_5\n\t\treturn this;\n\t},\n\n\taddComparisonInfo: function(metricsList){\n\t\tvar group = this.comparison_marker_group;\n\t\tvar full_group_comparison_metrics = models.comparison_metrics.get(group);\n\t\t\n\n\t\tmetricsList.forEach(function(metricInfo){\n\t\t\tvar comparison_data = _.findWhere(full_group_comparison_metrics, {metric: metricInfo.name}) || {};\n\t\t\t_.extend(metricInfo, comparison_data);\n\t\t});\n\n\t\t// // TEMPORARY, remove total_time_on_page + internal\n\t\t// var metric_maxes = pageData.articleComparisons[group].filter(function(metricMax){\n\t\t// \treturn quantMetrics.indexOf(metricMax.metric) != -1; \n\t\t// });\n\n\t\t// // Sort the quant data so it plots the right values for the headers\n\t\t// metric_maxes.sort(function(a,b){\n\t\t// \treturn quantMetrics.indexOf(a.metric) - quantMetrics.indexOf(b.metric)\n\t\t// });\n\t\t// return metric_maxes;\n\n\t\treturn metricsList;\n\t},\n\n\tsortColumn: function(e){\n\t\tvar $this = $(e.currentTarget);\n\n\t\t// Only if we're clicking on an active header, reverse the sort order\n\t\tif ($this.hasClass('active')) {\n\t\t\tthis.sortAscending = !this.sortAscending;\n\t\t}\n\n\t\t// Sorting\n\t\tvar dimension_name = $this.attr('data-metric');\n\n\t\t// Stash our sorting options to be used on relayout\n\t\tcollections.article_comparisons.instance.metadata('sort_ascending', this.sortAscending);\n\t\tcollections.article_comparisons.instance.metadata('sort_by', dimension_name);\n\t\tcollections.article_comparisons.instance.trigger('sortMetricHeaders');\n\n\t\t// this.sortBy(metric);\n\n\t\treturn this;\n\n\t},\n\n\t// This function needs to be refactored to work off of a model change and not a UI click\n\t// It should get all values from the article_comparisons collection\n\tsortBy: function(){\n\n\t\tvar self = this;\n\n\t\tvar sort_ascending = collections.article_comparisons.instance.metadata('sort_ascending');\n\t\tvar dimension_name = collections.article_comparisons.instance.metadata('sort_by');\n\n\t\t// Give active class to this header\n\t\t$('.header-el').removeClass('active');\n\t\t// TODO, standardize these data attribute names to `data-dimension`\n\t\t$('.header-el[data-metric=\"'+dimension_name+'\"]').addClass('active');\n\t\t$('.header-el').attr('data-sort-ascending', sort_ascending);\n\n\t\tapp.instance.$isotopeCntnr.isotope({ sortBy : dimension_name, sortAscending: sort_ascending });\n\n\t\tcollections.article_comparisons.instance.setComparator(dimension_name);\n\n\t\t// Force a sort in this new order since `sort` is only called when adding models\n\t\tcollections.article_comparisons.instance.sort();\n\n\t\tapp.instance.saveHash();\n\t},\n\n\tsetMetricHeaders: function(){\n\t\t// These were just changed so grab them again\n\t\tthis.calcComparisonMarkerParams();\n\n\t\tvar operation = this.comparison_marker_operation,\n\t\t\t\tgroup     = this.comparison_marker_group,\n\t\t\t\tdisplay_operation = operation,\n\t\t\t\tdisplay_operation_abbreve = display_operation;\n\n\t\t// Each quant metric corresponds to a column header, whose html and aria-label we want to set\n\t\tthis.metric_comparisons.forEach(function(metricInfo){\n\t\t\tvar metric_name = metricInfo.name,\n\t\t\t\t\t$header_el = this.$el.find('.header-el[data-metric=\"'+metric_name+'\"] .comparison-figure'),\n\t\t\t\t\tvalue = metricInfo[operation];\n\n\t\t\t// console.log(metricInfo)\n\n\t\t\t// Format the number\n\t\t\t// TODO, this will be a `type` on the metric information\n\t\t\t// if (metric_name == 'per_external'){\n\t\t\t// \tvalue = Math.round(value*100) + '%';\n\t\t\t// } else {\n\t\t\t// \tvalue = Math.round(value);\n\t\t\t// }\n\n\t\t\tif (typeof value == 'number'){\n\t\t\t\tvalue = helpers.templates.addCommas(value);\n\t\t\t} else {\n\t\t\t\tconsole.log('WARNING: Could not find comparison value for: ', metric_name, 'For operation:', operation ,'In group:', group);\n\t\t\t}\n\n\t\t\tif (operation == 'mean') {\n\t\t\t\tdisplay_operation = 'average';\n\t\t\t\tdisplay_operation_abbreve = 'avg';\n\t\t\t}\n\n\t\t\tdisplay_operation = helpers.templates.toTitleCase(display_operation);\n\t\t\tdisplay_operation_abbreve = helpers.templates.toTitleCase(display_operation_abbreve);\n\n\t\t\tvar markup = '<span class=\"comparison-figure-operation\">'+display_operation_abbreve+': </span><span class=\"comparison-figure-value\">' + value + '</span>';\n\n\t\t\t$header_el.html(markup).attr('aria-label', display_operation + ' of ' + group + ' articles.');\n\t\t}, this);\n\t}\n})\n","views.ArticleDetail = Backbone.View.extend({\n\n\ttagName: 'div',\n\n\tclassName: 'article-detail-wrapper',\n\n\tevents: {\n\t\t'click .tab': 'setActiveTabFromClick',\n\t\t'click .modal-toggle': 'toggleModal', // Define this here because we have a few different views like event creators\n\t\t'click .modal-parent[data-which=\"subject\"] .modal-close': 'toggleModal',\n\t\t'click .load-more': 'moreEvents'\n\t},\n\n\tinitialize: function(){\n\n\t\t// Keep track of all views this view creates\n\t\tthis._subviews = [];\n\t\tthis.listenTo(this.model, 'destroyDetail', this.destroyView);\n\n\t\t// // This will populate from a pourover selection of events per detail article\n\t\tthis.article_detailed_events_collection = new collections.article_detailed_events.Collection();\n\t\tthis.event_filters = new models.filters.Model({sort_by: 'created'}); // Hardcode this for now until we figure out the UI for sorting events\n\n\t\t// this.event_filters = new models.eventfilters.Model({sort_by: pageData.articleSummariesInfo.sort_by});\n\t\t// this.article_detailed_timeseries_collection = new collections.article_detailed_timeseries.Collection;\n\t\t// this.article_detailed_timeseries_collection.fetch();\n\n\t\t// Listen to changes on it and add / remove events accordingly\n\t\tthis.listenTo(this.article_detailed_events_collection, 'add', this.eventsGallery.add);\n\t\tthis.listenTo(this.article_detailed_events_collection, 'remove', this.eventsGallery.remove);\n\t\tthis.listenTo(this.article_detailed_events_collection, 'error', this.reportErr);\n\n\t\t/* Tag baking */\n\t\t// Listen for adding things from the page and bake them\n\t\tthis.listenTo(collections.article_detailed_subject_tags.instance, 'add', this.subject_tags.add);\n\t\tthis.listenTo(collections.article_detailed_subject_tags.instance, 'remove', this.subject_tags.remove);\n\t\tthis.listenTo(collections.article_detailed_subject_tags.instance, 'error', this.reportErr);\n\n\t\t// Do the same thing for impact tags\n\t\tthis.listenTo(collections.article_detailed_impact_tags.instance, 'add', this.impact_tags.add);\n\t\tthis.listenTo(collections.article_detailed_impact_tags.instance, 'remove', this.impact_tags.remove);\n\n\t\t// And impact categories\n\t\tthis.listenTo(collections.article_detailed_impact_tag_attributes.categories_instance, 'add', this.impact_tag_attribute.add);\n\t\tthis.listenTo(collections.article_detailed_impact_tag_attributes.categories_instance, 'remove', this.impact_tag_attribute.remove);\n\n\t\t// And levels\n\t\tthis.listenTo(collections.article_detailed_impact_tag_attributes.levels_instance, 'add', this.impact_tag_attribute.add);\n\t\tthis.listenTo(collections.article_detailed_impact_tag_attributes.levels_instance, 'remove', this.impact_tag_attribute.remove);\n\t\t/* end tag baking */\n\n\t\t/* Setup event filtering */\n\n\t\t// Add them to a collection so we can more easily filter and figure out adding and removing of elements\n\t\tthis.listenTo(this.event_filters, 'hasChanged', this.fetchEventsByParameters);\n\t\tmodels.event_tag_facets = new models.generic.Model({});\n\t\tthis.listenTo(models.event_tag_facets, 'change', this.updateTagContainerByCounts);\n\t\tthis.articles_impact_tags_collection \t\t\t\t\t\t= new collections.impact_tags.Collection(this.model.get('impact_tags_full'));\n\t\tthis.articles_impact_tag_categories_collection\t= new collections.impact_tag_attributes.Collection(this.model.get('impact_tag_categories'));\n\t\tthis.articles_impact_tag_levels_collection\t\t\t= new collections.impact_tag_attributes.Collection(this.model.get('impact_tag_levels'));\n\n\t\t// Set this metadata for how it gets its counts and for how it will add its values for filtering by api call\n\t\tthis.articles_impact_tags_collection.metadata('filter', 'impact_tag_ids');\n\t\tthis.articles_impact_tag_categories_collection.metadata('filter', 'categories');\n\t\tthis.articles_impact_tag_levels_collection.metadata('filter', 'levels');\n\n\t\t// // Reusing the filters we made at the beginning\n\t\t// var events_data = this.model.get('events');\n\t\t// var promotions_data = this.model.get('promotions');\n\n\t\t/* end event filtering */\n\n\n\t\t/* Setup Spotted Tail */\n\t\tthis.chartSelector = '#ST-chart';\n\n\t\t// this.legend =\t{\n\t\t// \tfacebook_share_count: {service: 'Facebook', metric: 'shares', color: '#3B5998', group: 'a'},\n\t\t// \ttwitter_count: {service: 'Twitter', metric: 'mentions', color: '#55ACEE', group: 'a'},\n\t\t// \tpageviews: {service: '', metric: 'pageviews', color: '#FF7F0E', group: 'b'}\n\t\t// };\n\n\t\t// Throttle this for onBrush callback\n\t\t// this.filterEventsByDateRange_throttled = _.throttle(this.filterEventsByDateRange, 100);\n\n\t\t// This is a method and not just `this.model.get('timeseries_states')` because we can do some filtering and things to determine what slice of the data we want\n\t\t// this.timeseriesData = this.model.getTimeSeriesStats();\n\t\tvar self = this;\n\n\t\t// this.spottedTail = spottedTail()\n\t\t// \t.timezone(pageData.timezone)\n\t\t// \t.y(function(d) { return +d.count; })\n\t\t// \t.legend(this.legend)\n\t\t// \t.events(events_data)\n\t\t// \t.promotions(promotions_data)\n\t\t// \t.interpolate('step-after')\n\t\t// \t.onBrush(_.noop);\n\t\t\t// .onBrush(this.filterEventsByDateRange_throttled);\n\t\t/* end spotted tail*/\n\n\t\t// Throttle resize\n\t\tthis.onWindowResize_throttled = _.throttle(this.onWindowResize, 200);\n\n\t\t$( window ).resize(function() {\n\t\t\tself.onWindowResize_throttled.call(self);;\n\t\t});\n\n\t},\n\n\trender: function(){\n\t\tvar model_json = this.model.toJSON();\n\t\tvar article_detail_markup = templates.articleDetailFactory( _.extend(model_json, helpers.templates) );\n\t\tthis.$el.html(article_detail_markup);\n\t\t// console.log(model_json);\n\n\t\treturn this;\n\t},\n\n\treportErr: function(model, msg){\n\t\tvar response;\n\t\tif (ms.responseJSON){\n\t\t\tresponse = msg.responseJSON;\n\t\t} else {\n\t\t\tresponse = msg;\n\t\t}\n\t\tconsole.log('ERROR in model:',model);\n\t\tconsole.log('ERROR message:', response);\n\t\talert(response.error  +' ' + response.status_code + ': ' + response.message);\n\t},\n\n\tsetLoading: function($target, state){\n\t\t$target.attr('data-loading', state);\n\t\treturn this;\n\t},\n\n\tbakeInteractiveBits: function(){\n\t\tvar self = this;\n\t\t// Event creator element\n\t\tthis.$eventCreator = $('#event-creator-container');\n\t\t// Tag elements\n\t\tthis.$subjectTagsContainer         = this.$el.find('.article-info-container[data-which=\"subject\"] > ul.tags');\n\t\tthis.$impactTagsContainer          = this.$el.find('.article-info-container[data-which=\"impact\"] ul.tags');\n\t\tthis.$impactTagCategoriesContainer = this.$el.find('.article-info-container[data-which=\"impact-categories\"] ul.tags');\n\t\tthis.$impactTagLevelsContainer     = this.$el.find('.article-info-container[data-which=\"impact-levels\"] ul.tags');\n\n\t\t// Bake all of this newsroom's subject tags under the edit subject tags option\n\t\tthis.$editSubjectTagsContainer     = this.$el.find('#subject-tag-settings');\n\n\t\t// The filer options for the events gallery\n\t\tthis.$impactTagsList = this.$el.find('.option-container[data-type=\"impact-tags\"] .tag-list');\n\t\tthis.$impactTagCategoriesList = this.$el.find('.option-container[data-type=\"categories\"] .tag-list');\n\t\tthis.$impactTagLevelsList = this.$el.find('.option-container[data-type=\"levels\"] .tag-list');\n\n\t\t// Stash these to iterate through them to update counts\n\t\t// This could be better handled if the tag container had its own view but it doesn't for now\n\t\tthis.tag_list_els = {\n\t\t\ttags: this.$impactTagsList.parent(),\n\t\t\tcategories: this.$impactTagCategoriesList.parent(),\n\t\t\tlevels: this.$impactTagLevelsList.parent()\n\t\t};\n\n\t\t// Events container\n\t\tthis.$eventsContainer = this.$el.find('#events-container');\n\t\tthis.$eventsGalleryContainer = this.$el.find('#events-gallery-container');\n\n\t\tthis.$downloadData = this.$el.find('#download-data');\n\n\t\t// What are we doin? \n\t\t// this.setDownloadButton();\n\t\t// this.bakeChart();\n\t\tthis.bakeTags();\n\t\t// Get our events gallery items\n\t\tthis.fetchEventsByParameters(false, true); // Don't increment, this is the first run\n\n\t\tthis.bakeEventCreator();\n\n\t\t// this.bakeArticleVizs();\n\t\t// // this.d3_el = d3.select('#events-gallery-container');\n\t\t// this.eventsGallery.setActiveEvents.call(this);\n\n\t\t// Bake some navigation\n\t\tthis.setDetailNavigation();\n\n\t\t// this.calcStickyOffsets();\n\n\t\t// Which tab is viewing\n\t\tthis.setActiveTab();\n\n\t\treturn this;\n\t},\n\n\tbakeEventGalleryFurniture: function(){\n\t\t// Remove placeholder info and set state \n\t\tthis.$eventsContainer.find('.placeholder').remove();\n\t\tthis.bakeEventsGalleryFilters();\n\t\t// this.setLoading(this.$eventsContainer, 'false');\n\t\t// this.setLoadMoreEventsButton();\n\t},\n\n\tsetDownloadButton: function(){\n\t\tvar model_json = this.model.toJSON(),\n\t\t\t\tself = this;\n\t\tvar data_to_download = {\n\t\t\ttopLevelInfo: {\n\t\t\t\tarticle_story_id: model_json.story_id,\n\t\t\t\tarticle_title: model_json.title,\n\t\t\t\tarticle_url: model_json.url,\n\t\t\t\tarticle_domain: model_json.domain,\n\t\t\t\tarticle_id: model_json.id,\n\t\t\t\tarticle_authors: model_json.authors,\n\t\t\t\tarticle_timestamp: model_json.timestamp,\n\t\t\t\tarticle_summary: model_json.summary,\n\t\t\t\tarticle_entities: model_json.entities,\n\t\t\t\tarticle_links: model_json.links,\n\t\t\t\tarticle_keywords: model_json.keywords,\n\t\t\t\tarticle_subject_tags: model_json.subject_tags_full,\n\t\t\t\tarticle_impact_tags: model_json.impact_tags_full,\n\t\t\t\tarticle_impact_tag_categories: model_json.impact_tag_categories,\n\t\t\t\tarticle_impact_tag_levels: model_json.impact_tag_levels,\n\t\t\t\tquant_metrics: model_json.quant_metrics,\n\t\t\t\tdevice_facets: model_json.referrer_metrics.device_facets,\n\t\t\t\tsocial_network_facets: model_json.referrer_metrics.social_network_facets\n\t\t\t},\n\t\t\ttweets: model_json.tweet_info,\n\t\t\ttimeseries: model_json.timeseries_stats,\n\t\t\tpromotions: model_json.promotions,\n\t\t\tevents: model_json.events,\n\t\t\tcomparisons: pageData.articleComparisons\n\t\t};\n\t\tvar pretty_keys = {\n\t\t\ttopLevelInfo: 'article_info'\n\t\t};\n\t\tvar flat_dict = app.helpers.flattenDataStructures.init(data_to_download);\n\t\ttry {\n\t\t\tzip.zipMultiple(flat_dict, 'csv', function(zippedBlob, zippedBlobHref){\n\t\t\t\tself.$downloadData.attr('href', zippedBlobHref);\n\t\t\t}, pretty_keys);\n\t\t\t\n\t\t} catch(err){\n\t\t\tself.$downloadData.hide();\n\t\t\talert('Sorry. This article\\'s data couldn\\'t be prepped for download.\\nPlease email me with the article URL and I\\'ll get Michael and Brian to fix it: merlynne@newslynx.org.\\n\\nEverything else should be working fine.');\n\t\t\tconsole.log(model_json);\n\t\t\tconsole.log(flat_dict);\n\t\t}\n\t},\n\n\tbakeChart: function(){\n\t\td3.select(this.chartSelector)\n\t\t\t.datum(this.timeseriesData)\n\t\t\t.call(this.spottedTail);\n\t},\n\n\tcalcStickyOffsets: function(){\n\t\t// Save the offset of the sticky element\n\t\tvar $sticky = this.$el.find('.sticky'),\n\t\t\t\t$sticky_anchor = this.$el.find('.sticky-anchor'),\n\t\t\t\tsticky_anchor_offset;\n\n\t\tif ($sticky.length && $sticky_anchor.length) {\n\t\t\tsticky_anchor_offset = $sticky_anchor.position().top + $('#content').scrollTop();\n\t\t\t$sticky.attr('data-offset', sticky_anchor_offset);\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tonWindowResize: function(){\n\t\tthis.calcStickyOffsets();\n\t},\n\n\tbakeEventsGalleryFilters: function(){\n\t\t// Impact tags\n\t\tif (this.articles_impact_tags_collection.length){\n\t\t\tthis.$impactTagsList.html('');\n\t\t\tthis.articles_impact_tags_collection.each(function(tagModel){\n\t\t\t\tvar tag_view = new views.TagEventFilter({ model: tagModel, filterModel: this.event_filters });\n\t\t\t\t// Keep track of this subview so self we might destroy it later!\n\t\t\t\tthis._subviews.push(tag_view);\n\t\t\t\tthis.$impactTagsList.append(tag_view.render().el);\n\t\t\t}, this);\n\t\t}\n\n\t\t// Impact tag categories\n\t\tif (this.articles_impact_tag_categories_collection.length){\n\t\t\tthis.articles_impact_tag_categories_collection.each(function(tagModel){\n\t\t\t\tthis.$impactTagCategoriesList.html('');\n\t\t\t\tvar tag_view = new views.TagEventFilter({ model: tagModel, filterModel: this.event_filters });\n\t\t\t\t// Keep track of this subview so self we might destroy it later!\n\t\t\t\tthis._subviews.push(tag_view);\n\t\t\t\tthis.$impactTagCategoriesList.append(tag_view.render().el);\n\t\t\t}, this);\n\t\t}\n\n\t\t// Impact tag levels\n\t\tif (this.articles_impact_tag_levels_collection.length){\n\t\t\tthis.articles_impact_tag_levels_collection.each(function(tagModel){\n\t\t\t\tthis.$impactTagLevelsList.html('');\n\t\t\t\tvar tag_view = new views.TagEventFilter({ model: tagModel, filterModel: this.event_filters });\n\t\t\t\t// Keep track of this subview so self we might destroy it later!\n\t\t\t\tthis._subviews.push(tag_view);\n\t\t\t\tthis.$impactTagLevelsList.append(tag_view.render().el);\n\t\t\t}, this);\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tbakeArticleVizs: function(){\n\n\t\tvar $articleVizsReadingContainer = this.$el.find('section.detail-section[data-group=\"reading\"]');\n\t\tvar $articleVizsTweetsContainer = this.$el.find('section.detail-section[data-group=\"tweeting\"]');\n\t\tvar referrer_metrics = this.model.get('referrer_metrics');\n\t\tvar tweet_info = this.model.get('tweet_info');\n\n\t\t// Only bake these if we have referrer data\n\t\tif (!_.isEmpty(referrer_metrics)){\n\t\t\t$articleVizsReadingContainer.html('');\n\t\t\t/* DEVICE FACET */\n\t\t\tvar device_facet_view = new views.ArticleDetailVizDeviceFacet({\n\t\t\t\ttitle: 'On which devices are people reading?', \n\t\t\t\treferrer_metrics: referrer_metrics,\n\t\t\t\twhich: 'device'\n\t\t\t});\n\t\t\tthis._subviews.push(device_facet_view);\n\t\t\tvar device_facet_markup = device_facet_view.render('marker-also').el;\n\t\t\t$articleVizsReadingContainer.append(device_facet_markup);\n\t\t\t/* end device facet */\n\n\t\t\t/* INTERNAL/EXTERNAL */\n\t\t\tvar internal_external_facet_view = new views.ArticleDetailVizInternalExternal({\n\t\t\t\ttitle: 'Is traffic internally or externally driven?', \n\t\t\t\treferrer_metrics: referrer_metrics,\n\t\t\t\twhich: 'internal-external'\n\t\t\t});\n\t\t\tthis._subviews.push(internal_external_facet_view);\n\t\t\tvar internal_external_facet_markup = internal_external_facet_view.render('marker-also').el;\n\t\t\t$articleVizsReadingContainer.append(internal_external_facet_markup);\n\t\t\t/* end device facet */\n\n\t\t\t/* DOMAIN REFERRERS */\n\t\t\tvar domain_facet_view = new views.ArticleDetailVizDomainFacets({\n\t\t\t\ttitle: 'Who\\'s sending readers here?', \n\t\t\t\treferrer_metrics: referrer_metrics,\n\t\t\t\twhich: 'domain-referrers'\n\t\t\t});\n\t\t\tthis._subviews.push(domain_facet_view);\n\t\t\tvar domain_facet_markup = domain_facet_view.render().el;\n\t\t\t$articleVizsReadingContainer.append(domain_facet_markup);\n\t\t\t/* end device facet */\n\n\t\t\t/* ARTICLE REFERRERS */\n\t\t\tvar domain_facet_view = new views.ArticleDetailVizArticleReferrers({\n\t\t\t\ttitle: 'What articles link here?', \n\t\t\t\treferrer_metrics: referrer_metrics,\n\t\t\t\twhich: 'article-referrers'\n\t\t\t});\n\t\t\tthis._subviews.push(domain_facet_view);\n\t\t\tvar domain_facet_markup = domain_facet_view.render().el;\n\t\t\t$articleVizsReadingContainer.append(domain_facet_markup);\n\t\t\t/* end article referrers */\n\n\t\t}\n\n\t\t/* TWEEETZ */\n\t\tif (!_.isEmpty(tweet_info)){\n\t\t\t$articleVizsTweetsContainer.html('');\n\t\t\tvar tweets_view = new views.ArticleDetailVizTweets({\n\t\t\t\ttitle: 'Who\\'s tweeted this story?', \n\t\t\t\ttweet_info: tweet_info,\n\t\t\t\twhich: 'tweets'\n\t\t\t});\n\t\t\tthis._subviews.push(tweets_view);\n\t\t\tvar tweet_markup = tweets_view.render().el;\n\t\t\t$articleVizsTweetsContainer.append(tweet_markup);\n\t\t\t/* end tweetz */\n\t\t\t\n\t\t}\n\n\n\t\treturn this;\n\t},\n\n\teventsGallery: {\n\t\tadd: function(eventModel){\n\t\t\tvar item_view,\n\t\t\t\t\titem_el;\n\n\t\t\teventModel.set('in_selection', true);\n\t\t\titem_view = new views.ArticleDetailEvent({model: eventModel});\n\t\t\t// Keep track of this subview so self we might destroy it later!\n\t\t\tthis._subviews.push(item_view);\n\t\t\titem_el = item_view.render().el;\n\t\t\tthis.$eventsGalleryContainer.append(item_el);\n\t\t\treturn this;\n\t\t},\n\t\tremove: function(eventModel){\n\t\t\teventModel.set('in_selection', false);\n\t\t\treturn this;\n\t\t},\n\t\tsetActiveEvents: function(){\n\t\t\tvar current_filtered_set = views.po.article_detailed_events.getCurrentItems();\n\n\t\t\t// // To maintain the correct sort order on the dom, we want to empty it\n\t\t\tthis.article_detailed_events_collection.set([]);\n\t\t\t// // For changing the drawer list items based on filters\n\t\t\tthis.article_detailed_events_collection.set(current_filtered_set);\n\t\t}\n\t},\n\n\tupdateEventGalleryItems: function(){\n\t\treturn this;\n\t},\n\n\tbakeTags: function(){\n\t\t// Append some things after the HTML has been baked\n\t\t// Such as tags\n\t\tvar local_subject_tags_collection;\n\n\t\t// Helper function\n\t\t// var doesThisArticleHaveThisTag = function(tagName){\n\t\t// \tvar this_articles_tag_names = collections.article_detailed_subject_tags.instance.pluck('name'),\n\t\t// \t\t\thas_this_tag = _.contains(this_articles_tag_names, tagName),\n\t\t// \t\t\treturn_val = false;\n\t\t// \tif (has_this_tag) {\n\t\t// \t\treturn_val = true;\n\t\t// \t}\n\t\t// \treturn return_val;\n\t\t// };\n\n\t\t// var new_model_urlRoot = function(){\n\t\t// \tvar article_id = collections.article_detailed.instance.pluck('id')[0];\n\t\t// \treturn '/api/articles/'+article_id+'/subjects';\n\t\t// };\n\n\t\t// Set up the other collections and page elements\n\t\t// Populate tags into the subject_tag\n\t\tvar subject_tags_full     \t\t= this.model.get('subject_tags_full');\n\t\tvar subject_tag_input_options = this.model.get('subject_tag_input_options');\n\t\tvar impact_tags_full      \t\t= this.model.get('impact_tags_full');\n\t\tvar impact_tag_categories \t\t= this.model.get('impact_tag_categories');\n\t\tvar impact_tag_levels     \t\t= this.model.get('impact_tag_levels');\n\n\t\t// If we have subject tags, clear our placeholder 'No tags' and add the real tags\n\t\tif (subject_tags_full.length){\n\t\t\tthis.$subjectTagsContainer.html('');\n\t\t\tcollections.article_detailed_subject_tags.instance.set(subject_tags_full);\n\t\t} else {\n\t\t\t// If we don't have anything, empty this collection\n\t\t\tcollections.article_detailed_subject_tags.instance.set([]);\n\t\t}\n\n\t\t// Impact tag categories\n\t\tif (impact_tags_full.length){\n\t\t\tthis.$impactTagsContainer.html('');\n\t\t\tcollections.article_detailed_impact_tags.instance.set(impact_tags_full);\n\t\t} else {\n\t\t\t// If we don't have anything, empty this collection\n\t\t\tcollections.article_detailed_impact_tags.instance.set([]);\n\t\t}\n\n\n\t\t// Impact tag categories\n\t\tif (impact_tag_categories.length){\n\t\t\tthis.$impactTagCategoriesContainer.html('');\n\t\t\tcollections.article_detailed_impact_tag_attributes.categories_instance.set(impact_tag_categories);\n\t\t} else {\n\t\t\t// If we don't have anything, empty this collection\n\t\t\tcollections.article_detailed_impact_tag_attributes.categories_instance.set([]);\n\t\t}\n\n\t\t// Impact tag levels\n\t\tif (impact_tag_levels.length){\n\t\t\tthis.$impactTagLevelsContainer.html('');\n\t\t\tcollections.article_detailed_impact_tag_attributes.levels_instance.set(impact_tag_levels);\n\t\t} else {\n\t\t\t// If we don't have anything, empty this collection\n\t\t\tcollections.article_detailed_impact_tag_attributes.levels_instance.set([]);\n\t\t}\n\n\n\t\t// Add all account subject tags to the maker modal\n\t\tif (collections.subject_tags.instance.length){\n\t\t\tthis.$editSubjectTagsContainer.html('<div class=\"description\">Add subject tags to this article.</div>');\n\n\t\t\t// Make a copy for every article\n\t\t\t// collections.subject_tags.instance.each(function(subjectTagModel){\n\t\t\tsubject_tag_input_options.forEach(function(subjectTagModel){\n\t\t\t\tvar subject_tag_view,\n\t\t\t\t\t\tsubject_tag_el;\n\n\t\t\t\tsubject_tag_view = new views.ArticleDetailSubjectTagEditor({model: subjectTagModel, articleTags: subject_tags_full});\n\t\t\t\t// Keep track of this subview so self we might destroy it later!\n\t\t\t\tthis._subviews.push(subject_tag_view);\n\t\t\t\tsubject_tag_el = subject_tag_view.render().el;\n\t\t\t\tthis.$editSubjectTagsContainer.append(subject_tag_el);\n\t\t\t// }, this);\n\n\t\t\t}, this);\n\t\t\t// \tvar subject_tag_view,\n\t\t\t// \t\t\tsubject_tag_el,\n\t\t\t// \t\t\tnew_model = subjectTagModel.clone(),\n\t\t\t// \t\t\ttag_selected = doesThisArticleHaveThisTag(new_model.get('name'));\n\n\t\t\t// \tnew_model.set('selected', tag_selected);\n\t\t\t// \tnew_model.urlRoot = new_model_urlRoot;\n\n\t\t\t// \tsubject_tag_view = new views.ArticleDetailAccountSubjectTag({model: new_model});\n\t\t\t// \t// Keep track of this subview so self we might destroy it later!\n\t\t\t// \tthis._subviews.push(subject_tag_view);\n\t\t\t// \tsubject_tag_el = subject_tag_view.render().el;\n\t\t\t// \tthis.$editSubjectTagsContainer.append(subject_tag_el);\n\t\t\t// }, this);\n\n\t\t\t// Init dragging on this modal\n\t\t\tvar editSubjectTagsWrapper = this.$el.find('#add-subject-tag').parents('.modal-parent').find('.modal-inner')[0];\n\t\t\td3.select(editSubjectTagsWrapper).call(this.drag());\n\n\t\t}\n\t},\n\n\tsubject_tags: {\n\t\tadd: function(subjectTagModel){\n\t\t\tvar item_view,\n\t\t\t\t\titem_el;\n\n\t\t\t// If this article didn't have any before\n\t\t\tif (collections.article_detailed_subject_tags.instance.length == 1){\n\t\t\t\tthis.$subjectTagsContainer.html('');\n\t\t\t}\n\t\t\titem_view = new views.ArticleDetailSubjectTag({model: subjectTagModel});\n\t\t\tthis._subviews.push(item_view);\n\t\t\titem_el = item_view.render().el;\n\t\t\tthis.$subjectTagsContainer.append(item_el);\n\t\t\treturn this;\n\t\t},\n\t\tremove: function(subjectTagModel){\n\t\t\t// console.log('removing')\n\t\t\t// this.killView();\n\t\t\tif (collections.article_detailed_subject_tags.instance.length == 0){\n\t\t\t\tthis.$subjectTagsContainer.append('<li class=\"tag empty\">None</li>');\n\t\t\t}\n\t\t\tsubjectTagModel.trigger('destroy');\n\t\t\t// subjectTagModel.set('destroy', true);\n\t\t\treturn this;\n\t\t}\n\t},\t\n\timpact_tags: {\n\t\tadd: function(impactTagModel){\n\t\t\tvar item_view,\n\t\t\t\t\titem_el;\n\t\t\titem_view = new views.ArticleDetailImpactTag({model: impactTagModel});\n\t\t\tthis._subviews.push(item_view);\n\t\t\titem_el = item_view.render().el;\n\t\t\tthis.$impactTagsContainer.append(item_el);\n\t\t\treturn this;\n\t\t},\n\t\tremove: function(subjectTagModel){\n\t\t\t// console.log('removing')\n\t\t\t// this.killView();\n\t\t\tsubjectTagModel.set('destroy', true);\n\t\t\treturn this;\n\t\t}\n\t},\n\timpact_tag_attribute: {\n\t\tadd: function(attributeModel, collection){\n\t\t\tvar item_view,\n\t\t\t\t\titem_el;\n\t\t\t// This will tell us if we should append to the `category` or `level` list\n\t\t\tvar which_collection = collection.metadata('which'),\n\t\t\t\t\tcontainers = {\n\t\t\t\t\t\tcategories: this.$impactTagCategoriesContainer,\n\t\t\t\t\t\tlevels: this.$impactTagLevelsContainer    \n\t\t\t\t\t},\n\t\t\t\t\tcontainer = containers[which_collection];\n\n\t\t\titem_view = new views.ArticleDetailAttributeTag({model: attributeModel});\n\t\t\tthis._subviews.push(item_view);\n\t\t\titem_el = item_view.render().el;\n\t\t\tcontainer.append(item_el);\n\t\t\treturn this;\n\t\t},\n\t\tremove: function(){\n\n\t\t}\n\t},\n\n\tbakeEventCreator: function(){\n\t\t// We will pass the assignee into the event creator view so it can set self field\n\t\tvar defaults = {\n\t\t\tstatus: 'approved',\n\t\t\tcontent_items: [{\n\t\t\t\tid: this.model.id,\n\t\t\t\ttitle: this.model.get('title')\n\t\t\t}]\n\t\t};\n\n\t\t// Create an instance of an event creator view\n\t\tvar event_creator_view = new views.EventCreator({el: this.$eventCreator[0], model: defaults, collection: this.article_detailed_events_collection});\n\t\tthis._subviews.push(event_creator_view);\n\t\tthis._time_picker = event_creator_view._time_picker;\n\t\treturn this;\n\t},\n\n\tfilterEventsByDateRange: function(timestampRange, empty){\n\t\t// Reconvert out of user timezone and set to timestamp\n\t\tcollections.po.article_detailed_events.filters.timestamp.clearQuery();\n\t\t// The second argument tells us whether our brush is empty, only filter it if we are actively filtering, aka, not empty\n\t\t// This protects against the situation where the date of an event is outside the range of the graph\n\t\t// Clicking off the graph filter will set your filter to its extents, which may not be the extends of your events\n\t\tif (!empty){\n\t\t\tcollections.po.article_detailed_events.filters.timestamp.intersectQuery(timestampRange)\n\t\t}\n\t},\n\n\tsetActiveTab: function(){\n\t\tvar group = collections.article_detailed.instance.metadata('selected-tab');\n\n\t\tvar $tab \t\t= this.$el.find('.tab[data-group=\"'+group+'\"]'),\n\t\t\t\t$target = $('.detail-section[data-group=\"'+group+'\"]');\n\t\t// Update style on this tab\n\t\tthis.$el.find('.tab').removeClass('active');\n\t\t$tab.addClass('active');\n\n\t\t// Hide other section\n\t\t$('.detail-section').hide();\n\t\t// Show the section we want\n\t\t$target.show();\n\n\t\treturn this;\n\t},\n\n\tsetActiveTabFromClick: function(e){\n\t\tvar $tab = $(e.currentTarget),\n\t\t\t\tgroup;\n\n\t\t// Only proceed if there is no active class\n\t\tif (!$tab.hasClass('active')){\n\t\t\tgroup   = $tab.attr('data-group');\n\t\t\tcollections.article_detailed.instance.metadata('selected-tab', group);\n\t\t\tthis.setActiveTab();\n\t\t}\n\t\treturn this;\n\t},\n\n\tsetDetailNavigation: function(){\n\t\tvar comparison_models = app.instance.staged_article_comparison_models,\n\t\t\t\tcomparison_ids = _.pluck(comparison_models, 'id'),\n\t\t\t\tthis_id = this.model.id,\n\t\t\t\tthis_id_index = comparison_ids.indexOf(this_id),\n\t\t\t\t$nav = this.$el.find('.article-detail-navigation'),\n\t\t\t\t$prev = $nav.find('.prev'),\n\t\t\t\t$next = $nav.find('.next'),\n\t\t\t\t$spacer = $nav.find('.spacer'),\n\t\t\t\tprev_model_index = this_id_index - 1,\n\t\t\t\tnext_model_index = this_id_index + 1,\n\t\t\t\tprev_model,\n\t\t\t\tnext_model,\n\t\t\t\tprev_title,\n\t\t\t\tnext_title;\n\n\t\tif (this_id_index != -1) {\n\t\t\t// If it's not the first one, print a previous\n\t\t\tif (this_id_index > 0) {\n\t\t\t\tprev_model = comparison_models[prev_model_index];\n\t\t\t\tprev_title = helpers.templates.htmlDecode(prev_model.get('title'));\n\n\t\t\t\t$prev.html(' Prev')\n\t\t\t\t\t.addClass('go-to-detail')\n\t\t\t\t\t.attr('data-id',  prev_model.get('id'))\n\t\t\t\t\t.attr('aria-label', prev_title)\n\t\t\t\t\t.prepend('<span class=\"octicon octicon-chevron-left\"></span>')\n\t\t\t}\n\n\t\t\t// If it's not the last one print a next\n\t\t\tif (this_id_index < comparison_ids.length - 1) {\n\t\t\t\tnext_model = comparison_models[next_model_index];\n\t\t\t\tnext_title = helpers.templates.htmlDecode(next_model.get('title'));\n\n\t\t\t\t$next.html('Next ')\n\t\t\t\t\t.addClass('go-to-detail')\n\t\t\t\t\t.attr('data-id', next_model.get('id'))\n\t\t\t\t\t.attr('aria-label', next_title)\n\t\t\t\t\t.append('<span class=\"octicon octicon-chevron-right\"></span>')\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\ttoggleModal: function(e){\n\t\t// Open up a modal self lets you assign it to something\n\t\tviews.helpers.toggleModal(e);\n\t},\n\n\tdestroyView: function(model){\n\t\t// this._time_picker.destroy();\n\t\tthis.killView();\n\t},\n\n\tdrag: function(){\n\t\treturn d3.behavior.drag()\n\t\t\t\t\t.on(\"drag\", function(d,i) {\n\t\t\t\t\t\tvar D3_modal_inner = d3.select(this),\n\t\t\t\t\t\t\t\ttop = parseInt(D3_modal_inner.style('top')),\n\t\t\t\t\t\t\t\tleft = parseInt(D3_modal_inner.style('left'));\n\n\t\t\t\t\t\ttop += d3.event.dy;\n\t\t\t\t\t\tleft += d3.event.dx;\n\n\t\t\t\t\t\tD3_modal_inner.style('top', top+'px').style('left', left+'px');\n\t\t\t\t\t\t\t\n\t\t\t\t\t})\n\t},\n\n\t// clearLoadMoreButton: function(){\n\t// \tthis.$eventsGalleryContainer\n\n\t// \treturn this;\n\t// },\n\n\tmoreEvents: function(e){\n\t\tapp.helpers.gifizeLoadMoreButton($(e.currentTarget));\n\n\t\tthis.fetchEventsByParameters(true);\n\n\t\treturn this;\n\t},\n\n\tsetLoadMoreEventsButton: function(){\n\n\t\t// Set up what collection we want to follow\n\t\tvar this_collection = this.article_detailed_events_collection,\n\t\t\t\t$list = this.$eventsGalleryContainer,\n\t\t\t\t$loadMoreBtn; // To be created and appended below, if we need it.\n\n\t\t// Always kill the button\n\t\t// this.clearLoadMoreButton();\n\t\t$list.find('.load-more').remove();\n\n\t\tvar pagination_info = this_collection.metadata('pagination');\n\t\tvar current_page = pagination_info.page,\n\t\t\t\tpage_size = pagination_info.per_page,\n\t\t\t\ttotal_pages = pagination_info.total_pages;\n\n\t\tvar currently_loaded_count = this_collection.length,\n\t\t\t\ttotal_pending_for_search = this_collection.metadata('total');\n\n\t\t// Do we need the button\n\t\tvar more_alerts_to_load = current_page < total_pages,\n\t\t\t\tremaining_alerts = total_pending_for_search - currently_loaded_count,\n\t\t\t\tto_load_string = _.min([remaining_alerts, page_size]), // Say you'll load either a full page or how many are left, whichever is smaller\n\t\t\t\tbutton_str;\n\n\t\tif (more_alerts_to_load){\n\t\t\t// Create a little button in-memory (for now)\n\t\t\t$loadMoreBtn = $('<button class=\"load-more\"></button>');\n\t\t\tbutton_str = 'Showing ' + currently_loaded_count + ' out of ' + total_pending_for_search + '. Load ' + to_load_string + ' more...'\n\n\t\t\t// Finally, append it as the last thing\n\t\t\t$loadMoreBtn.html(button_str).appendTo($list);\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tfetchEventsByParameters: function(increment, firstRun){\n\t\tvar self = this;\n\t\tvar params = this.event_filters.assembleQueryParams();\n\t\tparams.content_item_ids = this.model.id;\n\t\tvar this_collection = this.article_detailed_events_collection;\n\t\tvar collection_pagination = this_collection.metadata('pagination') || {};\n\t\tvar current_page = collection_pagination.page;\n\n\t\tconsole.log('params',params);\n\n\t\t// This is the initial loading state\n\t\tif (increment){\n\t\t\tparams.page = current_page + 1;\n\t\t} else {\n\t\t\t// Set the loading state\n\t\t\tself.setLoading.call(self, self.$eventsContainer, true);\n\t\t\t// Also call this on the content div so we can freeze scrolling to avoid a jump when the container goes empty\n\t\t\t// app.instance.setLoading.call(app.instance, app.instance.$content, true);\n\t\t\t// // Clear the set\n\t\t\tthis_collection.set([]);\n\t\t}\n\t\t// // Responsive articles will be added to `this_collection`\n\t\t// // `pagination and `total` information will be added as metadata on that collection\n\t\tthis_collection.fetch({data: params, remove: false})\n\t\t\t.then(function(model, status, response){\n\t\t\t\t// This is only called on success, error are caught by our listener above\n\t\t\t\tif (firstRun){\n\t\t\t\t\tself.bakeEventGalleryFurniture();\n\t\t\t\t}\n\t\t\t\tself.setLoading.call(self, self.$eventsContainer, 'false');\n\t\t\t\t// app.instance.setLoading.call(app.instance, app.instance.$content, 'false');\n\t\t\t\tself.setLoadMoreEventsButton.call(self);\n\n\t\t\t});\n\n\t\treturn this;\n\t},\n\n\tupdateTagContainerByCounts: function(){\n\n\t\t_.each(this.tag_list_els, function($el, key){\n\t\t\tvar facet = models.event_tag_facets.get(key);\n\t\t\t$el.find('.count').html(facet.length);\n\t\t\tvar has_facet = facet.length > 0;\n\t\t\t$el.toggleClass('disabled', !has_facet);\n\n\t\t}, this);\n\n\t\treturn this;\n\t}\n\n});\n","views.ArticleDetailAttributeTag = views.AA_BaseTag.extend({\n\n\ttagName: 'li',\n\n\tclassName: 'tag',\n\n\t// events: {\n\t// \t'click': 'remove'\n\t// },\n\n\tinitialize: function(){\n\t\t// Set colors\n\t\tthis.styleLayout();\n\t\treturn this;\n\t},\n\n\trender: function(){\n\t\t// console.log('model',this.model.toJSON())\n\t\tvar tag_data = _.extend(this.model.toJSON(), helpers.templates);\n\t\tvar tag_markup = templates.articleDetailTagFactory(tag_data);\n\t\tthis.$el.html(tag_markup);\n\t\t// Set its border left and bg color to the appropriate color value in its data\n\t\treturn this;\n\t}\n\n\t// styleLayout: function(){\n\t// \tvar bg_color = this.model.get('color'),\n\t// \t\t\ttext_color = this.whiteOrBlack(bg_color),\n\t// \t\t\tbg_color_darker = this.colorLuminance(bg_color, -.25);\n\n\t// \tthis.$el.css({'background-color': bg_color, 'color': text_color, 'border': '1px solid' + bg_color_darker});\n\t// \t// this.$el.css({'background-color': bg_color, 'color': text_color});\n\n\t// \treturn this;\n\t// }\n\n\t// remove: function(){\n\t// \t// TODO, this should fire a call to the api\n\t// \tconsole.log(this.model.url())\n\t// \tthis.model.destroy();\n\t// },\n\n\n});","views.ArticleDetailEvent = Backbone.View.extend({\n\n\tclassName: 'event-container',\n\n\tevents: {\n\t\t'click input.destroy': 'destroyEvent',\n\t\t'submit form': 'saveModal',\n\t},\n\n\tinitialize: function(){\n\n\t\tthis._subviews = [];\n\t\t// var that = this;\n\t\t// Don't need to do anything on initialize\n\t\t// this.d3_el = d3.select(this.el);\n\n\t\tthis.listenTo(this.model, 'change:in_selection', this.killView);\n\t\tthis.listenTo(this.model, 'refresh', this.refresh); // TODO, change where this is triggered\n\t},\n\n\trefresh: function(){\n\t\tthis.silenceView();\n\n\t\t// Clear if present\n\t\t// this.d3_el.select('.event-content').remove();\n\t\tthis.render();\n\t},\n\n\trender: function(){\n\t\tthis.silenceAllSubviews();\n\n\t\tvar model_json = this.model.toJSON();\n\t\tvar event_item_markup = templates.articleDetailEventFactory( _.extend(model_json, helpers.templates.articles) );\n\t\tthis.$el.html(event_item_markup);\n\n\t\tthis.$eventTagsContainer = this.$el.find('.event-tags-container');\n\n\t\tthis.postRender();\n\n\t\t// this.edit_event_btn_modal_outer = edit_event_btn_modal_outer;\n\n\t\t// this.renderModal();\n\n\t\treturn this;\n\n\t},\n\n\tpostRender: function(){\n\n\t\tthis.bakeTags();\n\t\tthis.bakeEventEditor();\n\n\t\treturn this;\n\t},\n\n\tbakeTags: function(){\n\n\t\tvar impact_tags = this.model.get('impact_tags_full');\n\t\timpact_tags.forEach(function(impactTag){\n\t\t\tvar tag_view = new views.ArticleSummaryDrawerImpactTag({model: impactTag})\n\t\t\tvar tag_markup = tag_view.render().el;\n\t\t\tthis._subviews.push(tag_view);\n\t\t\tthis.$eventTagsContainer.append(tag_markup);\n\t\t}, this);\n\n\t\treturn this;\n\t},\n\n\tbakeEventEditor: function(){\n\n\t\tvar event_editor_view = new views.EventEditor({el: this.$el, model: this.model.toJSON()});\n\t\tthis._subviews.push(event_editor_view);\n\n\t\tthis._time_picker = event_editor_view._time_picker;\n\t\tthis.$el.append(event_editor_view.el);\n\n\t\tthis.event_editor_view = event_editor_view;\n\n\t\treturn this;\n\n\t},\n\n\tsaveModal: function(e){\n\t\te.preventDefault();\n\n\t\tvar self = this;\n\n\t\tvar current_view = this.event_editor_view,\n\t\t    form_data = current_view.getSettings();\n\n\t\tcurrent_view.validateNew(current_view.full_info.schema, form_data, function(err, msg){\n\t\t\tif (!err){\n\t\t\t\tself.disableBtns();\n\t\t\t\tself.model.save(form_data, {\n\t\t\t\t\terror: function(model, response, options){\n\t\t\t\t\t\tconsole.log('Server error on event edit', response);\n\t\t\t\t\t\tvar err = response.responseJSON;\n\t\t\t\t\t\t// TODO, test\n\t\t\t\t\t\tcurrent_view.printMsgOnSubmit(true, 'Error '+err.status+': ' + err.message.replace(/\\n/g, '<br/><br/>'));\n\t\t\t\t\t},\n\t\t\t\t\tsuccess: function(model, response, options){\n\t\t\t\t\t\t// Re-render view with updates to this model\n\n\t\t\t\t\t\tself.render();\n\t\t\t\t\t\t// Clear submit message\n\t\t\t\t\t\tcurrent_view.printMsgOnSubmit(false, '');\n\t\t\t\t\t\t// Close the modal\n\t\t\t\t\t\tself.toggleModal(e);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tcurrent_view.printMsgOnSubmit(err, msg);\n\t\t\t}\n\n\t\t}, this);\n\n\t\treturn this;\n\n\t},\n\n\tupdate: function(model, inSelection){\n\t\tif (!inSelection){\n\t\t\tthis.killView();\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tdestroyEvent: function(e){\n\t\tvar self = this;\n\t\t// TODO animate this outro\n\t\tthis.model.destroy({\n    \tsuccess: function(model, response) {\n\t\t\t\tself.killView();\n\t\t\t\tself.toggleModal(e);\n\t\t\t},\n\t\t\terror: function(error){\n\t\t\t\tconsole.log('Error deleting event.', error);\n\t\t\t}\n\t\t});\n\t},\n\n\ttoggleModal: function(e){\n\t\t// Open up a modal that lets you assign it to something\n\t\tviews.helpers.toggleModal(e);\n\t},\n\n\tdisableBtns: function(){\n\t\tthis.event_editor_view.$form.find('.buttons-container').addClass('disabled');\n\t}\n\n});","views.ArticleDetailImpactTag = views.AA_BaseTag.extend({\n\n\ttagName: 'li',\n\n\tclassName: 'tag',\n\n\tinitialize: function(){\n\t\t// Set colors\n\t\tthis.styleLayoutWithTooltip();\n\t\t// TODO, look into when this is ever getting destroyed\n\t\tthis.listenTo(this.model, 'change:destroy', this.destroyView)\n\t\treturn this;\n\t},\n\n\trender: function(){\n\t\tvar tag_data = _.extend(this.model.toJSON(), helpers.templates);\n\t\tvar tag_markup = templates.articleDetailTagFactory(tag_data);\n\n\t\tthis.$el.html(tag_markup);\n\t\treturn this;\n\t},\n\n\t// getLabel: function(){\n\t// \tvar category = this.model.get('category'),\n\t// \t\t\tlevel = helpers.templates.prettyName(this.model.get('level')),\n\t// \t\t\ttooltip_text = level + ' ' + category;\n\n\t// \treturn tooltip_text;\n\t// },\n\n\t// destroyView: function(model, destroyMode){\n\t// \tif (destroyMode){\n\t// \t\tthis.killView();\n\t// \t\tthis.model.set({destroy: false}, {silent: true});\n\t// \t}\n\t// }\n\n});","views.ArticleDetailSubjectTag = views.AA_BaseTag.extend({\n\n\ttagName: 'li',\n\n\tclassName: 'tag',\n\n\tinitialize: function(){\n\t\t// Set colors\n\t\tthis.styleLayout();\n\t\tthis.listenTo(this.model, 'destroy', this.destroyView)\n\t\treturn this;\n\t},\n\n\trender: function(){\n\t\tvar tag_data = _.extend(this.model.toJSON(), { toTitleCase: helpers.templates.articles.toTitleCase });\n\t\tvar tag_markup = templates.articleDetailTagFactory(tag_data);\n\t\tthis.$el.html(tag_markup);\n\t\treturn this;\n\t},\n\n\tdestroyView: function(model){\n\t\tthis.killView();\n\t}\n\n});","views.ArticleDetailSubjectTagEditor = views.AA_BaseTag.extend({\n\n\ttagName: 'li',\n\n\tclassName: 'tag',\n\n\tevents: {\n\t\t'change': 'toggleChecked'\n\t},\n\n\tinitialize: function (options) {\n\t\t// Is this model checked?\n\t\tvar article_subject_tag_ids = _.pluck(options.articleTags, 'id');\n\t\tthis.model.set('checked', _.contains(article_subject_tag_ids, this.model.id));\n\n\t\tthis.listenTo(this.model, 'change:checked', this.syncToApi);\n\t\treturn this;\n\t},\n\n\trender: function () {\n\t\tvar tag_data = _.extend({}, this.model.toJSON(), helpers.templates.articles);\n\t\tvar tag_markup = templates.articleDetailAccountSubjectTagFactory(tag_data);\n\t\tthis.$el.html(tag_markup);\n\n\t\t// Set its border left and bg color to the appropriate color value in its data\n\t\tthis.styleLayout();\n\t\treturn this;\n\t},\n\n\ttoggleChecked: function(){\n\t\tvar checked = this.$el.find('input').prop('checked');\n\t\tthis.model.set('checked', checked);\n\t},\n\n\tsyncToApi: function(model, checked){\n\t\tvar self = this;\n\t\tvar method = (checked) ? 'update' : 'delete';\n\t\tvar col = collections.article_detailed_subject_tags.instance\n\t\tthis.$el.addClass('disabled');\n\n\t\tcol.sync(method, model, {\n\t\t\tsuccess: function(modelBack, msg, response){\n\t\t\t\tvar type = this.type;\n\t\t\t\tif (type === 'DELETE') {\n\t\t\t\t\tcol.remove(model);\n\t\t\t\t} else if (type == 'PUT'){\n\t\t\t\t\tcol.add(model);\n\t\t\t\t}\n\t\t\t\tself.$el.removeClass('disabled');\n\t\t\t},\n\t\t\terror: function(model, msg, response){\n\t\t\t\tapp.instance.reportErr(model, response);\n\t\t\t\tself.$el.removeClass('disabled');\n\t\t\t}\n\t\t});\n\n\t}\n\n});","views.ArticleDetailVizArticleReferrers = views.AA_BaseArticleViz.extend({\n\n\tinitialize: function(options){\n\t\tvar referrer_metrics = options.referrer_metrics,\n\t\t\t\ttitle = options.title,\n\t\t\t\twhich = options.which;\n\n\t\tthis.section_title = title;\n\t\tthis.setMarkup();\n\t\tthis.$el.attr('data-which', which);\n\n\t\tvar article_referrers_from_article = referrer_metrics.article_referrers;\n\n\t\tthis.data = article_referrers_from_article;\n\n\t\treturn this;\n\t},\n\n\t// Override the base view's `render` function\n\trender: function(){\n\t\tvar that = this;\n\t\tvar vizContainer = this.$vizContainer.get(0);\n\t\tvar d3_vizContainer = d3.select(vizContainer);\n\n\t\tvar _links = d3_vizContainer.selectAll('.bar-container').data(this.data).enter();\n\n\t\t_links.append('div')\n\t\t\t.classed('bar-text', true)\n\t\t\t.html(function(d){\n\t\t\t\treturn '<a href=\"'+d+'\" target=\"_blank\">'+that.ppUrl(d)+'</a>';\n\t\t\t});\n\n\t\treturn this;\n\t},\n\n\tppUrl: function(url){\n\t\t// Strip out http\n\t\turl = url.replace(/(http|https):\\/\\//,'');\n\t\t// Bold domain\n\t\turl = url.replace(/[^w{3}\\.]([a-zA-Z0-9]([a-zA-Z0-9\\-]{0,65}[a-zA-Z0-9])?\\.)+[a-zA-Z]{2,6}/i, function(match){\n\t\t\treturn '<span class=\"highlight\">'+match+'</span>';\n\t\t});\n\n\t\treturn url;\n\n\t}\n\n});","views.ArticleDetailVizDeviceFacet = views.AA_BaseArticleViz.extend({\n\n\tinitialize: function(options){\n\t\tvar referrer_metrics = options.referrer_metrics,\n\t\t\t\ttitle = options.title,\n\t\t\t\twhich = options.which;\n\n\t\tthis.section_title = title;\n\t\tthis.setMarkup();\n\t\tthis.calcComparisonMarkerParams();\n\t\tthis.$el.attr('data-which', which);\n\n\t\t// Listen for marker redraw\n\t\tthis.listenTo(collections.article_comparisons.instance, 'resetMetricHeaders', this.redrawMarker);\n\n\t\t// Bake device facets\n\t\tvar device_facets = [\n\t\t\t{\n\t\t\t\tfacet: \"desktop\",\n\t\t\t\tpageviews: 0\n\t\t\t},{\n\t\t\t\tfacet: \"tablet\",\n\t\t\t\tpageviews: 0\n\t\t\t},{\n\t\t\t\tfacet: \"mobile\",\n\t\t\t\tpageviews: 0\n\t\t\t}\n\t\t];\n\n\t\tvar device_facets_from_article = referrer_metrics.device_facets,\n\t\t\t\ttotal_pageviews = referrer_metrics.total.pageviews;\n\n\t\t// `device_facets_model` is sparse so let's fill in any holes by copying the existing values over to the full and empty json object, overwriting `0`s\n\t\tdevice_facets.forEach(function(deviceFacet){\n\t\t\tvar existing_val = _.findWhere(device_facets_from_article, {facet: deviceFacet.facet}),\n\t\t\t\t\tpageviews;\n\t\t\tif (existing_val) {\n\t\t\t\tpageviews = existing_val.pageviews\n\t\t\t\tdeviceFacet.pageviews = pageviews;\n\t\t\t}\n\t\t});\n\n\t\tthis.data = device_facets;\n\t\tthis.total = total_pageviews;\n\n\t\treturn this;\n\t}\n\n});","views.ArticleDetailVizDomainFacets = views.AA_BaseArticleViz.extend({\n\n\tinitialize: function(options){\n\t\tvar referrer_metrics = options.referrer_metrics,\n\t\t\t\ttitle = options.title,\n\t\t\t\twhich = options.which;\n\n\t\tthis.section_title = title;\n\t\tthis.setMarkup();\n\t\tthis.$el.attr('data-which', which);\n\n\t\tvar domain_facets_from_article = referrer_metrics.ref_domain_facets,\n\t\t\t\ttotal_pageviews = referrer_metrics.total.pageviews;\n\n\t\t// TEMPORARY, API WILL EVENTUALLY DO THIS\n\t\t// TODO, remove this\n\t\t// Change `t` to `twitter`\n\t\tvar twitter_facet = _.findWhere(referrer_metrics.ref_domain_facets, {facet: 't'});\n\n\t\tif (twitter_facet){\n\t\t\ttwitter_facet.facet = 'twitter';\n\t\t}\n\n\t\tthis.data = domain_facets_from_article.sort(function(a,b){\n\t\t\tif (a.pageviews < b.pageviews){\n\t\t\t\treturn 1;\n\t\t\t} else {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t});\n\t\tthis.total = total_pageviews;\n\n\t\treturn this;\n\t}\n\n});","views.ArticleDetailVizInternalExternal = views.AA_BaseArticleViz.extend({\n\n\tinitialize: function(options){\n\t\tvar referrer_metrics = options.referrer_metrics,\n\t\t\t\ttitle = options.title,\n\t\t\t\twhich = options.which;\n\n\t\tthis.section_title = title;\n\t\tthis.setMarkup();\n\t\tthis.calcComparisonMarkerParams();\n\t\tthis.$el.attr('data-which', which);\n\n\t\t// Listen for marker redraw\n\t\tthis.listenTo(collections.article_comparisons.instance, 'resetMetricHeaders', this.redrawMarker);\n\n\t\tvar entrances = referrer_metrics.total.entrances,\n\t\t\t\tpageviews = referrer_metrics.total.pageviews;\n\n\t\t// Get percentage for these later by dividing the facet by pageviews.\n\t\tthis.data = [\n\t\t\t{\n\t\t\t\tfacet: 'internal',\n\t\t\t\tpageviews: pageviews - entrances\n\t\t\t},\n\t\t\t{\n\t\t\t\tfacet: 'external',\n\t\t\t\tpageviews: entrances\n\t\t\t}\n\t\t];\n\n\t\t// Which we'll store as total to be consistent with the other vizs\n\t\tthis.total = pageviews;\n\n\t\treturn this;\n\t}\n\n});","views.ArticleDetailVizTweets = views.AA_BaseArticleViz.extend({\n\n\tinitialize: function(options){\n\t\tvar tweets = options.tweet_info,\n\t\t\t\ttitle = options.title,\n\t\t\t\twhich = options.which;\n\n\t\tthis.section_title = title;\n\t\tthis.setMarkup();\n\t\tthis.$el.attr('data-which', which);\n\n\t\tthis.data = tweets;\n\n\t\treturn this;\n\t},\n\n\t// Override the base view's `render` function\n\trender: function(){\n\t\tvar that = this;\n\t\tvar vizContainer = this.$vizContainer.get(0);\n\t\tvar d3_vizContainer = d3.select(vizContainer);\n\n\t\tvar _tweets = d3_vizContainer.selectAll('.bar-container').data(this.data).enter();\n\n\t\t_tweets.append('div')\n\t\t\t.classed('tweet-container', true)\n\t\t\t.html(function(d){\n\t\t\t\tvar html_without_script = d.html.replace('<script async src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>', '');\n\t\t\t\treturn html_without_script;\n\t\t\t})\n\n\t\t\t// No idea why wrapping it in this works but it does\n\t\t\t// Hitting window.twttr.widgets.load(); should work without being in a setTimeout\n\t\t\tsetTimeout(function(){\n\t\t\t\twindow.twttr.widgets.load();\n\t\t\t}, 0);\n\n\n\t\treturn this;\t\n\t},\n\n\tppUrl: function(url){\n\t\t// Strip out http\n\t\turl = url.replace(/(http|https):\\/\\//,'');\n\t\t// Bold domain\n\t\turl = url.replace(/[^w{3}\\.]([a-zA-Z0-9]([a-zA-Z0-9\\-]{0,65}[a-zA-Z0-9])?\\.)+[a-zA-Z]{2,6}/i, function(match){\n\t\t\treturn '<span class=\"highlight\">'+match+'</span>';\n\t\t});\n\n\t\treturn url;\n\n\t}\n\n});","views.ArticleDrawerSorter = Backbone.View.extend({\n\n\tevents: {\n\t\t'change select': 'setSort',\n\t\t'click .sort-direction': 'toggleSortDir'\n\t},\n\n\tinitialize: function(){\n\t\t// Don't need to do anything on initialize\n\t\tthis.$sorter = this.$el.find('select');\n\t\tthis.$direction = this.$el.find('.sort-direction');\n\t\tthis.render();\n\t},\n\n\trender: function(){\n\t\tvar sorterModels = this.collection.models,\n\t\t\t\tsort_by = collections.dimensions.instance.metadata('sort_by'); // This is our version without the `-`;\n\n\t\tvar options_markup = sorterModels.map(function(sorterModel){\n\t\t\tvar sort_name = sorterModel.get('sort_name'),\n\t\t\t\t\tselected = (sort_name == sort_by || sort_name == ('metrics.'+sort_by) ) ? 'selected' : '';\n\t\t\treturn '<option value=\"'+sort_name+'\" '+selected+'>'+helpers.templates.articles.prettyMetricName(sorterModel.get('name'))+'</option>'\n\t\t}).join('');\n\t\tthis.$sorter.append(options_markup);\n\t},\n\n\tsetSort: function(){\n    var val = this.$sorter.val();\n    var direction = this.$direction.attr('data-dir') || '';\n   \tmodels.content_item_filters.set('sort_by', direction+val).trigger('filter');\n\t},\n\n\ttoggleSortDir: function(){\n\t\tvar direction = this.$direction.attr('data-dir');\n\t\tif (!direction){\n\t\t\tthis.$direction.attr('data-dir', '-');\n\t\t} else {\n\t\t\tthis.$direction.attr('data-dir', '');\n\t\t}\n\n\t\tthis.setSort();\n\t\treturn this;\n\t\t\n\t}\n\n\n});","views.ArticleSearcher = Backbone.View.extend({\n\n\tevents: {\n\t\t'keyup': 'listenForKeyup_debounced'\n\t},\n\n\tinitialize: function(){\n\n\t\t// Clear on load\n\t\tthis.$el.val('');\n\t\tthis.listenForKeyup_debounced = _.debounce(this.listenForKeyup, 250);\n\t},\n\n\tlistenForKeyup: function(e){\n\t\tvar val = this.$el.val();\n\n\t\t// Check if it's roughly a character key\n\t\tif (e.which !== 0){\n\t\t\tconsole.log('search q', val)\n\t\t\t// If we have some text, find matches and filter by those cids\n\t\t\tif (val){\n\t\t\t\t// this.runBloodhound(val, this.addResultingCidsToFilter);\n\t\t\t\tmodels.content_item_filters.set('q', val);\n\t\t\t} else {\n\t\t\t\tmodels.content_item_filters.unset('q', val);\n\t\t\t\t// all_cids = views.po.article_summaries.all_cids;\n\t\t\t\t// // If we don't have matches, add all cids to our filter, making it irrelevant\n\t\t\t\t// this.addResultingCidsToFilter(all_cids);\n\t\t\t}\n\t\t\tmodels.content_item_filters.trigger('filter');\n\t\t\t\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// runBloodhound: function(val, cb){\n\t// \tapp.bloodhound.get(val, function(suggestions){\n\t// \t\tvar cids = _.pluck(suggestions, 'cid');\n\t// \t\tcb(cids);\n\t// \t});\n\t// },\n\n\t// addResultingCidsToFilter: function(cids){\n //    // Set the manualFilter to filter by these cids\n //    // `.query` replaces the existing cids\n\t// \tcollections.po.article_summaries.filters.title.query(cids);\n\t// }\n});","views.ArticleSummaryDrawer = Backbone.View.extend({\n\n\ttagName: 'li',\n\n\tclassName: 'drawer-list-item',\n\n\tevents: {\n\t\t'click .drawer-list-outer': 'toggleActive'\n\t\t// 'click .drawer-list-outer': 'updateSelected'\n\t},\n\n\tinitialize: function(){\n\t\t// Keep track of views created by this view\n\t\tthis._subviews = [];\n\t\tthis.updateActiveSelectionField();\n\n\t\t// Our drawer has two states, `compare` and `detail`\n\t\t// They should maintain whether they are selected under those conditions\n\t\t// So they have a selected property for each one `selected_for_compare` and `selected_for_detail`\n\t\t// Therefore, listen for changes in `section_mode` and apply what our active selection property should point to\n\t\tthis.listenTo(models.section_mode, 'change:mode', this.updateActiveSelectionField);\n\t\t\n\t\tthis.listenTo(this.model, 'change:active_selected', this.setActiveCssState);\n\n\t\t// Use this to make this field act as a binary across the collection\n\t\tthis.listenTo(this.model, 'change:selected_for_detail', this.setDetailDrawerDisplay);\n\n\t\t// Listen for a destroy event \n\t\tthis.listenTo(this.model, 'destroy', this.destroy);\n\n\t\t// Add an event listener sot hat this model can be set on and off without being clicked on\n\t\tthis.listenTo(this.model, 'toggleElement', this.toggleActive);\n\n\t},\n\n\trender: function(){\n\t\tvar drawer_list_item_markup = templates.articleSummaryDrawerFactory( _.extend(this.model.toJSON(), helpers.templates) );\n\t\tthis.$el.html(drawer_list_item_markup);\n\t\t// Set the css on load to its default settings\n\t\tthis.$subjectTagsContainer = this.$el.find('.subject-tags-container');\n\t\tthis.$impactTagsContainer = this.$el.find('.impact-tags-container');\n\n\t\tthis.addTags();\n\t\t\n\t\tthis.setActiveCssState();\n\t\treturn this;\n\t},\n\n\tupdateActiveSelectionField: function(model, mode){\n\t\tmode = mode || models.section_mode.get('mode');\n\t\tthis.selected_for = mode;\n\t},\n\n\ttoggleActive: function(){\n\t\tvar mode = this.selected_for;\n\n\t\tif (mode == 'compare'){\n\t\t\tthis.model.toggle('selected_for_'+mode);\n\t\t\tthis.model.toggle('active_selected');\n\t\t} else if (mode == 'detail'){\n\t\t\tapp.instance.sectionMode.detail.call(app.instance, this.model.get('id'));\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// updateSelected: function(){\n\t// \tvar is_active = this.model.get('active_selected'),\n\t// \t\t\tmode = this.selected_for,\n\t// \t\t\tselected_for = 'selected_for_' + mode;\n\n\t// \t// If we're in compare mode\n\t// \tif (mode == 'compare') {\n\t// \t\t// Toggle the checkbox\n\t// \t\tis_active = !is_active;\n\t// \t\t// Persist its state\n\t// \t\tthis.model.set(selected_for, is_active);\n\t// \t\t// Set to active\n\t// \t\tthis.model.set('active_selected', is_active);\n\t// \t\t// console.log(this.model.get('active_selected'))\n\t// \t} else if (mode == 'detail' && !is_active) {\n\t// \t\t// Navigate to that page\n\t// \t\tapp.instance.staged_article_detail = this.model.get('id');\n\t// \t\tapp.instance.sectionMode.detail.call(app.instance);\n\n\n\t// \t}\n\n\t// \treturn this;\n\t// },\n\n\tclearRadios: function(detailId){\n\t\tcollections.article_summaries.instance.filter(function(model){\n\t\t\tvar model_id = model.get('id');\n\t\t\treturn model_id != detailId;\n\t\t}).forEach(function(model){\n\t\t\tmodel.set({\n\t\t\t\tactive_selected: false,\n\t\t\t\tselected_for_detail: false\n\t\t\t});\n\t\t});\n\n\t\treturn this\n\t\t// _.where(collections.po.article_summaries.items, {'selected_for_detail': true}).forEach(function(po_articleSummary){\n\t\t// \tvar deselect_candidate_id = po_articleSummary.id,\n\t\t// \t\t\tbb_articleSummary;\n\n\t\t// \tif (id != deselect_candidate_id){\n\t\t// \t\tbb_articleSummary = collections.article_summaries.instance.findWhere({id: deselect_candidate_id})\n\t\t// \t\tif (bb_articleSummary) {\n\t\t// \t\t\t// Set state if in drawer\n\t\t// \t\t\tbb_articleSummary.set('selected_for_detail', false, {silent: true});\n\t\t// \t\t\tbb_articleSummary.set('active_selected', false);\n\t\t// \t\t} else {\n\t\t// \t\t\tpo_articleSummary.selected_for_detail = false;\n\t\t// \t\t\tpo_articleSummary.active_selected = false;\n\t\t// \t\t}\n\t\t// \t}\n\t\t// });\n\n\t},\n\n\tsetDetailDrawerDisplay: function(model, selectedForDetail){\n\t\t// console.log('non-drawer')\n\t\tvar id = model.get('id'),\n\t\t\t\tactive_selected = model.get('active_selected');\n\t\tif (selectedForDetail){\n\n\t\t\tthis.clearRadios(id);\n\t\t\tif (!active_selected) {\n\t\t\t\tthis.model.set('active_selected', true);\n\t\t\t} \n\t\t}\n\t},\n\n\tsetActiveCssState: function(){\n\t\tvar state = this.model.get('active_selected');\n\t\t// this.updateActiveSelectionField();\n\t\t// var active_selected = this.model.get('active_selected') || false, //Coerce `undefined` to `false`\n\t\t// \t\tselected_for_compare = this.model.get('selected_for_compare') || false, // Samesies\n\t\t// \t\tselected_for_detail = this.model.get('selected_for_detail') || false, // Et encore une fois\n\t\t// \t\tid = this.model.get('id'),\n\t\t// \t\tcurrent_mode_selection_state = this.model.get('selected_for_'+this.selected_for) || false;\n\n\n\t\t// console.log('selected for compare',selected_for_compare)\n\t\t// console.log('active selected',active_selected)\n\n\t\tthis.$el.find('.drawer-list-outer').toggleClass('active', state);\n\t\tthis.$el.find('.inputs-container input').prop('checked', state);\n\n\n\t\t// TODO, maybe some replacement stuff now that we don't have pourover\n\t\t// Persist selected state onto pourover model\n\t\t// var po_model = _.findWhere(collections.po.article_summaries.items, {id: id});\n\t\t// po_model.selected_for_compare = selected_for_compare;\n\t\t// po_model.selected_for_detail = selected_for_detail;\n\t\t// po_model.active_selected = current_mode_selection_state;\n\n\t\treturn this;\n\t},\n\n\t// TODO, maybe make these smaller to only show part of the name or not show the name at all\n\taddTags: function(){\n\t\tvar subject_tags_full_unique = _.uniq(this.model.get('subject_tags_full'), function(tag){\n\t\t\t\t\treturn tag.id;\n\t\t\t\t}),\n\t\t\t\timpact_tags_full_unique  = _.uniq(this.model.get('impact_tags_full'), function(tag){\n\t\t\t\t\treturn tag.id;\n\t\t\t\t});\n\n\t\tif (subject_tags_full_unique.length) {\n\t\t\tthis.$subjectTagsContainer.html('<span class=\"tag-list-title\">Subj:</span>')\n\t\t\tsubject_tags_full_unique.forEach(function(subjectTag){\n\t\t\t\tvar tag_model  = new models.subject_tag.Model(subjectTag);\n\t\t\t\tvar tag_view = new views.ArticleSummaryDrawerSubjectTag({model:tag_model}),\n\t\t\t\t\t\ttag_markup = tag_view.render().el;\n\n\t\t\t\tthis._subviews.push(tag_view);\n\n\t\t\t\tthis.$subjectTagsContainer.append(tag_markup);\n\t\t\t}, this);\n\t\t}\n\n\n\t\t// TODO, maybe make this view into a generic tag view or make a separate more specific impact view that shows level and category\n\t\tif (impact_tags_full_unique.length) {\n\t\t\tthis.$impactTagsContainer.html('<span class=\"tag-list-title\">Imp:</span>')\n\t\t\timpact_tags_full_unique.forEach(function(impactTag){\n\t\t\t\tvar tag_model  = new models.subject_tag.Model(impactTag);\n\t\t\t\tvar tag_view = new views.ArticleSummaryDrawerImpactTag({model:tag_model}),\n\t\t\t\t\t\ttag_markup = tag_view.render().el;\n\n\t\t\t\tthis._subviews.push(tag_view);\n\t\t\t\tthis.$impactTagsContainer.append(tag_markup);\n\t\t\t}, this);\n\t\t}\n\n\n\t},\n\n\tdestroy: function(model){\n\t\tthis.killView();\n\t}\n\n});","views.ArticleSummaryDrawerImpactTag = views.AA_BaseTag.extend({\n\n\ttagName: 'li',\n\n\tclassName: 'tag',\n\n\tinitialize: function(){\n\t\t// Set colors\n\t\tthis.styleLayoutWithTooltip();\n\t\t// TODO, investigate whther this ever gets desroyed\n\t\tthis.listenTo(this.model, 'change:destroy', this.destroyView);\n\t\treturn this;\n\t},\n\n\trender: function(){\n\t\tvar tag_data = _.extend(this.model.toJSON(), helpers.templates);\n\t\tvar tag_markup = templates.articleDetailTagFactory(tag_data);\n\n\t\tthis.$el.html(tag_markup);\n\t\t// The only real distinction between this and the subject tag version\n\t\t// Set its border left and bg color to the appropriate color value in its data\n\t\treturn this;\n\t},\n\n\t// styleLayout: function(){\n\t// \tvar bg_color = this.getColor(),\n\t// \t\t\ttext_color = this.whiteOrBlack(bg_color),\n\t// \t\t\tbg_color_darker = this.getBorderColor();\n\n\t// \t// this.$el.css({'background-color': bg_color, 'color': text_color, 'border-color': bg_color_darker});\n\t// \tthis.$el.css({'background-color': bg_color, 'color': text_color, 'border': '1px solid' + bg_color_darker});\n\n\t// \tvar tooltip_text = this.getLabel();\n\t// \tthis.$el.addClass('tooltipped').attr('aria-label', tooltip_text);\n\n\t// \treturn this;\n\t// },\n\n\t// getLabel: function(){\n\t// \tvar category = this.model.get('category'),\n\t// \t\t\tlevel = helpers.templates.prettyName(this.model.get('level')),\n\t// \t\t\ttooltip_text = level + ' ' + category;\n\n\t// \treturn tooltip_text;\n\t// },\n\n\t// destroyView: function(model, destroyMode){\n\t// \tif (destroyMode){\n\t// \t\tthis.killView();\n\t// \t\tthis.model.set({destroy: false}, {silent: true});\n\t// \t}\n\t// }\n\n});","views.ArticleSummaryDrawerSubjectTag = views.AA_BaseTag.extend({\n\n\ttagName: 'li',\n\n\tclassName: 'tag',\n\n\tinitialize: function(){\n\t\t// Set colors\n\t\tthis.styleLayout();\n\t\treturn this;\n\t},\n\n\trender: function(){\n\t\tvar tag_data = _.extend(this.model.toJSON(), helpers.templates);\n\t\tvar tag_markup = templates.articleDetailTagFactory(tag_data);\n\t\tthis.$el.html(tag_markup);\n\t\t// Set its border left and bg color to the appropriate color value in its data\n\t\treturn this;\n\t}\n\n\t// styleLayout: function(){\n\t// \tvar bg_color = this.model.get('color'),\n\t// \t\t\ttext_color = this.whiteOrBlack(bg_color),\n\t// \t\t\tbg_color_darker = this.colorLuminance(bg_color, -.25);\n\n\t// \t// this.$el.css({'background-color': bg_color, 'color': text_color});\n\t// \tthis.$el.css({'background-color': bg_color, 'color': text_color, 'border': '1px solid' + bg_color_darker});\n\n\t// \treturn this;\n\t// }\n});","views.ArticleSummaryRow = Backbone.View.extend({\n\n\ttagName: 'div',\n\n\tclassName: 'article-detail-row-wrapper',\n\n\tevents: {\n\t\t'click .destroy': 'removeRow'\n\t},\n\n\tinitialize: function(){\n\t\tthis.listenTo(this.model, 'removeFromComparison', this.destroy);\n\t\tthis.listenTo(this.model, 'redrawMarker', this.redrawMarker);\n\n\t\t// Store how we're calculating the marker \n\t\tthis.calcComparisonMarkerParams();\n\t},\n\n\trender: function() {\n\t\tvar $el = this.$el,\n\t\t\t\tmodel_json = this.model.toJSON(),\n\t\t\t\tdata_for_template = _.extend(\n\t\t\t\t\t{\n\t\t\t\t\t\tselects: this.collection.getSelectDimensions(),\n\t\t\t\t\t\tcalcSize: this.calcSize,\n\t\t\t\t\t\tcomparisonOperation: this.comparison_marker_operation,\n\t\t\t\t\t\tcomparisonMax: this.comparison_marker_max,\n\t\t\t\t\t\tcomparisonGroup: this.comparison_marker_group\n\t\t\t\t\t}, \n\t\t\t\t\tmodel_json, \n\t\t\t\t\thelpers.templates.articles);\n\n\n\t\tvar article_detail_markup = templates.articleSummaryRowFactory( data_for_template ),\n\t\t\t\tsubject_tags_str = '',\n\t\t\t\timpact_tags_count = 0; // For now these are separate, which seems to make the most sense. You sort subject matter categorically and impact by number\n\n\n\t\tthis.$el.html(article_detail_markup);\n\n\t\t// Add our selects for \n\t\tthis.$el.attr('data-title', model_json.title)\n\t\t\t\t\t\t.attr('data-created', model_json.created);\n\n\t\t// Add a whole bunch of quant attributes dynamically\n\t\t_.each(model_json.metrics, function(val, key){\n\t\t\t$el.attr('data-'+key, val);\n\t\t});\n\n\t\t// Add all names for our tags, these should already be in alphabetical order from the hydration process\n\t\tif (model_json.subject_tags_full) { \n\t\t\tsubject_tags_str = _.pluck(model_json.subject_tags_full, 'name').join('');\n\t\t} \n\t\t$el.attr('data-subject_tags', subject_tags_str);\n\n\n\t\t// Do the same for impact tags\n\t\tif (model_json.impact_tags_full) { \n\t\t\timpact_tags_count = model_json.impact_tags_full.length\n\t\t} \n\n\t\t$el.attr('data-impact_tags', impact_tags_count);\n\n\t\tthis.model_json = model_json;\n\t\tthis.bullet_markers = d3.select(this.el).selectAll('.marker');\n\n\t\treturn this;\n\t},\n\n\tcalcComparisonMarkerParams: function(){\n\t\tthis.comparison_marker_operation \t= collections.article_comparisons.instance.metadata('operation'); // mean\n\t\tthis.comparison_marker_group \t\t\t= collections.article_comparisons.instance.metadata('group'); // all\n\t\tthis.comparison_marker_max \t\t\t\t= collections.article_comparisons.instance.metadata('max'); // per_97_5\n\t\treturn this;\n\t},\n\n\tredrawMarker: function(){\n\t\tthis.calcComparisonMarkerParams();\n\n\t\tvar that = this;\n\t\tvar markers = this.bullet_markers\n\t\t\t.style('left', function(){\n\t\t\t\tvar d3_el = d3.select(this),\n\t\t\t\t\t\tmetric_name = d3_el.attr('data-metric-name');\n\t\t\t\treturn that.calcSize.call(that, metric_name, that.comparison_marker_operation, that.comparison_marker_max, that.comparison_marker_group);\n\t\t\t});\n\n\t},\n\n\tremoveRow: function(){\n\t\tcollections.article_comparisons.instance.remove(this.model);\n\t\tapp.instance.saveHash();\n\t\treturn this;\n\t},\n\n\tdestroy: function(model, destroyMode){\n\t// if (destroyMode == 'delete') {\n\t\tif (app.instance.$isotopeCntnr) { \n\t\t\tapp.instance.$isotopeCntnr.isotope( 'remove', this.$el ).isotope('layout'); \n\t\t} else { \n\t\t\t// this.killView();\n\t\t\t// this.remove(); \n\t\t}\n\t\tthis.killView();\n\n\t\treturn this;\n\t},\n\n\t// helpers: {\n\t\tcalcSize: function(metric, val, max, group){\n\t\t\t/** Metric options: per97_5, per75, median, per25, per2_5, per5, per95, mean **/\n\t\t\tgroup = group || this.comparison_marker_group;\n\t\t\tmax = max || this.comparison_marker_max;\n\n\t\t\t// For every category but all, this is nested under another key. so if it's a subject tag, it will be under `subject_tags.<id>`\n\t\t\t// TODO, this needs to be built out more to allow for other comparisons\n\t\t\tvar comparison_object;\n\t\t\tif (group == 'all'){\n\t\t\t\tcomparison_object = models.comparison_metrics.get(group);\n\t\t\t} else {\n\t\t\t\tcomparison_object = models.comparison_metrics.get('subject_tags')[group];\n\t\t\t}\n\n\n\t\t\tvar this_metrics_info = _.findWhere(comparison_object, {metric: metric}),\n\t\t\t\t\tmax,\n\t\t\t\t\tscale,\n\t\t\t\t\tval_percent;\n\n\t\t\tif (this_metrics_info){\n\t\t\t\tmax = this_metrics_info[max];\n\n\t\t\t\tscale = d3.scale.linear()\n\t\t\t\t\t\t\t\t\t\t.domain([0, max])\n\t\t\t\t\t\t\t\t\t\t.range([0, 100]);\n\n\t\t\t\tif (typeof val == 'string') {\n\t\t\t\t\tval = this_metrics_info[val];\n\t\t\t\t\tif (!val){\n\t\t\t\t\t\tconsole.log('ERROR: Missing max comparison value for group', group, 'and metric', metric, 'in field', val);\n\t\t\t\t\t\tval = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tval_percent = Math.round(scale(val)).toString() + '%';\n\t\t\t\t\n\t\t\t}else{\n\t\t\t\tconsole.log('ERROR: Missing comparison values for group', group, 'and metric', metric);\n\t\t\t\tval_percent = '0%';\n\t\t\t}\n\t\t\treturn val_percent;\n\t\t}\n\t// }\n\n});\n","views.DateRangeSearcher = Backbone.View.extend({\n\n\tevents: {\n\t\t'click .clear': 'clearDateRange'\n\t},\n\n\tpikaday_options: {\n\t\t// clearInvalidInput: true,\n\t\t\ttimezone: pageData.timezone,\n\t\t// onClear: function(){\n\t\t// \t// Always clear our filter selection invalid date aka date deleted\n\t\t// \t// I feel this is nice because then if you have an invalid date, you're not still filtering by some date range selection that you can no longer see\n\t\t// \tcollections.po.article_summaries.filters.timestamp.clearQuery();\n\t\t// \t// Clear the min and max dates, it would be nice of `picker.clearDate()` did this;\n\t\t// \t// https://github.com/dbushell/Pikaday/pull/134\n\t\t// \tthis.setMinDate();\n\t\t// \tthis.setMaxDate();\n\t\t// }\n\t},\n\n\tinitialize: function(){\n\t\t// Clear these form values, these might be left over if the page was refreshed and the browser is doing something fancy\n\t\tvar $els = this.$el.find('input');\n\t\t$els.val('');\n\n\t\tthis.$clearDateRange = this.$el.find('.clear');\n\n\t\t// Make the two input boxes Pikaday intances\n\t\t// These have some slightly different behavior in their `onSelect` callback regarding max and min date setting so make them separate objects\n\t\tvar that = this;\n\n\t\tvar $start_el = this.$el.find('input[data-dir=\"after\"]');\n\t\tvar $end_el   = this.$el.find('input[data-dir=\"before\"]');\n\t\t\n\t\tvar start_opts = {\n\t\t\tfield: $start_el[0],\n\t\t\tonSelect: function() {\n\t\t\t\tvar date_obj = this.getDate();\n\n\t\t\t\tvar moment_timezone_date = this.getMoment(),\n\t\t\t\t\t\tpretty_date_string = moment_timezone_date.format(helpers.templates.prettyDateTimeFormat); // June 23, 2014, 9:13 am\n\n\t\t\t\t// On min date selection, set the max date for the end\n\t\t\t\tthat.picker_end.setMinDate(date_obj);\n\n\t\t\t\t// Change the viewing range to the start date\n\t\t\t\tif (!that.picker_end.getDate()){\n\t\t\t\t  that.picker_end.gotoDate(date_obj);\n\t\t\t\t}\n\n\t\t\t\t$start_el.val(pretty_date_string)\n\n\t\t\t},\n\t\t\tonClose: function(){\n\t\t\t\tif (!$start_el.val()){\n\t\t\t\t\tthat.picker_end.setMinDate();\n\t\t\t\t\tthis._d = '';\n\t\t\t\t}\n\t\t\t\tthat.filterByDate.call(that);\n\t\t\t}\n\t\t};\n\t\tvar end_opts = {\n\t\t\t\tfield: $end_el[0],\n\t\t\t\tonSelect: function() {\n\t\t\t\t\tvar date_obj = this.getDate();\n\n\t\t\t\t\tvar moment_timezone_date = this.getMoment(),\n\t\t\t\t\t\t\tpretty_date_string = moment_timezone_date.format(helpers.templates.prettyDateTimeFormat); // June 23, 2014, 9:13 am\n\n\t\t\t\t\t// On min date selection, set the max date for the end\n\t\t\t\t\tthat.picker_start.setMaxDate(date_obj);\n\n\t\t\t\t\t$end_el.val(pretty_date_string);\n\n\t\t\t\t},\n\t\t\t\tonClose: function(){\n\t\t\t\t\tif (!$end_el.val()){\n\t\t\t\t\t\tthat.picker_start.setMaxDate();\n\t\t\t\t\t\tthis._d = '';\n\t\t\t\t\t}\n\t\t\t\t\tthat.filterByDate.call(that);\n\t\t\t\t}\n\t\t\t};\n\t\t// Add our options\n\t\t_.extend(start_opts, this.pikaday_options);\n\t\t_.extend(end_opts, this.pikaday_options);\n\t\tthis.picker_start = new Pikaday( start_opts );\n\t\tthis.picker_end = new Pikaday( end_opts );\n\n\t\t// this.$start_el = $start_el;\n\t\t// this.$end_el = $end_el;\n\t\tthis.$els = $els\n\t},\n\n\tclearDateRange: function(e){\n\t\tthis.picker_start._d = '';\n\t\tthis.picker_end._d = '';\n\t\tthis.$els.val('');\n\t\t$(e.currentTarget).css('visibility', 'hidden');\n\t\tthis.filterByDate();\n\t},\n\n\tassembleValidDates: function(){\n\t\t// Make sure both of them have dates\n\t\t// This also checks against them being strings and other nonsense\n\t\treturn [this.picker_start, this.picker_end].map(function(picker, index){\n\t\t\tvar name = (index ? 'created_before' : 'created_after'),\n\t\t\t    date = picker.getDate();\n\t\t\tif (date) { \n\t\t\t\tdate = picker.getMoment().format();\n\t\t\t}\n\t\t\treturn {name: name, value: date};\n\t\t});\n\t},\n\n\tfilterByDate: function(){\n\t\tvar dates = this.assembleValidDates(),\n\t\t\t\tstart_timestamp,\n\t\t\t\tend_timestamp;\n\n\t\t// Setting or unsetting these values will trigger a change event which will construct filter parameters to the URl\n\t\tdates.forEach(function(dateInfo){\n\t\t\tif (dateInfo.value){\n\t\t\t\tmodels.content_item_filters.set(dateInfo.name, dateInfo.value);\n\t\t\t\t// // If we have at least one date set, then we'll be showing the clear button\n\t\t\t\tthis.$clearDateRange.css('visibility','visible');\n\t\t\t} else {\n\t\t\t\tmodels.content_item_filters.unset(dateInfo.name, dateInfo.value);\n\t\t\t}\n\t\t}, this);\n\t\t// Do this manually do avoid double calls\n\t\tmodels.content_item_filters.trigger('filter');\n\t}\n\n});","views.DivisionSwitcher = Backbone.View.extend({\n\n\tevents: {\n\t\t'click li': 'setMode'\n\t},\n\tinitialize: function(){\n\t\t// Update the button active state and the hash\n\t\tthis.listenTo(this.model, 'change:mode', this.updateActiveState);\n\t\tthis.updateActiveState();\n\t},\n\n\tsetMode: function(e){\n\t\t// Only set it if it's different, i.e. doesn't have an `active` class\n\t\t// This doesn't make that much of a difference because we listen for change events\n\t\t// But it's still nice\n\t\tvar $el = $(e.currentTarget);\n\t\tif (!$el.hasClass('active')){\n\t\t\tvar mode = $el.attr('data-mode');\n\t\t\tthis.model.set('mode', mode);\n\t\t}\n\t\treturn this;\n\t},\n\n\tupdateActiveState: function(model, mode){\n\t\t// Put a data attribute on the drawer for css purposes in the article view\n\t\t// This lets you have a different hover style when you hover over a checkbox article summary so you know you can do something to it\n\t\t$('#drawer').attr('data-mode', mode);\n\t\t$('#content').attr('data-mode', mode);\n\t\t// Set the active state on the li\n\t\tthis.$el.find('li').removeClass('active');\n\t\tthis.$el.find('li[data-mode=\"'+mode+'\"]').addClass('active');\n\n\t\treturn this;\n\t}\n});","views.EventCreator = views.AA_BaseForm.extend({\n\n\tevents: _.extend({\n\t\t'submit form': 'saveModal' // All other forms are filled out by their parent view, but the parent view is the `articleDetail` and that is already cluttered\n\t}, views.AA_BaseForm.prototype.events),\n\n\tinitialize: function(options){\n\t\t// Save a fresh copy under `schema`, only perform a shallow clone since we won't be modifying its children\n\t\tvar event_creator_schema = _.clone(pageData.eventCreatorSchema);\n\n\t\t// Store this on the schema with this article's information on the view\n\t\t// We will re-render the view on form submit, rendering makes a copy of these initial settings\n\t\tthis.full_info = {\n\t\t\tschema: event_creator_schema,\n\t\t\tvals: options.model\n\t\t};\n\n\t\t// Prep the area by creating the modal markup\n\t\tif (!options.disableModal){\n\t\t\tthis.bakeModal('Create an event');\n\t\t} else {\n\t\t\tthis.$form = this.$el.find('form')\n\t\t}\n\n\t\tthis.saveMsg = options.saveMsg || '';\n\n\t\t// Bake the modal container and form elements\n\t\tthis.render();\n\t\t// Init the title searcher and pikaday\n\t\tthis.postRender({search: true, pikaday: true});\n\n\t},\n\n\trefresh: function(){\n\t\tthis.silenceAllSubviews();\n\n\t\t// Bake the modal container and form elements\n\t\tthis.render();\n\t\t// Init the title searcher and pikaday\n\t\tthis.postRender({search: true, pikaday: true});\n\n\t\t// Clear submit message\n\t\tthis.flashSubmitMsg(false, this.saveMsg);\n\n\t\treturn this;\n\n\t},\n\n\trender: function(){\n\n\n\t\tvar markup = '',\n\t\t\t\tfull_info = this.full_info;\n\n\t\t// Bake the initial form data\n\t\t_.each(full_info.schema, function(fieldData, fieldName){\n\t\t\tmarkup += this.bakeFormInputRow.call(this, fieldName, fieldData, false, full_info.vals[fieldName]);\n\t\t}, this);\n\n\t\tmarkup += this.bakeButtons();\n\n\t\tthis.$form.html(markup);\n\n\t\treturn this;\n\t},\n\n\tsaveModal: function(e){\n\t\te.preventDefault();\n\n\t\tvar self = this;\n\n\t\tvar form_data = this.getSettings();\n\n\t\tthis.validateNew(this.full_info.schema, form_data, function(err, msg){\n\t\t\tif (!err){\n\t\t\t\tself.toggleBtnsDisabled();\n\t\t\t\tself.printMsgOnSubmit(false, '');\n\t\t\t\t// Instead of a save, this should be a create\n\t\t\t\tthis.collection.create(form_data, {\n\t\t\t\t\twait: true,\n\t\t\t\t\terror: function(model, response, options){\n\t\t\t\t\t\tconsole.log('Server error on event edit', response);\n\n\t\t\t\t\t\tself.toggleBtnsDisabled();\n\t\t\t\t\t\tself.printMsgOnSubmit(true, 'Error '+response.status+': ' + response.responseText.replace(/\\n/g, '<br/><br/>'));\n\t\t\t\t\t},\n\t\t\t\t\tsuccess: function(model, response, options){\n\t\t\t\t\t\t// Re-render view with updates to this model\n\t\t\t\t\t\tconsole.log(response)\n\t\t\t\t\t\t// TODO, flash a success message\n\n\t\t\t\t\t\t// Close the modal\n\t\t\t\t\t\tself.toggleModal(e);\n\t\t\t\t\t\tself.refresh();\n\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t} else {\n\t\t\t\tself.printMsgOnSubmit(err, msg);\n\t\t\t}\n\n\t\t}, this);\n\n\t\treturn this;\n\n\t},\n\n\ttoggleBtnsDisabled: function(){\n\t\tthis.$form.find('.buttons-container').toggleClass('disabled');\n\t},\n\n\tflashSubmitMsg: function(error, msg){\n\t\tvar class_name = 'success';\n\t\tif (error) class_name = 'fail';\n\t\tthis.$submitMsgText.removeClass('success').removeClass('fail');\n\t\t// Fade out message, then make sure it's visible for the next time\n\t\tthis.$submitMsgText.addClass(class_name).html(msg).delay(7000).fadeOut(500).delay(750)\n           .queue(function(next) { \n           \t$(this).html('').removeClass(class_name).show();\n           \tnext(); \n           })\n\t},\n});","views.EventCreatorFromAlert = views.AA_BaseForm.extend({\n\n\t// events: _.extend({\n\t// }, views.AA_BaseForm.prototype.events),\n\n\t// assignmentTemplateFactory: _.template('<div class=\"article-assignee\"><span class=\"remove-assignee labelled\" aria-label=\"<%= title %>\" >&times;</span><input type=\"hidden\" name=\"content_items[]:object\" value=\\'{\"id\": <%= id %>, \"title\": \"<%= title %>\"}\\' /></div>'),\n\n\tinitialize: function(options){\n\t\t// First perform a deep copy of our existing `pageData.eventCreatorSchema` so we don't mess anything up\n\t\tvar event_creator_schema = $.extend(true, {}, pageData.eventCreatorSchema);\n\t\tvar required_keys = [];\n\t\t// Only some of the values on object are editable in the form\n\t\tvar model = options.model;\n\t\tvar alert_options = {\n\t\t\tcreated: model.created,\n\t\t\turl: model.url,\n\t\t\timg_url: model.img_url,\n\t\t\tcontent_items: model.content_items,\n\t\t\ttitle: model.title,\n\t\t\tdescription: model.description,\n\t\t\ttag_ids: model.tag_ids\n\t\t};\n\n\t\t// Add default values to the schema under the `selected` property\n\t\tvar event_creator_schema_with_values = this.combineFormSchemaWithVals(event_creator_schema, alert_options);\n\n\t\t// Set our list of required keys\n\t\t_.each(event_creator_schema_with_values, function(val, key){\n\t\t\tif (val.required){\n\t\t\t\trequired_keys.push(key);\n\t\t\t}\n\t\t});\n\n\t\t// // Store this on the schema with this article's information on the view\n\t\t// // We will re-render the view on form submit, rendering makes a copy of these initial settings\n\t\tthis.form_schema = event_creator_schema_with_values;\n\t\tthis.full_schema = event_creator_schema_with_values;\n\t\tthis.required_keys = required_keys;\n\n\t\t// Prep the area by creating the modal markup\n\t\tthis.bakeModal('Create an event');\n\n\t\t// Bake the modal container and form elements\n\t\tthis.render();\n\t\t// Init the title searcher and pikaday\n\t\tthis.postRender({search: true, pikaday: true});\n\t},\n\n\trender: function(){\n\t\tvar markup = '',\n\t\t\t\tform_schema = $.extend(true, {}, this.form_schema);\n\n\t\t// Bake the initial form data\n\t\t_.each(form_schema, function(fieldData, fieldName){\n\t\t\tmarkup += this.bakeFormInputRow.call(this, fieldName, fieldData);\n\t\t}, this);\n\n\t\tmarkup += this.bakeButtons();\n\n\t\tthis.$form.html(markup);\n\n\t\treturn this;\n\t}\n\n});","views.EventEditor = views.AA_BaseForm.extend({\n\n\tevents: _.extend({\n\t\t// 'submit form': 'saveModal'\n\t}, views.AA_BaseForm.prototype.events),\n\n\tinitialize: function(options){\n\t\t// Add the passed in options\n\t\t// _.extend(this, _.pick(options, 'assignee'));\n\t\t// First perform a deep copy of our existing `pageData.eventCreatorSchema` so we don't mess anything up\n\t\t// Save a fresh copy under `schema`\n\t\tvar event_creator_schema = _.clone(pageData.eventCreatorSchema);\n\t\t// Don't allow for a change in assignment\n\t\tdelete event_creator_schema.content_items;\n\n\t\t// Store this on the schema with this article's information on the view\n\t\t// We will re-render the view on form submit, rendering makes a copy of these initial settings\n\t\tthis.full_info = {\n\t\t\tschema: event_creator_schema,\n\t\t\tvals: options.model\n\t\t};\n\n\t\t// Prep the area by creating the modal markup\n\t\tthis.bakeModal('Edit this event');\n\n\t\t// Bake the modal container and form elements\n\t\tthis.render();\n\t\t// Init the title searcher and pikaday\n\t\tthis.postRender({search: false, pikaday: true});\n\t},\n\n\trender: function(){\n\t\tvar markup = '',\n\t\t\t\tfull_info = this.full_info;\n\n\t\t// Bake the initial form data\n\t\t_.each(full_info.schema, function(fieldData, fieldName){\n\t\t\tmarkup += this.bakeFormInputRow.call(this, fieldName, fieldData, false, full_info.vals[fieldName]);\n\t\t}, this);\n\n\t\tmarkup += this.bakeButtons(true); // `true` to bake delete button\n\n\t\tthis.$form.html(markup);\n\n\t\treturn this;\n\t}\n\n\n});","views.RecipeCreator = views.AA_BaseRecipe.extend({\n\n\tevents: _.extend({\n\t\t// 'submit form': 'createRecipe',\n\t}, views.AA_BaseRecipe.prototype.events),\n\n\tinitialize: function(opts){\n\t\tvar sous_chef = opts.sousChef,\n\t\t\t\trecipe_info = this.separateSchemaFromEvent(sous_chef.options),\n\t\t\t\trecipe_schema = recipe_info.settingsInfo,\n\t\t\t\tset_event_schema = recipe_info.eventInfo,\n\t\t\t\tsous_chef_name = sous_chef.slug,\n\t\t\t\trequired_keys = [];\n\n\t\t// Cache CSS selectors\n\t\tthis.$form = this.$el.find('form');\n\t\tthis.$defaultEvents = this.$el.find('.default-event-container');\n\n\t\t// Add the sous_chef name as a hidden field\n\t\trecipe_schema.sous_chef = {\n\t\t\tinput_type: 'hidden',\n\t\t\tselected: sous_chef_name,\n\t\t\trequired: true\n\t\t};\n\n\t\t// Delete tag_ids since we got that covered in the default event\n\t\tdelete recipe_schema.tag_ids\n\n\t\t// Set the defaults on this object to the selected val\n\t\t// And exract a list of required keys\n\t\t_.each(recipe_schema, function(val, key){\n\t\t\tif (val.default){\n\t\t\t\tval.selected = val.default;\n\t\t\t}\n\t\t\tif (val.required){\n\t\t\t\trequired_keys.push(key);\n\t\t\t}\n\t\t});\n\n\t\t// Save the values we'll use throughout the view\n\t\tthis.form_schema = recipe_schema;\n\t\tthis.event_schema = set_event_schema;\n\t\tthis.full_schema = $.extend(true, {}, recipe_schema, set_event_schema);\n\t\tthis.required_keys = required_keys;\n\n\t\t// Bake the modal container and form elements\n\t\tthis.render();\n\t\t// Init the title searcher, set the article searcher assigne mode to set event\n\t\tthis.postRender({search: true});\n\t\tthis.updateScheduleByLayout('minutes');\n\n\t\treturn this;\n\t},\n\n\trender: function(){\n\t\tvar markup = '',\n\t\t\t\trecipe_schema = this.form_schema,\n\t\t\t\tdefault_event_markup\n\n\t\t// Bake the initial form data\n\t\t_.each(recipe_schema, function(fieldData, fieldName){\n\t\t\tmarkup += this.bakeFormInputRow.call(this, fieldName, fieldData);\n\t\t}, this);\n\n\t\tthis.$form.prepend(markup);\n\n\t\tvar default_event_markup = this.renderDefaultEvent();\n\n\t\tthis.$defaultEvents.html(default_event_markup);\n\n\t\treturn this;\n\t},\n\n\trenderDefaultEvent: function(){\n\t\tvar markup = '',\n\t\t\t\tset_event_schema = this.event_schema;\n\n\t\t// Bake the initial form data\n\t\t_.each(set_event_schema, function(fieldData, fieldName){\n\t\t\tmarkup += this.bakeFormInputRow.call(this, fieldName, fieldData, true);\n\t\t}, this);\n\n\t\treturn markup\n\t}\n\n\n});","views.RecipeDrawer = Backbone.View.extend({\n\n\ttagName: 'li',\n\n\tclassName: 'drawer-list-item',\n\n\tevents: {\n\t\t'click .drawer-list-outer:not(active)': 'filter',\n\t\t'click .settings-switch': 'toggleModal',\n\t\t'click .toggle-default-event': 'toggleDefaults',\n\t\t'submit form': 'saveModal',\n\t\t'click .destroy': 'destroyModel'\n\t},\n\n\tinitialize: function(){\n\t\tthis._subviews = [];\n\t\t\n\t\t// // TODO temporary until this is added as a key on all recipes\n\t\t// this.model.set('set_default_event', this.model.hasDefaultEvent());\n\n\t\tthis.listenTo(this.model, 'filter', this.filter);\n\t\tthis.listenTo(this.model, 'change:viewing', this.setActiveCssState);\n\t\tthis.listenTo(this.model, 'change:enabled', this.renderEnabled);\n\t\tthis.listenTo(this.model, 'change:set_default_event', this.showHideDefaults);\n\n\t\treturn this;\n\t},\n\n\trender: function(){\n\n\t\tthis.silenceAllSubviews();\n\n\t\tvar drawer_list_item_markup = templates.recipeFactory( _.extend(this.model.toJSON(), helpers.templates) );\n\n\t\tthis.$el.html(drawer_list_item_markup);\n\t\tthis.$form = this.$el.find('form');\n\n\t\tthis.$defaultEvents = this.$el.find('.default-event-container');\n\t\tthis.$defautEventsBtn = this.$el.find('.toggle-default-event');\n\t\tthis.$submitMsg = this.$el.find('.submit-msg');\n\n\t\tthis.postRender();\n\t\treturn this;\n\t},\n\n\tpostRender: function(){\n\t\tthis.bakeRecipeEditor();\n\t},\n\n\tbakeRecipeEditor: function(){\n\t\tvar recipe_editor_view = new views.RecipeEditor({el: this.el, model: this.model.toJSON()})\n\t\tthis._subviews.push(recipe_editor_view);\n\n\t\tthis.$el.append(recipe_editor_view.el);\n\t\tthis.recipe_editor_view = recipe_editor_view;\n\n\t\treturn this;\n\t},\n\n\tfilter: function(){\n\t\tvar that = this,\n\t\t\t\trecipe_id = this.model.id;\n\n\t\tapp.instance.content.setActiveAlertsPerRecipe.call(app.instance, recipe_id);\n\t\tapp.instance.show_all_view.deactivate();\n\t\tthis.model.set('viewing', true);\n\t\t// Set the hash\n\t\trouting.router.navigate('my-recipes/'+recipe_id);\n\n\t\treturn this;\n\n\t},\n\n\t// renderEnabled: function(model, enabled){\n\t// \tthis.$el.find('.enable-switch')\n\t// \t\t\t\t\t.attr('data-enabled', enabled)\n\t// \t\t\t\t\t.html(helpers.templates.formatEnabled(enabled));\n\n\t// \treturn this;\n\t// },\n\n\ttoggleModal: function(e){\n\t\tthis.killEvent(e);\n\t\tviews.helpers.toggleModal(e);\n\n\t\treturn this;\n\t},\n\n\tsaveModal: function(e){\n\t\te.preventDefault();\n\n\t\tvar that = this;\n\n\t\tvar recipe_editor_view = this.recipe_editor_view,\n\t\t    set_default_event = this.model.get('set_default_event'),\n\t\t    form_data = recipe_editor_view.getSettings(set_default_event);\n\n\t\tvar required_keys = recipe_editor_view.required_keys;\n\n\t\tthis.recipe_editor_view.validate(required_keys, form_data, function(err, msg){\n\t\t\tif (!err){\n\t\t\t\tthat.model.save(form_data, {\n\t\t\t\t\terror: function(model, response, options){\n\t\t\t\t\t\tconsole.log('Server error on recipe edit', response);\n\t\t\t\t\t\tvar err = response.responseJSON;\n\t\t\t\t\t\t// TODO, test\n\t\t\t\t\t\trecipe_editor_view.printMsgOnSubmit(true, 'Error '+err.status+': ' + err.message.replace(/\\n/g, '<br/><br/>'));\n\t\t\t\t\t},\n\t\t\t\t\tsuccess: function(model, response, options){\n\t\t\t\t\t\t// Re-render view with updates to this model\n\n\t\t\t\t\t\tthat.render();\n\t\t\t\t\t\t// Clear submit message\n\t\t\t\t\t\trecipe_editor_view.printMsgOnSubmit(false, '');\n\t\t\t\t\t\t// Close the modal\n\t\t\t\t\t\tthat.toggleModal(e);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\trecipe_editor_view.printMsgOnSubmit(err, msg);\n\t\t\t}\n\n\t\t}, this);\n\n\t\treturn this;\n\n\t},\n\n\tdestroyModel: function(e){\n\t\tvar that = this;\n\t\tthis.model.destroy({\n\t\t\tsuccess: function(model, response, options){\n\t\t\t\t// console.log('recipe destroyed', response);\n\t\t\t\t// TODO, fancier animation on success\n\t\t\t\tthat.toggleModal(e);\n\t\t\t\tthat.$el.remove();\n\t\t\t},\n\t\t\terror: function(model, response, options){\n\t\t\t\tconsole.log('error in model destroy', response)\n\t\t\t\talert('Your destroy did not work. Please try again. Check the console for errors.')\n\t\t\t}\n\t\t});\n\n\t\treturn this;\n\t},\n\n\t// toggleEnabled: function(e){\n\t// \tthis.killEvent(e);\n\t// \tthis.model.set('enabled', !this.model.get('enabled'));\n\t// },\n\n\tkillEvent: function(e){\n\t\te.stopPropagation();\n\t},\n\n\tsetActiveCssState: function(model, viewing){\n\n\t\tthis.$el.find('.drawer-list-outer').toggleClass('active', viewing);\n\t\tthis.$el.find('.inputs-container input').prop('checked', viewing);\n\n\t\treturn this;\n\t},\n\n\ttoggleDefaults: function(){\n\t\tthis.model.set('set_default_event', !this.model.get('set_default_event') )\n\t},\n\n\tshowHideDefaults: function(model, open){\n\t\tvar slide_duration = 350;\n\t\tif (open){\n\t\t\tthis.$defautEventsBtn.html('Enabled').attr('data-status', 'true');\n\t\t\tthis.$defaultEvents.slideDown(slide_duration, 'easeOutQuint');\n\t\t} else {\n\t\t\tthis.$defautEventsBtn.html('Disabled').attr('data-status', 'false');\n\t\t\tthis.$defaultEvents.slideUp(slide_duration, 'easeOutQuint');\n\t\t}\n\t}\n\n\n});","views.RecipeDrawerStatic = Backbone.View.extend({\n\n\ttagName: 'li',\n\n\tclassName: 'drawer-list-item',\n\n\tevents: {\n\t\t'click .drawer-list-outer:not(active)': 'filter',\n\t},\n\n\tinitialize: function(){\n\t\tthis._subviews = [];\n\n\t\tthis.listenTo(this.model, 'filter', this.filter);\n\t\tthis.listenTo(this.model, 'change:viewing', this.setActiveCssState);\n\t\tthis.listenTo(this.model, 'change:enabled', this.renderEnabled);\n\n\t\treturn this;\n\t},\n\n\trender: function(){\n\t\tif (this._time_picker){\n\t\t\tthis._time_picker.destroy();\n\t\t}\n\n\t\tvar drawer_list_item_markup = templates.recipeStaticFactory( _.extend(this.model.toJSON(), helpers.templates) );\n\t\tthis.$el.html(drawer_list_item_markup);\n\t\tthis.$form = this.$el.find('form');\n\n\t\treturn this;\n\t},\n\n\tfilter: function(){\n\t\tvar that = this,\n\t\t\t\trecipe_id = this.model.id;\n\n\t\tapp.instance.content.setActiveAlertsPerRecipe.call(app.instance, recipe_id);\n\t\tapp.instance.show_all_view.deactivate();\n\t\tthis.model.set('viewing', true);\n\t\t// Set the hash\n\t\trouting.router.navigate('my-recipes/manual');\n\n\t\treturn this;\n\n\t},\n\n\tkillEvent: function(e){\n\t\te.stopPropagation();\n\t},\n\n\tsetActiveCssState: function(model, viewing){\n\n\t\tthis.$el.find('.drawer-list-outer').toggleClass('active', viewing);\n\t\tthis.$el.find('.inputs-container input').prop('checked', viewing);\n\n\t\treturn this;\n\t}\n\n\n});","views.RecipeEditor = views.AA_BaseRecipe.extend({\n\n\tevents: _.extend({\n\t\t'click .modal-outer': 'stopPropagation' // Stop propagation so that clicks in our modal form don't trigger a click on the drawer item\n\t}, views.AA_BaseRecipe.prototype.events),\n\n\tinitialize: function(opts){\n\t\t// console.log('here',opts.model.options.set_event_tag_ids[0])\n\t\tvar recipe_info = this.separateSchemaFromEvent(opts.model.options),\n\t\t\t\trecipe_options = recipe_info.settingsInfo,\n\t\t\t\tset_event_options = recipe_info.eventInfo,\n\t\t\t\trequired_keys = [];\n\n\t\t\t\t// console.log(recipe_info)\n\n\t\tvar sous_chef_options = collections.sous_chefs.instance.findWhere({slug: opts.model.sous_chef}).get('options'),\n\t\t\t\tsous_chef_info = this.separateSchemaFromEvent(sous_chef_options),\n\t\t\t\tsous_chef_schema = sous_chef_info.settingsInfo,\n\t\t\t\tset_event_schema = sous_chef_info.eventInfo;\n\n\t\t// console.log(opts.model)\n\n\n\t\t// Add the name manually\n\t\tvar recipe_schema_with_values = _.extend({\n\t\t\t\tname: {\n\t\t\t\t\tinput_type: 'text',\n\t\t\t\t\tselected: opts.model.name,\n\t\t\t\t\trequired: true\n\t\t\t\t}\n\t\t\t},\n\t\t\tthis.combineFormSchemaWithVals(sous_chef_schema, recipe_options)\n\t\t\t);\n\n\t\t// Set our list of required keys\n\t\t_.each(recipe_schema_with_values, function(val, key){\n\t\t\tif (val.required){\n\t\t\t\trequired_keys.push(key);\n\t\t\t}\n\t\t});\n\n\t\tvar set_event_schema_with_values = this.combineFormSchemaWithVals(set_event_schema, set_event_options);\n\n\t\t// Store these for use throughout this view\n\t\tthis.form_schema = recipe_schema_with_values;\n\t\tthis.event_schema = set_event_schema_with_values;\n\t\tthis.full_schema = $.extend(true, {}, recipe_schema_with_values, set_event_schema_with_values);\n\t\tthis.required_keys = required_keys;\n\n\t\t// Cache some jQuery selectors\n\t\tthis.$form = this.$el.find('form');\n\t\tthis.$defaultEvents = this.$el.find('.default-event-container');\n\n\t\t// Bake the modal container and form elements\n\t\tthis.render();\n\t\t// // Init the title searcher, disable pikaday\n\t\tthis.postRender({search: true});\n\t\tthis.updateScheduleByLayout(); // calling this with nothing will trigger a change event on the dropdown which will trigger a layout\n\n\t\treturn this;\n\t},\n\n\trender: function(){\n\t\tvar markup = '',\n\t\t\t\trecipe_schema = this.form_schema,\n\t\t\t\tdefault_event_markup;\n\n\t\t// Bake the initial form data\n\t\t_.each(recipe_schema, function(fieldData, fieldName){\n\t\t\tmarkup += this.bakeFormInputRow.call(this, fieldName, fieldData);\n\t\t}, this);\n\n\t\tthis.$form.prepend(markup);\n\n\t\tdefault_event_markup = this.renderDefaultEvent();\n\n\t\tthis.$defaultEvents.html(default_event_markup);\n\n\t\treturn this;\n\t},\n\n\trenderDefaultEvent: function(){\n\t\tvar markup = '',\n\t\t\t\tdefault_event_schema = this.event_schema;\n\n\t\t// Bake the initial form data\n\t\t_.each(default_event_schema, function(fieldData, fieldName){\n\t\t\tmarkup += this.bakeFormInputRow.call(this, fieldName, fieldData, 'default_event');\n\t\t}, this);\n\n\t\treturn markup\n\t},\n\t\n\tstopPropagation: function(e){\n\t\te.stopPropagation();\n\n\t\treturn this;\n\t}\n\n});","views.SettingFacebookPage = views.AA_BaseSettingListItemRecipe.extend({\n\n\tinitialize: function(options){\n\n\t\tthis.default_model_opts = {\n\t\t\tsous_chef: 'facebook-page-to-event',\n\t\t\tname: app.defaults.staff_facebook_page_to_promotion_recipe_name,\n\t\t\toptions: {\n\t\t\t\tsearch_query: pageData.org.homepage\n\t\t\t},\n\t\t\tvalidate: function(attrs){\n\t\t\t\tif (!attrs.options.search_query){\n\t\t\t\t\treturn 'You must supply a homepage for this recipe to be valid';\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tthis.options = options;\n\n\t\t// If we've defined a `template` and a `parentEl` this view can render \n\t\tthis.render();\n\n\t\t// If we're creating this from an add button\n\t\t// add an empty model and a few other things\n\t\tthis.checkIfNew();\n\n\t\t// Cache some initial values and set listeners\n\t\tthis.initializeBase();\n\t\t\n\t\t// Load initial value from data\n\t\t// If we want to according to `keepPreviousValueIfExists`\n\t\tthis.setVals(['options[page_name]']);\n\n\t\t// Do some post initialization setup\n\t\tthis.postRender();\n\n\t\treturn this;\n\t}\n\n});","views.SettingImpactTag = views.AA_BaseSetting.extend({\n\n\ttagName: 'li',\n\n\tinitialize: function(){\n\n\n\t\t// Create the inner html from our subject tag template\n\t\tthis.render();\n\n\t\t// If we're creating this from an add button\n\t\t// add an empty model and a few other things\n\t\tthis.checkIfNew();\n\n\t\t// Cache some initial values and set listeners\n\t\tthis.initializeBase();\n\n\t\t// Load initial value from data\n\t\t// If we want to according to `keepPreviousValueIfExists`\n\t\tthis.setVals(['name', 'color', 'category', 'level']);\n\t\tthis.initColorPicker('impact-tag');\n\n\t\t// Do some post initialization setup\n\t\tthis.postRender();\n\n\t\treturn this;\n\t},\n\n\tcheckIfNew: function(){\n\t\tif (!this.model){\n\t\t\tthis.model = new models.impact_tag.Model({});\n\t\t\tcollections.impact_tags.instance.add(this.model);\n\t\t\tthis.$el.find('.js-parent-form').attr('data-new', 'true');\n\t\t}\n\t\treturn this;\n\t},\n\n\trender: function(){\n\n\t\tvar subject_tag_markup = templates.impactTagFactory({});\n\n\t\tthis.$el.html(subject_tag_markup);\n\n\t\treturn this;\n\t}\n\n\n});","views.SettingPassword = views.AA_BaseSetting.extend({\n\n\tinitialize: function(options){\n\t\tthis.options = options;\n\n\t\t// Cache some initial values and set listeners\n\t\tthis.initializeBase();\n\n\t\tvar $oldField\t\t\t= this.getPasswordEl('old');\n\t\tvar $newField \t\t= this.getPasswordEl('new');\n\t\tvar $confirmField = this.getPasswordEl('confirm');\n\n\t\tthis.fields = [$oldField, $newField, $confirmField];\n\n\t\tthis.listenTo(this.model, 'change:data_needs_correction', this.setDataCorrection);\n\t\tthis.model.set('patch', true);\n\n\t\t// Do some post initialization setup\n\t\tthis.postRender();\n\n\t\treturn this;\n\t},\n\n\tinputHasChanged: function(e){\n\t\te.preventDefault();\n\t\te.stopPropagation();\n\t\t// Save the input to an attribute unless we just hit the return key\n\t\t// In that case, submit the form\n\t\tvar return_key_code = 13,\n\t\t\t\tesc_key_code = 27,\n\t\t\t\tincoming_val;\n\n\t\tif (e.keyCode == return_key_code){\n\t\t\tthis.saveModel(e);\n\t\t} else if (e.keyCode == esc_key_code){\n\t\t\tthis.revertToPreviousSettingVal(e);\n\t\t} else {\n\t\t\tincoming_val = this.getCurrentFormData();\n\t\t\tthis.model.set('input_val', incoming_val);\n\t\t\t// console.log(incoming_val)\n\t\t\tthis.compareFormData();\n\t\t}\n\n\t\treturn this;\n\t},\n\tgetPasswordEl: function(which){\n\t\treturn this.$form.find('input[type=\"password\"][data-which=\"'+which+'\"]');\n\t},\n\n\tsetDataCorrection: function(model, value){\n\t\tthis.$form.attr('data-needs-correction', value.toString());\n\t\treturn this;\n\t},\n\n\tcompareFormData: function(){\n\t\tvar old_password = this.getPasswordEl('old').val(),\n\t\t\t\tnew_password = this.getPasswordEl('new').val(),\n\t\t\t\tconfirm_password = this.getPasswordEl('confirm').val(),\n\t\t\t\tall_good = (old_password && new_password && (new_password === confirm_password));\n\n\t\tif (old_password || new_password || confirm_password){\n\t\t\tthis.flagErrors();\n\t\t}\n\t\t\n\t\tvar confirm_error = ((new_password || confirm_password) && (new_password != confirm_password) ) ? true : false;\n\t\tthis.flagErrors(this.getPasswordEl('confirm'), confirm_error);\n\n\n\t\tthis.model.set('data_changed', all_good);\n\n\t\treturn this;\n\t},\n\n\trevertToPreviousSettingVal: function(){\n\t\tthis.model.set('data_changed', 'false');\n\t\tthis.model.set('data_inputted', 'false');\n\n\t\tthis.fields.forEach(function($el){\n\t\t\t$el.val('');\n\t\t});\n\n\t\treturn true;\n\t},\n\n\tflagErrors: function($el, needsCorrection){\n\t\tif ($el){\n\t\t\t$el.toggleClass('js-needs-correction', needsCorrection);\n\t\t} else {\n\t\t\tthis.fields.forEach(function($el){\n\t\t\t\tvar val = $el.val().trim(),\n\t\t\t\t\t\tis_empty = val == '';\n\n\t\t\t\t$el.toggleClass('js-needs-correction', is_empty);\n\t\t\t})\n\t\t\t\n\t\t}\n\t}\n\n});","views.SettingRssFeed = views.AA_BaseSettingListItemRecipe.extend({\n\n\n\tinitialize: function(options){\n\n\t\tthis.default_model_opts =  {\n\t\t\tsous_chef: 'rss-feed-to-article',\n\t\t\tname: app.defaults.rss_feed_recipe_name\n\t\t};\n\t\t\n\t\tthis.options = options;\n\n\t\t// If we've defined a `template` and a `parentEl` this view can render \n\t\tthis.render();\n\n\t\t// If we're creating this from an add button\n\t\t// add an empty model and a few other things\n\t\tthis.checkIfNew();\n\n\t\t// Cache some initial values and set listeners\n\t\tthis.initializeBase();\n\t\t\n\t\t// Load initial value from data\n\t\t// If we want to according to `keepPreviousValueIfExists`\n\t\tthis.setVals(['options[feed_url]']);\n\n\t\t// Do some post initialization setup\n\t\tthis.postRender();\n\n\t\treturn this;\n\t}\n\n});","views.SettingSingle = views.AA_BaseSetting.extend({\n\n\tinitialize: function(options){\n\t\tthis.options = options;\n\n\t\t// If we've defined a `template` and a `parentEl` this view can render \n\t\tthis.render();\n\n\t\t// Cache some initial values and set listeners\n\t\tthis.initializeBase();\n\t\t\n\t\t// Load initial value from data\n\t\t// If we want to according to `keepPreviousValueIfExists`\n\t\tthis.setVals();\n\n\t\t// Do some post initialization setup\n\t\tthis.postRender();\n\n\t\treturn this;\n\t},\n\n\trender: function(){\n\t\tvar template = this.options.template || this.template;\n\t\tvar parent_el = this.options.parentEl || this.parentEl;\n\n\t\tif (template){\n\t\t\tthis.$el.html(template( {} ));\n\t\t\tif (parent_el){\n\t\t\t\t$(parent_el).append(this.el);\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tpostSaveHook: function(){\n\t\tvar required_fields = ['homepage', 'timezone'];\n\n\t\trequired_fields.forEach(function(requiredField){\n\t\t\tvar saved_model_name = this.model.get('name'),\n\t\t\t\t\tsaved_model_value = this.model.get('value');\n\t\t\tif (requiredField == saved_model_name){\n\t\t\t\tpageData.org[requiredField] = saved_model_value;\n\t\t\t}\n\t\t}, this);\n\n\t\tif (pageData.org.homepage && pageData.org.timezone){\n\t\t\t$('#promotion').attr('data-required-fields-set', 'true');\n\t\t\t\n\t\t}\n\t}\n\n});","views.SettingStaffTwitterList = views.AA_BaseSettingListItemRecipe.extend({\n\n\n\tinitialize: function(options){\n\t\t\n\t\tthis.default_model_opts = {\n\t\t\tsous_chef: 'twitter-list-to-event',\n\t\t\tname: app.defaults.staff_twitter_list_to_promotion_recipe_name,\n\t\t\toptions: {\n\t\t\t\tsearch_query: pageData.org.homepage\n\t\t\t},\n\t\t\tvalidate: function(attrs){\n\t\t\t\tif (!attrs.options.search_query){\n\t\t\t\t\treturn 'You must supply a homepage for this recipe to be valid';\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tthis.options = options;\n\n\t\t// If we've defined a `template` and a `parentEl` this view can render \n\t\tthis.render();\n\n\t\t// If we're creating this from an add button\n\t\t// add an empty model and a few other things\n\t\tthis.checkIfNew();\n\n\t\t// Cache some initial values and set listeners\n\t\tthis.initializeBase();\n\t\t\n\t\t// Load initial value from data\n\t\t// If we want to according to `keepPreviousValueIfExists`\n\t\tthis.setVals(['options[list_owner_screen_name]', 'options[list_slug]']);\n\n\t\t// Do some post initialization setup\n\t\tthis.postRender();\n\n\t\treturn this;\n\t}\n\n});","views.SettingSubjectTag = views.AA_BaseSetting.extend({\n\n\ttagName: 'li',\n\n\tinitialize: function(){\n\n\t\t// Create the inner html from our subject tag template\n\t\tthis.render();\n\n\t\t// If we're creating this from an add button\n\t\t// add an empty model and a few other things\n\t\tthis.checkIfNew();\n\n\t\t// Cache some initial values and set listeners\n\t\tthis.initializeBase();\n\n\t\t// Load initial value from data\n\t\t// If we want to according to `keepPreviousValueIfExists`\n\t\tthis.setVals(['name', 'color']);\n\t\tthis.initColorPicker('subject-tag');\n\n\t\t// Do some post initialization setup\n\t\tthis.postRender();\n\n\t\treturn this;\n\t},\n\n\tcheckIfNew: function(){\n\t\tif (!this.model){\n\t\t\tthis.model = new models.subject_tag.Model({});\n\t\t\tcollections.subject_tags.instance.add(this.model);\n\t\t\tthis.$el.find('.js-parent-form').attr('data-new', 'true');\n\t\t}\n\t\treturn this;\n\t},\n\n\trender: function(){\n\n\t\tvar subject_tag_markup = templates.subjectTagFactory({});\n\n\t\tthis.$el.html(subject_tag_markup);\n\n\t\treturn this;\n\t}\n\n});","views.SettingTwitterUser = views.AA_BaseSettingListItemRecipe.extend({\n\n\n\tinitialize: function(options){\n\t\t\n\t\tthis.default_model_opts =  {\n\t\t\tsous_chef: 'twitter-user-to-event',\n\t\t\tname: app.defaults.staff_twitter_user_to_promotion_recipe_name,\n\t\t\toptions: {\n\t\t\t\tsearch_query: pageData.org.homepage\n\t\t  },\n\t\t\tvalidate: function(attrs){\n\t\t\t\tif (!attrs.options.search_query){\n\t\t\t\t\treturn 'You must supply a homepage for this recipe to be valid';\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tthis.options = options;\n\n\t\t// If we've defined a `template` and a `parentEl` this view can render \n\t\tthis.render();\n\n\t\t// If we're creating this from an add button\n\t\t// add an empty model and a few other things\n\t\tthis.checkIfNew();\n\n\t\t// Cache some initial values and set listeners\n\t\tthis.initializeBase();\n\t\t\n\t\t// Load initial value from data\n\t\t// If we want to according to `keepPreviousValueIfExists`\n\t\tthis.setVals(['options[screen_name]']);\n\n\t\t// Do some post initialization setup\n\t\tthis.postRender();\n\n\t\treturn this;\n\t}\n\n});","views.ShowAllRecipes = Backbone.View.extend({\n\n\ttagName: 'div',\n\n\tclassName: 'drawer-container',\n\n\tevents: {\n\t\t'click .drawer-list-outer:not(.active)': 'setState'\n\t},\n\n\tinitialize: function(){\n\t\t// console.log(this.model.toJSON())\n\t\t// this.listenTo(this.model, 'change:active', this.styleLayout);\n\t\t// this.listenTo(this.model, 'change:active', this.filter);\n\n\t},\n\n\trender: function(hasRecipes){\n\t\tvar tag_markup = templates.drawerMyRecipesPrepFactory({hasRecipes: hasRecipes});\n\n\t\tthis.$el.html(tag_markup);\n\t\t// Set its state to active on render, if our view variable is set to all\n\t\tthis.styleLayout(true);\n\t\t// this.setState();\n\t\treturn this;\n\t},\n\n\tsetState: function(){\n\t\tthis.styleLayout(true);\n\t\tthis.filter();\n\t},\n\n\tstyleLayout: function(mode){\n\n\t\t// Set the other one to false\n\t\tcollections.recipes.instance.where({viewing: true}).forEach(function(accountRecipe){\n\t\t\taccountRecipe.set('viewing', false);\n\t\t});\n\n\t\t// This is either the `all` or the id of the current recipe\n\t\tthis.$el.find('.drawer-list-outer').toggleClass('active', mode);\n\t\tthis.$el.find('.inputs-container input').prop('checked', mode);\n\n\t},\n\n\tfilter: function(){\n\t\t// Pass `all` as the recipe id, which `setActiveAlertsPerRecipe` will figure out what to do with\n\t\tapp.instance.content.setActiveAlertsPerRecipe.call(app.instance, 'all');\n\n\t\t// Clear the hash\n\t\trouting.router.navigate('my-recipes');\n\t},\n\n\tdeactivate: function(){\n\t\tthis.styleLayout(false);\n\t}\n\n\n\n});","views.SousChefDrawerItem = Backbone.View.extend({\n\n\ttagName: 'li',\n\n\tclassName: 'drawer-list-item',\n\n\tinitialize: function(){\n\n\t\treturn this;\n\t},\n\n\trender: function(){\n\t\tvar drawer_list_item_markup = templates.sousChefDrawerItemFactory( _.extend(this.model.toJSON(), helpers.templates) );\n\t\tthis.$el.html(drawer_list_item_markup);\n\t\treturn this;\n\t}\n\n});","views.SousChefForm = Backbone.View.extend({\n\n\ttagName: 'div',\n\n\tclassName: 'article-detail-wrapper mode-content',\n\n\tevents: {\n\t\t'click .toggle-default-event': 'toggleDefaults',\n\t\t'submit form': 'save'\n\t},\n\n\tinitialize: function(){\n\t\tthis._subviews = [];\n\t\tthis.listenTo(this.model, 'change:destroy', this.destroy);\n\t\tthis.listenTo(this.model, 'change:set_default_event', this.showHideDefaults);\n\n\t\treturn this;\n\t},\n\n\trender: function() {\n\t\tvar river_item_markup = templates.sousChefFormFactory( _.extend(this.model.toJSON(), helpers.templates) );\n\t\tthis.$el.html(river_item_markup).attr('data-mode','create-new');\n\t\tthis.$form = this.$el.find('form');\n\t\tthis.$defaultEvents = this.$el.find('.default-event-container');\n\t\tthis.$defautEventsBtn = this.$el.find('.toggle-default-event');\n\t\tthis.$submitMsg = this.$el.find('.submit-msg');\n\t\tif (this.model.get('set_default_event')) {\n\t\t\tthis.$defaultEvents.show();\n\t\t\tthis.showHideDefaults();\n\t\t}\n\n\t\tthis.postRender();\n\t\treturn this;\n\t},\n\n\tpostRender: function(){\n\t\tthis.bakeRecipeCreator();\n\n\t\treturn this;\n\t},\n\n\tbakeRecipeCreator: function(){\n\t\tvar event_creator_view = new views.RecipeCreator({el: this.el, sousChef: this.model.toJSON()})\n\t\tthis._subviews.push(event_creator_view);\n\n\t\tthis.$el.append(event_creator_view.el);\n\n\t\tthis.event_creator_view = event_creator_view;\n\n\t\treturn this;\n\t},\n\n\tsave: function(e){\n\t\te.preventDefault();\n\n\t\tvar that = this;\n\n\t\tvar recipe_creator_view = this.event_creator_view,\n\t\t    set_default_event = this.model.get('set_default_event'),\n\t\t    form_data = recipe_creator_view.getSettings(set_default_event);\n\n\t\tvar new_recipe_creator_model = new models.recipe_creator.Model; \n\n\t\tvar required_keys = recipe_creator_view.required_keys;\n\n\t\tthis.event_creator_view.validate(required_keys, form_data, function(err, msg){\n\t\t\tif (!err){\n\t\t\t\tnew_recipe_creator_model.save(form_data, {\n\t\t\t\t\terror: function(model, response, options){\n\t\t\t\t\t\tvar err = response.responseJSON;\n\t\t\t\t\t\trecipe_creator_view.printMsgOnSubmit(true, 'Error '+err.status+': ' + err.message.replace(/\\n/g, '<br/><br/>'));\n\t\t\t\t\t},\n\t\t\t\t\tsuccess: function(model, response, options){\n\t\t\t\t\t\tthat.render();\n\t\t\t\t\t\tthat.flashSubmitMsg(false, 'Recipe saved!');\n\t\t\t\t\t\t// Give it some dummy stuff so it can appear in the drawer\n\t\t\t\t\t\tvar id = response.id;\n\t\t\t\t\t\tmodel.set('event_counts', null);\n\t\t\t\t\t\t// TEMPORARY, this might be set on the server at some point\n\t\t\t\t\t\tmodel.set('set_default_event', set_default_event);\n\t\t\t\t\t\tmodel.set('id', id);\n\t\t\t\t\t\t// TEMPORARY, should this be ordered this way?\n\t\t\t\t\t\t// Add this as the second element in the array \n\t\t\t\t\t\tcollections.recipes.instance.add(model, {at: 0}); \n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\trecipe_creator_view.printMsgOnSubmit(err, msg);\n\t\t\t}\n\n\t\t}, this);\n\n\t},\n\n\tflashSubmitMsg: function(error, msg){\n\t\tvar class_name = 'success';\n\t\tif (error) class_name = 'fail';\n\t\tthis.$submitMsg.removeClass('success').removeClass('fail');\n\t\t// Fade out message, then make sure it's visible for the next time\n\t\tthis.$submitMsg.addClass(class_name).html(msg).delay(7000).fadeOut(500).delay(750)\n           .queue(function(next) { \n           \t$(this).html('').removeClass(class_name).show();\n           \tnext(); \n           })\n\t},\n\n\ttoggleDefaults: function(){\n\t\tthis.model.set('set_default_event', !this.model.get('set_default_event') )\n\t},\n\n\tshowHideDefaults: function(){\n\t\tvar open = this.model.get('set_default_event'),\n\t\t\t\tslide_duration = 350;\n\t\tif (open){\n\t\t\tthis.$defautEventsBtn.html('Enabled').attr('data-status', 'true');\n\t\t\tthis.$defaultEvents.slideDown(slide_duration, 'easeOutQuint');\n\t\t} else {\n\t\t\tthis.$defautEventsBtn.html('Disabled').attr('data-status', 'false');\n\t\t\tthis.$defaultEvents.slideUp(slide_duration, 'easeOutQuint');\n\t\t}\n\t}\n\n});","views.Tag = views.AA_BaseTag.extend({\n\n\ttagName: 'li',\n\n\tclassName: 'tag-wrapper',\n\n\tevents: {\n\t\t'click': 'toggle'\n\t},\n\n\tinitialize: function(){\n\n\t\tthis.listenTo(this.model, 'change:active', this.styleLayout);\n\t\t// this.listenTo(this.model, 'change:active', this.filter);\n\t\t// this.listenTo(models.tag_facets, 'change', this.updateLayoutByCount);\n\n\t},\n\n\trender: function(){\n\t\tvar tag_markup = templates.tagFactory( _.extend(this.model.toJSON(), helpers.templates) );\n\n\t\tthis.$el.html(tag_markup);\n\t\tthis.updateLayoutByCount();\n\t\t// Set its border left and bg color to the appropriate color value in its data\n\t\tthis.styleLayout();\n\t\t// On initialize, hide tags that aren't in use\n\t\t// But on filter, mark them as disabled \n\t\t// This is to avoid jumpy UI\n\t\tthis.hasInitialized = true;\n\t\treturn this;\n\t},\n\n\tstyleLayout: function(){\n\t\tvar is_active = this.model.get('active') || false,\n\t\t\t\tbg_color = this.model.get('color'),\n\t\t\t\tset_bg_color = 'auto',\n\t\t\t\tset_text_color = 'auto';\n\n\t\tthis.$el.find('.tag-container')\n\t\t\t\t\t\t.css('border-left-color', bg_color);\n\n\t\t// If this is active\n\t\t// Give it an active class\n\t\t// And set its background color to the one defined in its model\n\t\t// And the appropriate text color\n\t\tif (is_active) {\n\t\t\tset_bg_color = bg_color;\n\t\t\tset_text_color = this.whiteOrBlack(set_bg_color);\n\t\t}\n\n\t\tthis.$el.toggleClass('active', is_active);\n\t\tthis.$el.find('.tag-container')\n\t\t\t\t\t\t.css({'background-color': set_bg_color, 'color': set_text_color});\n\n\t\treturn this;\n\t},\n\n\ttoggle: function(){\n\t\tthis.model.toggle('active');\n\t\treturn this;\n\t},\n\n\tupdateLayoutByCount: function(){\n\t\tvar count = this.getCount(),\n\t\t\t\tshow_el = count > 0;\n\n\t\tthis.setCount(count);\n\n\t\tif (this.hasInitialized){\n\t\t\tthis.$el.toggleClass('disabled', !show_el);\n\t\t} else {\n\t\t\tthis.$el.toggle(show_el);\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tsetCount: function(count){\n\n\t\tthis.$el.find('.tag-count').html(count);\n\n\t\treturn this;\n\n\t}\n\n\n});","views.TagEventFilter = views.Tag.extend({\n\n\tinitialize: function(options){\n\t\t// Do everything our view.Tag does\n\t\tviews.Tag.prototype.initialize.call(this);\n\t\t// this.listenTo(this.model, 'change:active', this.styleLayout);\n\t\tthis.listenTo(this.model, 'change:active', this.setOpts);\n\t\tthis.listenTo(models.event_tag_facets, 'change', this.updateLayoutByCount);\n\n\t\tthis.filterModel = options.filterModel;\n\t\t// this.tagFacets   = options.tagFacets;\n\n\t},\n\n\tsetOpts: function(tagModel, isActive){\n\t\tvar info = this.getImportantModelInfo(),\n\t\t\t\tgroup = info.group,\n\t\t\t\tvalue = _.values(info.id_key_value)[0];\n\n\t\tvar filter_model = this.filterModel;\n\n\t\tvar tag_list = filter_model.get(group) || [];\n\n\t\tif (group == 'tags'){\n\t\t\tgroup = 'tag_ids' // Do more massaging to handle hwo the API wants this parameter\n\t\t}\n\n\t\tif (isActive){\n\t\t\ttag_list.push(value);\n\t\t}else{\n\t\t\ttag_list = _.without(tag_list, value);\n\t\t}\n\n\t\tif (tag_list.length){\n\t\t\tfilter_model.set(group, tag_list);\n\t\t} else {\n\t\t\tfilter_model.unset(group);\n\t\t}\n\n\t\tfilter_model.trigger('filter');\n\n\t\treturn this;\n\t},\n\n\t// Will return a single key/value pair of either the `id` and its id or the `name` and its name (for categories and levels)\n\tgetImportantModelInfo: function(){\n\t\tvar group = this.model.collection.metadata('filter'),\n\t\t\t\tmodel_json = this.model.toJSON(),\n\t\t\t\tinfo = _.pick(model_json, 'id'); // For tags, this is the id, but for tag attributes it's the name\n\n\n\t\t// Change our group name from `impact_tag_ids` to `tags`, which is how that's nested in our tag facet coming back from the api\n\t\t// We don't set it to this by default because our sorter requires that as the key. Instead of having two separate things, we do some massaging here\n\t\tif (/_tag_ids/.test(group)){\n\t\t\tgroup = 'tags';\n\t\t}\n\n\t\t// So do some testing if that came out to empty and take the name instead if so\n\t\tif (_.isEmpty(info)){\n\t\t\tinfo = _.pick(model_json, 'name'); \n\t\t}\n\n\t\treturn {id_key_value: info, group: group};\n\t},\n\n\t// Used to figure out, for tags, categories and levels\n\tgetCount: function(){\n\t\tvar info = this.getImportantModelInfo(),\n\t\t\t\tgroup = info.group,\n\t\t\t\tfind_obj = {};\n\n\t\tvar replacements = {\n\t\t\tcategories: 'category',\n\t\t\tlevels: 'level'\n\t\t};\n\n\t\t// Do one last bit of massaging to remove the `s` from the group, which will give our key name\n\t\t// It's current `{name: 'internal'}` but that should be `{level: 'internal'}`\n\t\tif (replacements[group]){\n\t\t\tfind_obj[replacements[group]] = _.values(info.id_key_value)[0];\n\t\t} else {\n\t\t\tfind_obj = info.id_key_value;\n\t\t}\n\n\t\tvar facet = models.event_tag_facets.get(group);\n\t\t// var facet = this.tagFacets.get(group);\n\t\tvar countInfo = _.findWhere(facet, find_obj) || {count: 0};\n\n\t\treturn countInfo.count;\n\n\t}\n\n\n\n});","views.TagSectionNav = views.Tag.extend({\n\n\tinitialize: function(){\n\t\t// Do everything our view.Tag does\n\t\tviews.Tag.prototype.initialize.call(this);\n\t\t// this.listenTo(this.model, 'change:active', this.styleLayout);\n\t\tthis.listenTo(this.model, 'change:active', this.setOpts);\n\t\tthis.listenTo(models.tag_facets, 'change', this.updateLayoutByCount);\n\n\t},\n\n\tsetOpts: function(tagModel, isActive){\n\t\tvar info = this.getImportantModelInfo(),\n\t\t\t\tgroup = info.group,\n\t\t\t\tvalue = _.values(info.id_key_value)[0];\n\n\t\tif (/_tags/.test(group)){\n\t\t\tgroup = 'tag_ids' // Do more massaging to handle hwo the API wants this parameter\n\t\t}\n\t\t\n\t\tvar tag_list = models.content_item_filters.get(group) || [];\n\n\t\tif (isActive){\n\t\t\ttag_list.push(value);\n\t\t}else{\n\t\t\ttag_list = _.without(tag_list, value);\n\t\t}\n\n\n\t\tif (tag_list.length){\n\t\t\tmodels.content_item_filters.set(group, tag_list);\n\t\t} else {\n\t\t\tmodels.content_item_filters.unset(group);\n\t\t}\n\n\t\tmodels.content_item_filters.trigger('filter');\n\n\t\treturn this;\n\t},\n\n\t// Will return a single key/value pair of either the `id` and its id or the `name` and its name (for categories and levels)\n\tgetImportantModelInfo: function(){\n\t\tvar group = this.model.collection.metadata('filter'),\n\t\t\t\tmodel_json = this.model.toJSON(),\n\t\t\t\tinfo = _.pick(model_json, 'id'); // For tags, this is the id, but for tag attributes it's the name\n\n\t\t// Change our group name from `subject_tag_ids` to `subject_tags` and same for impact tags\n\t\t// We don't set it to this by default because our sorter requires that as the key. Instead of having two separate things, we do some massaging here\n\t\tif (/_tag_ids/.test(group)){\n\t\t\tgroup = group.replace('_tag_ids', '_tags');\n\t\t}\n\n\t\t// So do some testing if that came out to empty and take the name instead if so\n\t\tif (_.isEmpty(info)){\n\t\t\tinfo = _.pick(model_json, 'name'); \n\t\t}\n\n\t\treturn {id_key_value: info, group: group};\n\t},\n\n\t// Used to figure out, for tags, categories and levels\n\tgetCount: function(){\n\t\tvar info = this.getImportantModelInfo(),\n\t\t\t\tgroup = info.group,\n\t\t\t\tfind_obj = {};\n\n\t\tvar replacements = {\n\t\t\tcategories: 'category',\n\t\t\tlevels: 'level'\n\t\t};\n\n\t\t// Do one last bit of massaging to remove the `s` from the group, which will give our key name\n\t\t// It's current `{name: 'internal'}` but that should be `{level: 'internal'}`\n\t\tif (replacements[group]){\n\t\t\tfind_obj[replacements[group]] = _.values(info.id_key_value)[0];\n\t\t} else {\n\t\t\tfind_obj = info.id_key_value;\n\t\t}\n\n\t\tvar facet = models.tag_facets.get(group);\n\t\tvar countInfo = _.findWhere(facet, find_obj) || {count: 0};\n\n\t\treturn countInfo.count;\n\n\t}\n\n\n\n});","routing = {\n\tRouter: Backbone.Router.extend({\n\t\tinitialize: function(section){\n\t\t\t// Stash an array of history states\n\t\t\tthis.history = [];\n\t\t\tthis.listenTo(this, 'route', function (name, args) {\n\t\t\t\t// For some reason, a second event is triggered where args is undefined, it could be a replacement call or something\n\t\t\t\t// For now, just ignore when undefined, when it's empty it's null\n\t\t\t\tif (!_.isUndefined(args[1])){\n\t\t\t\t\tthis.history.push({\n\t\t\t\t\t\tname : name,\n\t\t\t\t\t\tmode : args[0],\n\t\t\t\t\t\tids : args[1],\n\t\t\t\t\t\tfragment : Backbone.history.fragment\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Initialize the routes for this section\n\t\t\trouting.init[section].call(this);\n\t\t\t// And any common routes we want for every page\n\t\t\trouting.init.common.call(this);\n\t\t},\n\t\tloadRecipesAlerts: function(mode, recipe_id){\n\t\t\tif (recipe_id == 'manual'){\n\t\t\t\trecipe_id = -1;\n\t\t\t}\n\t\t\trecipe_id = +recipe_id;\n\t\t\t// `setModeOnly` is set to initialize the show all view of the recipe\n\t\t\t// We're going to trigger that manually right afterwards so we have this hacky variable to tell `ApprovalRiver.js` not to initialize the show all filter\n\t\t\tapp.instance.pause_init = true;\n\t\t\tthis.setModeOnly(mode);\n\t\t\tcollections.recipes.instance.findWhere({id: recipe_id}).trigger('filter');\n\t\t},\n\t\tsetModeOnly: function(mode){\n\t\t\tmodels.section_mode.set('mode', mode);\n\t\t},\n\t\tcompareArticles: function(ids, sortBy, sortAscending){\n\t\t\t// Don't load the initial values\n\t\t\tapp.instance.pause_init = true;\n\n\t\t\tvar is_compare_mode = (models.section_mode.get('mode') == 'compare');\n\n\t\t\tids = ids.replace(/\\+/g, ',');\n\n\t\t\tvar sort_ascending_str = (sortAscending === 'true') ? '' : '-';\n\n\t\t\tvar metrics_list = _.pluck(collections.dimensions.instance.cloneMetrics(), 'name');\n\t\t\tvar metric_str = (_.contains(metrics_list, sortBy)) ? 'metrics.' : '';\n\n\t\t\tvar fetch_params = {\n\t\t\t\tids: ids,\n\t\t\t\tsort: sort_ascending_str + metric_str + sortBy\n\t\t\t};\n\n\t\t\t// If already set this won't do anything\n\t\t\tmodels.section_mode.set('mode', 'compare');\n\t\t\tcollections.article_comparisons.instance.fetch({data: fetch_params}, {merge: true})\n\t\t\t\t.then(function(models, b, c){\n\t\t\t\t\tcollections.article_comparisons.instance.trigger('sortMetricHeaders');\n\t\t\t\t\tapp.instance.staged_article_comparison_models = collections.article_comparisons.instance.slice(0);\n\t\t\t\t\tapp.instance.pause_init = false;\n\t\t\t\t});\n\n\t\t},\n\t\tdetailArticle: function(id){\n\t\t\tvar is_detail_mode = (models.section_mode.get('mode') == 'detail');\n\n\t\t\t// Make sure this is a number\n\t\t\tid = +id;\n\t\t\tif (!is_detail_mode){\n\t\t\t\tapp.instance.staged_article_detail = id;\n\t\t\t\tmodels.section_mode.set('mode', 'detail');\n\t\t\t} else {\n\t\t\t\t// .detail.loadPage(detailModelId, this.saveHash\n\t\t\t\tapp.instance.detail.loadPage.call(app.instance, id, app.instance.saveHash)\n\t\t\t\t// app.instance.detail.getDetailModelFromId.call(app.instance, id, app.instance.detail.loadPage)\n\t\t\t}\n\t\t}\n\n\t}),\n\thelpers: {\n\t\tgetMode: function(hash){\n\t\t\treturn hash.split('/')[0].replace(/#/g,'');\n\t\t},\n\t\tgetArticleIds: function(hash){\n\t\t\t// If it has a second index then it's true\n\t\t\t// If it's empty this will be undefined or \"\"\n\t\t\treturn hash.split('/')[1];\n\t\t},\n\t\texists: function(hash, articleId){\n\t\t\tvar id_regex = new RegExp(articleId)\n\t\t\treturn id_regex.test(hash);\n\t\t\treturn false;\n\t\t}\n\t}\n}","templates.init = {\n\tarticles: function(){\n\t\tthis.tagFactory = _.template( $('#tag-templ').html() );\n\t\tthis.articleSummaryDrawerFactory = _.template( $('#article-summary-drawer-templ').html() );\n\t\tthis.drawerPointers = $('#drawer-pointers-templ').html();\n\t\tthis.articleGridContainerFactory = _.template( $('#article-grid-container-templ').html() );\n\t\tthis.articleSummaryRowFactory = _.template( $('#article-summary-row-templ').html() );\n\t\tthis.articleDetailFactory = _.template( $('#article-detail-templ').html() );\n\t\tthis.articleDetailEventFactory = _.template( $('#article-detail-event-templ').html() );\n\t\tthis.articleDetailTagFactory = _.template( $('#article-detail-tag-templ').html() );\n\t\tthis.articleDetailAccountSubjectTagFactory = _.template( $('#article-detail-account-subject-tag-templ').html() );\n\t},\n\t\"approval-river\": function(){\n\t\tthis.drawerMyRecipesPrepFactory \t= _.template( $('#drawer-my-recipes-templ').html() );\n\t\tthis.drawerCreatePrep\t\t\t\t\t\t\t=  $('#drawer-create-templ').html();\n\t\tthis.alertFactory \t\t\t\t\t\t\t\t= _.template( $('#alert-templ').html() );\n\t\tthis.recipeFactory \t\t\t\t\t\t\t\t= _.template( $('#recipe-templ').html() );\n\t\tthis.recipeStaticFactory  \t\t\t\t= _.template( $('#recipe-static-templ').html() );\n\t\tthis.sousChefDrawerItemFactory \t  = _.template( $('#sous-chef-drawer-item-templ').html() );\n\t\tthis.sousChefFormFactory\t\t \t\t\t= _.template( $('#sous-chef-form-templ').html() );\n\n\t},\n\tsettings: function(){\n\t\tthis.inputActionsFactory = _.template( $('#input-actions-templ').html() );\n\t\tthis.subjectTagFactory = _.template( $('#subject-tag-templ').html() );\n\t\tthis.impactTagFactory = _.template( $('#impact-tag-templ').html() );\n\t\tthis.rssFeedRecipeFactory = _.template( $('#rss-feed-templ').html() );\n\t\tthis.staffTwitterListRecipeFactory = _.template( $('#staff-twitter-feed-templ').html() );\n\t\tthis.twitterUserRecipeFactory = _.template( $('#twitter-user-templ').html() );\n\t\tthis.facebookPageRecipeFactory = _.template( $('#facebook-page-templ').html() );\n\t\tthis.modalFactory = _.template( $('#modal-templ').html() );\n\t},\n\tsubmit: function(){\n\n\t}\n}\n\nmodels.init = {\n\tarticles: function(){\n\t\t// Keep track of the tag facet counts. Those views will listen to changes on this model to update themselves\n\t\t// Fetching new articles will update this model\n\t\tthis.tag_facets = new models.generic.Model(pageData.tags.facets);\n\t\tthis.content_item_filters = new models.filters.Model({sort_by: pageData.articleSummariesInfo.sort_by});\n\t\tthis.comparison_metrics = new models.generic.Model(pageData.comparisonMetrics);\n\t\t// Keep track of whether we're in single view or comparison view\n\t\tthis.section_mode = new models.generic.Model();\n\t\t// Create an empty object on this model to fill in later\n\t\tthis.section_mode.compare = {};\n\t},\n\t\"approval-river\": function(){\n\t\t// Keep track of whether we're in `my-recipes or 'create-new' view\n\t\tthis.section_mode = new models.generic.Model();\n\t},\n\tsettings: function(){\n\t\tthis.org.instance = new this.org.Model(pageData.org);\n\t},\n\tsubmit: function(){\n\t\t\n\t}\n}\n\ncollections.init = {\n\tarticles: function(){\n\t\t// Subject Tags\n\t\tthis.subject_tags.instance = new this.subject_tags.Collection(pageData.tags.subject);\n\t\t// What the api query parameter key is\n\t\tthis.subject_tags.instance.metadata('filter', 'subject_tag_ids');\n\n\t\t// Impact tags\n\t\tthis.impact_tags.instance = new this.impact_tags.Collection(pageData.tags.impact);\n\t\t// What the api query parameter key is\n\t\tthis.impact_tags.instance.metadata('filter', 'impact_tag_ids');\n\t\t// Impact tag categories\n\t\tthis.impact_tag_attributes.categories_instance = new this.impact_tag_attributes.Collection(pageData.tags.categories);\n\t\tthis.impact_tag_attributes.levels_instance = new this.impact_tag_attributes.Collection(pageData.tags.levels);\n\t\t// Same as above\n\t\t// These meta fields are used on click to determine the filter to be applied\n\t\tthis.impact_tag_attributes.categories_instance.metadata('filter', 'categories');\n\t\tthis.impact_tag_attributes.levels_instance.metadata('filter', 'levels');\n\n\t\t// Because tags view instances can apply to both summary drawer filtering and event filtering\n\t\t// Stash a variable here to set up which `collections.po` collection to alter\n\t\t// `collections.po.article_summaries` or `collections.po.article_detailed_events`\n\t\t// this.subject_tags.instance.metadata('po_collection', 'article_summaries');\n\t\t// this.impact_tags.instance.metadata('po_collection', 'article_summaries');\n\n\t\t// Store our full dimensions list here and via metadata `selects`, pick out which ones we care about\n\t\tthis.dimensions.instance = new this.dimensions.Collection(pageData.dimensionsInfo.dimensions);\n\t\tthis.dimensions.instance.metadata('sort_by', pageData.dimensionsInfo.sort_by);\n\t\n\t\t// Article summaries\n\t\tthis.article_summaries.instance = new this.article_summaries.Collection(pageData.articleSummariesInfo.response, {parse: true});\n\n\t\t// // This will populate the grid view based on our selection\n\t\tthis.article_comparisons.instance = new this.article_comparisons.Collection([]);\n\t\tcollections.article_comparisons.instance.metadata('sort_by', pageData.dimensionsInfo.sort_by);\n\t\tcollections.article_comparisons.instance.metadata('sort_ascending', pageData.dimensionsInfo.sort_ascending);\n\n\t\t// Articles Detail\n\t\t// This is a collection of all our fetched detailed models\n\t\tthis.articles_detailed.instance = new this.articles_detailed.Collection();\n\t\t// This will choose the article to show in the detail view\n\t\tthis.article_detailed.instance = new this.article_detailed.Collection();\n\t\t// What should its default viewing tab be?\n\t\t// TODO, also set this on initialize\n\t\tthis.article_detailed.instance.metadata('selected-tab', 'life');\n\t\t// Tags\n\t\t// This is the collection of subject tags to be populated for each article detail page\n\t\tthis.article_detailed_subject_tags.instance = new this.article_detailed_subject_tags.Collection();\n\t\t// And impact tags\n\t\tthis.article_detailed_impact_tags.instance = new this.article_detailed_impact_tags.Collection();\n\t\t// Similarly, a list of impact tag categories\n\t\tthis.article_detailed_impact_tag_attributes.categories_instance = new this.article_detailed_impact_tag_attributes.Collection();\n\t\tthis.article_detailed_impact_tag_attributes.categories_instance.metadata('which', 'categories');\n\t\t// And even more similarly, a list of impact tag levels\n\t\tthis.article_detailed_impact_tag_attributes.levels_instance = new this.article_detailed_impact_tag_attributes.Collection();\n\t\tthis.article_detailed_impact_tag_attributes.levels_instance.metadata('which', 'levels');\n\t},\n\t\"approval-river\": function(){\n\t\t// Recipes\n\t\t// Make a collection of the recipes in this account\n\t\tvar manual_recipe = {id: -1, name: 'Manually created', event_counts: {pending: pageData.manualEventsTotal}, sous_chef: 'manual-event', created: new Date().toString()};\n\t\tpageData.recipes.push(manual_recipe);\n\t\tthis.recipes.instance = new this.recipes.Collection(pageData.recipes);\n\t\t// Recipes creators\n\t\tthis.sous_chefs.instance = new this.sous_chefs.Collection(pageData.sousChefs);\n\n\t\t// This will later populate based on our selection of drawer items\n\t\tthis.loaded_alerts.recipe_all_instance = new this.loaded_alerts.Collection(pageData.eventsInfo.events);\n\t\tthis.loaded_alerts.recipe_all_instance.metadata('pagination', pageData.eventsInfo.pagination);\n\t\tthis.loaded_alerts.recipe_all_instance.metadata('total', pageData.eventsInfo.total);\n\n\t\t// this.loaded_alerts.main_river_instance = new this.loaded_alerts.Collection(pageData.eventsInfo.events);\n\t\tthis.active_alerts.instance = new this.active_alerts.Collection([]);\n\n\t\t// // // Keep track of the oldest item in this collection\n\t\t// this.loaded_alerts.instance.metadata('timestamp', pageData.alerts.min_timestamp);\n\t},\n\tsettings: function(){\n\t\t// User and org settings\n\t\tthis.user_settings.instance = new this.user_settings.Collection([pageData.user]);\n\t\tthis.settings.instance = new this.settings.Collection(pageData.orgSettingsList);\n\n\t\t// Recipes\n\t\tthis.recipes.instance = new this.recipes.Collection(pageData.recipes.all);\n\n\t\t// Tags\n\t\tthis.subject_tags.instance = new this.subject_tags.Collection(pageData.tags.subject);\n\t\tthis.impact_tags.instance  = new this.impact_tags.Collection(pageData.tags.impact);\n\t},\n\tsubmit: function(){\n\t\t// This has to exist in order to parse the created event, although I don't quite like this setup.\n\t\tthis.impact_tags.instance = new this.impact_tags.Collection(pageData.tags.impact);\n\t}\n}\n\napp.init = {\n\tarticles: function(){\n\n\t\tthis.instance = new this.Articles();\n\t},\n\t\"approval-river\": function(){\n\n\t\t// views.po.alerts = new PourOver.View('alerts', collections.po.alerts, {page_size: page_size });\n\t\t// views.po.alerts.setSort('timestamp_desc');\n\n\t\tthis.instance = new this.ApprovalRiver();//({model: new models.generic.Model });\n\t},\n\tsettings: function(){\n\t\tthis.defaults = pageData.defaultRecipeNames;\n\n\t\tthis.instance = new this.Settings();//({model: models.org.instance});\n\t},\n\tsubmit: function(){\n\t\t// Let's move towards not defining our collections globally\n\t\tvar events_collection = new collections.article_detailed_events.Collection();\n\t\tthis.instance = new this.Submit({collection: events_collection});\n\t}\n}\n\n\nrouting.init = {\n\tgo: function(section){\n\t\tthis.router = new this.Router(section); // Pass the section to the `initialize` function, which will then call our sections specific routes\n\t\tBackbone.history.start();\n\t},\n\tcommon: function(){\n\t\t// If we've specified a starting route, then set it and trigger\n\t\tif (this.starting_route) {\n\t\t\tthis.route('', function(){ \n\t\t\t\trouting.router.navigate(this.starting_route, {trigger: true});\n\t\t\t});\n\t\t}\n\t},\n\tarticles: function(){\n\t\tthis.route(':mode', 'setModeOnly');\n\t\tthis.route('compare/:ids?sort=:sort_by&asc=:asc', 'compareArticles');\n\t\tthis.route('detail/:id', 'detailArticle');\n\t\tthis.starting_route = 'compare';\n\t},\n\t\"approval-river\": function(){\n\t\tthis.route(':mode', 'setModeOnly');\n\t\tthis.route(':mode/:id', 'loadRecipesAlerts');\n\t\tthis.starting_route = 'my-recipes';\n\t},\n\tsettings: function(){\n\t\t// Nothing to see here folks, this page doesn't have any navigation\n\t},\n\tsubmit: function(){\n\t\t// Same\n\t}\n}\n\nvar init = {\n\tgo: function(){\n\t\t// this.jQueryExtensions()\n\t\t// Call the page specific functions\n\t\tvar section = $('body').attr('data-section');\n\t\t// Their `this` should be the root object so you can still say `this.` even though you're nested in the object\n\t\ttemplates.init[section].call(templates);\n\t\tmodels.init[section].call(models);\n\t\tcollections.init[section].call(collections);\n\t\tapp.init[section].call(app);\n\t\trouting.init.go.call(routing, section);\n\t}\n\n}\n\ninit.go();\n"],"sourceRoot":"/source/"}